type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(let ([v (vector 1 2)])
   42)


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v (vector 1 2)])
   42)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v (vector 1 2)])
   42)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6885 (vector 1 2)])
   42)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6885 (vector 1 2)])
   42)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6885 (let ([vecinit6887 1])
                (let ([vecinit6888 2])
                   (let ([_6891 (if (< (+ (global-value free_ptr) 24) (global-value fromspace_end))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6886 (allocate 2 (Vector Integer Integer))])
                         (let ([_6890 (vector-set! alloc6886 0 vecinit6887)])
                            (let ([_6889 (vector-set! alloc6886 1 vecinit6888)])
                               alloc6886))))))])
   42)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6885 (let ([vecinit6887 1])
                (let ([vecinit6888 2])
                   (let ([_6891 (if (< (+ (global-value free_ptr) 24) (global-value fromspace_end))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6886 (allocate 2 (Vector Integer Integer))])
                         (let ([_6890 (vector-set! alloc6886 0 vecinit6887)])
                            (let ([_6889 (vector-set! alloc6886 1 vecinit6888)])
                               alloc6886))))))])
   42)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6885 (let ([vecinit6887 1])
                (let ([vecinit6888 2])
                   (let ([_6891 (if (let ([tmp6892 (let ([tmp6893 (global-value free_ptr)])
                                                      (+ tmp6893 24))])
                                       (let ([tmp6894 (global-value fromspace_end)])
                                          (< tmp6892 tmp6894)))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6886 (allocate 2 (Vector Integer Integer))])
                         (let ([_6890 (vector-set! alloc6886 0 vecinit6887)])
                            (let ([_6889 (vector-set! alloc6886 1 vecinit6888)])
                               alloc6886))))))])
   42)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6885 (let ([vecinit6887 1])
                (let ([vecinit6888 2])
                   (let ([_6891 (if (let ([tmp6892 (let ([tmp6893 (global-value free_ptr)])
                                                      (+ tmp6893 24))])
                                       (let ([tmp6894 (global-value fromspace_end)])
                                          (< tmp6892 tmp6894)))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6886 (allocate 2 (Vector Integer Integer))])
                         (let ([_6890 (vector-set! alloc6886 0 vecinit6887)])
                            (let ([_6889 (vector-set! alloc6886 1 vecinit6888)])
                               alloc6886))))))])
   42)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit6887 = 1;
    vecinit6888 = 2;
    tmp6893 = (global-value free_ptr);
    tmp6892 = (+ tmp6893 24);
    tmp6894 = (global-value fromspace_end);
    if (< tmp6892 tmp6894)
       goto block6896;
    else
       goto block6897;
block6897:
    (collect 24)
    goto block6895;
block6896:
    _6891 = (void);
    goto block6895;
block6895:
    alloc6886 = (allocate 2 (Vector Integer Integer));
    _6890 = (vector-set! alloc6886 0 vecinit6887);
    _6889 = (vector-set! alloc6886 1 vecinit6888);
    v6885 = alloc6886;
    return 42;



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
start:
    vecinit6887 = 1;
    vecinit6888 = 2;
    tmp6893 = (global-value free_ptr);
    tmp6892 = (+ tmp6893 24);
    tmp6894 = (global-value fromspace_end);
    if (< tmp6892 tmp6894)
       goto block6896;
    else
       goto block6897;
block6897:
    (collect 24)
    goto block6895;
block6896:
    _6891 = (void);
    goto block6895;
block6895:
    alloc6886 = (allocate 2 (Vector Integer Integer));
    _6890 = (vector-set! alloc6886 0 vecinit6887);
    _6889 = (vector-set! alloc6886 1 vecinit6888);
    v6885 = alloc6886;
    return 42;



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
start:
    movq $1, vecinit6887
    movq $2, vecinit6888
    movq free_ptr(%rip), tmp6893
    movq tmp6893, tmp6892
    addq $24, tmp6892
    movq fromspace_end(%rip), tmp6894
    cmpq tmp6894, tmp6892
    jl block6896
    jmp block6897
    
block6897:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp block6895
    
block6896:
    movq $0, _6891
    jmp block6895
    
block6895:
    movq free_ptr(%rip), %r11
    addq $24, free_ptr(%rip)
    movq $5, 0(%r11)
    movq %r11, alloc6886
    movq alloc6886, %r11
    movq vecinit6887, 8(%r11)
    movq $0, _6890
    movq alloc6886, %r11
    movq vecinit6888, 16(%r11)
    movq $0, _6889
    movq alloc6886, v6885
    movq $42, %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
start:
    movq $1, vecinit6887
    movq $2, vecinit6888
    movq free_ptr(%rip), tmp6893
    movq tmp6893, tmp6892
    addq $24, tmp6892
    movq fromspace_end(%rip), tmp6894
    cmpq tmp6894, tmp6892
    jl block6896
    jmp block6897
    
block6897:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp block6895
    
block6896:
    movq $0, _6891
    jmp block6895
    
block6895:
    movq free_ptr(%rip), %r11
    addq $24, free_ptr(%rip)
    movq $5, 0(%r11)
    movq %r11, alloc6886
    movq alloc6886, %r11
    movq vecinit6887, 8(%r11)
    movq $0, _6890
    movq alloc6886, %r11
    movq vecinit6888, 16(%r11)
    movq $0, _6889
    movq alloc6886, v6885
    movq $42, %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6886
movq alloc6886, %r11
movq vecinit6887, 8(%r11)
movq $0, _6890
movq alloc6886, %r11
movq vecinit6888, 16(%r11)
movq $0, _6889
movq alloc6886, v6885
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, _6891
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, vecinit6887
movq $2, vecinit6888
movq free_ptr(%rip), tmp6893
movq tmp6893, tmp6892
addq $24, tmp6892
movq fromspace_end(%rip), tmp6894
cmpq tmp6894, tmp6892
jl block6896
jmp block6897




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6886
movq alloc6886, %r11
movq vecinit6887, 8(%r11)
movq $0, _6890
movq alloc6886, %r11
movq vecinit6888, 16(%r11)
movq $0, _6889
movq alloc6886, v6885
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, _6891
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, vecinit6887
movq $2, vecinit6888
movq free_ptr(%rip), tmp6893
movq tmp6893, tmp6892
addq $24, tmp6892
movq fromspace_end(%rip), tmp6894
cmpq tmp6894, tmp6892
jl block6896
jmp block6897




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: addq $24, free_ptr(%rip)

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: movq $5, 0(%r11)

2 live-set: #<set: vecinit6887 %r11 vecinit6888>
1 instruction: movq %r11, alloc6886

2 live-set: #<set: vecinit6887 alloc6886 vecinit6888>
1 instruction: movq alloc6886, %r11

2 live-set: #<set: vecinit6887 alloc6886 vecinit6888>
1 instruction: movq vecinit6887, 8(%r11)

2 live-set: #<set: alloc6886 vecinit6888>
1 instruction: movq $0, _6890

2 live-set: #<set: alloc6886 vecinit6888>
1 instruction: movq alloc6886, %r11

2 live-set: #<set: alloc6886 vecinit6888>
1 instruction: movq vecinit6888, 16(%r11)

2 live-set: #<set: alloc6886>
1 instruction: movq $0, _6889

2 live-set: #<set: alloc6886>
1 instruction: movq alloc6886, v6885

2 live-set: #<set:>
1 instruction: movq $42, %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq $0, _6891

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: jmp block6895

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6887 vecinit6888 %rdi>
1 instruction: movq $24, %rsi

2 live-set: #<set: %rsi vecinit6887 vecinit6888 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: jmp block6895

2 live-set: #<set: vecinit6887 vecinit6888>
1 instruction: movq $1, vecinit6887

2 live-set: #<set: vecinit6887 %r15>
1 instruction: movq $2, vecinit6888

2 live-set: #<set: vecinit6887 %r15 vecinit6888>
1 instruction: movq free_ptr(%rip), tmp6893

2 live-set: #<set: vecinit6887 tmp6893 %r15 vecinit6888>
1 instruction: movq tmp6893, tmp6892

2 live-set: #<set: vecinit6887 %r15 vecinit6888 tmp6892>
1 instruction: addq $24, tmp6892

2 live-set: #<set: vecinit6887 %r15 vecinit6888 tmp6892>
1 instruction: movq fromspace_end(%rip), tmp6894

2 live-set: #<set: tmp6894 vecinit6887 %r15 vecinit6888 tmp6892>
1 instruction: cmpq tmp6894, tmp6892

2 live-set: #<set: vecinit6887 %r15 vecinit6888>
1 instruction: jl block6896

2 live-set: #<set: vecinit6887 %r15 vecinit6888>
1 instruction: jmp block6897

2 live-set: #<set: vecinit6887 %r15 vecinit6888>
vecinit6887 -> %rcx;
vecinit6887 -> %rsi;
vecinit6887 -> tmp6894;
vecinit6887 -> %rdx;
vecinit6887 -> alloc6886;
vecinit6887 -> tmp6893;
vecinit6887 -> %r8;
vecinit6887 -> %r15;
vecinit6887 -> %r9;
vecinit6887 -> %r11;
vecinit6887 -> %rax;
vecinit6887 -> _6891;
vecinit6887 -> vecinit6888;
vecinit6887 -> %rdi;
vecinit6887 -> tmp6892;
vecinit6887 -> %r10;
%rsi -> vecinit6887;
%rsi -> vecinit6888;
%rsi -> %rdi;
tmp6894 -> vecinit6887;
tmp6894 -> %r15;
tmp6894 -> vecinit6888;
tmp6894 -> tmp6892;
_6890 -> alloc6886;
_6890 -> vecinit6888;
%rcx -> vecinit6887;
%rcx -> vecinit6888;
%r11 -> vecinit6887;
%r11 -> alloc6886;
%r11 -> vecinit6888;
tmp6892 -> tmp6894;
tmp6892 -> vecinit6887;
tmp6892 -> %r15;
tmp6892 -> vecinit6888;
%r15 -> tmp6894;
%r15 -> vecinit6887;
%r15 -> tmp6893;
%r15 -> vecinit6888;
%r15 -> tmp6892;
%rax -> vecinit6887;
%rax -> vecinit6888;
%r8 -> vecinit6887;
%r8 -> vecinit6888;
%r10 -> vecinit6887;
%r10 -> vecinit6888;
tmp6893 -> vecinit6887;
tmp6893 -> %r15;
tmp6893 -> vecinit6888;
alloc6886 -> vecinit6887;
alloc6886 -> %r11;
alloc6886 -> vecinit6888;
alloc6886 -> _6889;
alloc6886 -> _6890;
%rdx -> vecinit6887;
%rdx -> vecinit6888;
vecinit6888 -> %rcx;
vecinit6888 -> %rsi;
vecinit6888 -> tmp6894;
vecinit6888 -> vecinit6887;
vecinit6888 -> %rdx;
vecinit6888 -> alloc6886;
vecinit6888 -> tmp6893;
vecinit6888 -> %r8;
vecinit6888 -> %r15;
vecinit6888 -> %r9;
vecinit6888 -> %r11;
vecinit6888 -> %rax;
vecinit6888 -> _6891;
vecinit6888 -> %rdi;
vecinit6888 -> tmp6892;
vecinit6888 -> _6890;
vecinit6888 -> %r10;
_6891 -> vecinit6887;
_6891 -> vecinit6888;
%rdi -> %rsi;
%rdi -> vecinit6887;
%rdi -> vecinit6888;
_6889 -> alloc6886;
%r9 -> vecinit6887;
%r9 -> vecinit6888;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6886
movq alloc6886, %r11
movq vecinit6887, 8(%r11)
movq $0, _6890
movq alloc6886, %r11
movq vecinit6888, 16(%r11)
movq $0, _6889
movq alloc6886, v6885
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, _6891
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, vecinit6887
movq $2, vecinit6888
movq free_ptr(%rip), tmp6893
movq tmp6893, tmp6892
addq $24, tmp6892
movq fromspace_end(%rip), tmp6894
cmpq tmp6894, tmp6892
jl block6896
jmp block6897




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6886
movq alloc6886, %r11
movq vecinit6887, 8(%r11)
movq $0, _6890
movq alloc6886, %r11
movq vecinit6888, 16(%r11)
movq $0, _6889
movq alloc6886, v6885
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, _6891
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, vecinit6887
movq $2, vecinit6888
movq free_ptr(%rip), tmp6893
movq tmp6893, tmp6892
addq $24, tmp6892
movq fromspace_end(%rip), tmp6894
cmpq tmp6894, tmp6892
jl block6896
jmp block6897




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
jmp block6897




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
jmp block6897




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: ()
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    subq $0, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $0, %rsp
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp6894 : 'Integer, _6891 : 'Void, alloc6886 : '(Vector Integer Integer), _6890 : 'Void, _6889 : 'Void, v6885 : '(Vector
                                                                                                                      Integer
                                                                                                                      Integer), vecinit6887 : 'Integer, vecinit6888 : 'Integer, tmp6893 : 'Integer, tmp6892 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6895:
    live-sets:
(list
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 %r11 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set vecinit6887 alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886 vecinit6888)
 (set alloc6886)
 (set alloc6886)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq $42, %rax
jmp conclusion

block6896:
    live-sets:
(list (set vecinit6887 vecinit6888) (set vecinit6887 vecinit6888))
movq $0, %rcx
jmp block6895

block6897:
    live-sets:
(list
 (set vecinit6887 vecinit6888 %rdi)
 (set %rsi vecinit6887 vecinit6888 %rdi)
 (set vecinit6887 vecinit6888)
 (set vecinit6887 vecinit6888))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

start:
    live-sets:
(list
 (set vecinit6887 %r15)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 tmp6893 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888 tmp6892)
 (set tmp6894 vecinit6887 %r15 vecinit6888 tmp6892)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888)
 (set vecinit6887 %r15 vecinit6888))
movq $1, %r12
movq $2, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6896
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6895

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    subq $0, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $0, %rsp
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(let ([v (vector 20 22)])
   (+ (vector-ref v 0) (vector-ref v 1)))


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v (vector 20 22)])
   (+ (vector-ref v 0) (vector-ref v 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v (vector 20 22)])
   (+ (vector-ref v 0) (vector-ref v 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6905 (vector 20 22)])
   (+ (vector-ref v6905 0) (vector-ref v6905 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6905 (vector 20 22)])
   (+ (vector-ref v6905 0) (vector-ref v6905 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6905 (let ([vecinit6907 20])
                (let ([vecinit6908 22])
                   (let ([_6911 (if (< (+ (global-value free_ptr) 24) (global-value fromspace_end))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6906 (allocate 2 (Vector Integer Integer))])
                         (let ([_6910 (vector-set! alloc6906 0 vecinit6907)])
                            (let ([_6909 (vector-set! alloc6906 1 vecinit6908)])
                               alloc6906))))))])
   (+ (vector-ref v6905 0) (vector-ref v6905 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6905 (let ([vecinit6907 20])
                (let ([vecinit6908 22])
                   (let ([_6911 (if (< (+ (global-value free_ptr) 24) (global-value fromspace_end))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6906 (allocate 2 (Vector Integer Integer))])
                         (let ([_6910 (vector-set! alloc6906 0 vecinit6907)])
                            (let ([_6909 (vector-set! alloc6906 1 vecinit6908)])
                               alloc6906))))))])
   (+ (vector-ref v6905 0) (vector-ref v6905 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6905 (let ([vecinit6907 20])
                (let ([vecinit6908 22])
                   (let ([_6911 (if (let ([tmp6912 (let ([tmp6913 (global-value free_ptr)])
                                                      (+ tmp6913 24))])
                                       (let ([tmp6914 (global-value fromspace_end)])
                                          (< tmp6912 tmp6914)))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6906 (allocate 2 (Vector Integer Integer))])
                         (let ([_6910 (vector-set! alloc6906 0 vecinit6907)])
                            (let ([_6909 (vector-set! alloc6906 1 vecinit6908)])
                               alloc6906))))))])
   (let ([tmp6915 (vector-ref v6905 0)])
      (let ([tmp6916 (vector-ref v6905 1)])
         (+ tmp6915 tmp6916))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6905 (let ([vecinit6907 20])
                (let ([vecinit6908 22])
                   (let ([_6911 (if (let ([tmp6912 (let ([tmp6913 (global-value free_ptr)])
                                                      (+ tmp6913 24))])
                                       (let ([tmp6914 (global-value fromspace_end)])
                                          (< tmp6912 tmp6914)))
                                   (void)
                                   (collect 24))
                                ])
                      (let ([alloc6906 (allocate 2 (Vector Integer Integer))])
                         (let ([_6910 (vector-set! alloc6906 0 vecinit6907)])
                            (let ([_6909 (vector-set! alloc6906 1 vecinit6908)])
                               alloc6906))))))])
   (let ([tmp6915 (vector-ref v6905 0)])
      (let ([tmp6916 (vector-ref v6905 1)])
         (+ tmp6915 tmp6916))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit6907 = 20;
    vecinit6908 = 22;
    tmp6913 = (global-value free_ptr);
    tmp6912 = (+ tmp6913 24);
    tmp6914 = (global-value fromspace_end);
    if (< tmp6912 tmp6914)
       goto block6918;
    else
       goto block6919;
block6919:
    (collect 24)
    goto block6917;
block6918:
    _6911 = (void);
    goto block6917;
block6917:
    alloc6906 = (allocate 2 (Vector Integer Integer));
    _6910 = (vector-set! alloc6906 0 vecinit6907);
    _6909 = (vector-set! alloc6906 1 vecinit6908);
    v6905 = alloc6906;
    tmp6915 = (vector-ref v6905 0);
    tmp6916 = (vector-ref v6905 1);
    return (+ tmp6915 tmp6916);



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
start:
    vecinit6907 = 20;
    vecinit6908 = 22;
    tmp6913 = (global-value free_ptr);
    tmp6912 = (+ tmp6913 24);
    tmp6914 = (global-value fromspace_end);
    if (< tmp6912 tmp6914)
       goto block6918;
    else
       goto block6919;
block6919:
    (collect 24)
    goto block6917;
block6918:
    _6911 = (void);
    goto block6917;
block6917:
    alloc6906 = (allocate 2 (Vector Integer Integer));
    _6910 = (vector-set! alloc6906 0 vecinit6907);
    _6909 = (vector-set! alloc6906 1 vecinit6908);
    v6905 = alloc6906;
    tmp6915 = (vector-ref v6905 0);
    tmp6916 = (vector-ref v6905 1);
    return (+ tmp6915 tmp6916);



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
start:
    movq $20, vecinit6907
    movq $22, vecinit6908
    movq free_ptr(%rip), tmp6913
    movq tmp6913, tmp6912
    addq $24, tmp6912
    movq fromspace_end(%rip), tmp6914
    cmpq tmp6914, tmp6912
    jl block6918
    jmp block6919
    
block6919:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp block6917
    
block6918:
    movq $0, _6911
    jmp block6917
    
block6917:
    movq free_ptr(%rip), %r11
    addq $24, free_ptr(%rip)
    movq $5, 0(%r11)
    movq %r11, alloc6906
    movq alloc6906, %r11
    movq vecinit6907, 8(%r11)
    movq $0, _6910
    movq alloc6906, %r11
    movq vecinit6908, 16(%r11)
    movq $0, _6909
    movq alloc6906, v6905
    movq v6905, %r11
    movq 8(%r11), tmp6915
    movq v6905, %r11
    movq 16(%r11), tmp6916
    movq tmp6915, %rax
    addq tmp6916, %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
start:
    movq $20, vecinit6907
    movq $22, vecinit6908
    movq free_ptr(%rip), tmp6913
    movq tmp6913, tmp6912
    addq $24, tmp6912
    movq fromspace_end(%rip), tmp6914
    cmpq tmp6914, tmp6912
    jl block6918
    jmp block6919
    
block6919:
    movq %r15, %rdi
    movq $24, %rsi
    callq collect
    jmp block6917
    
block6918:
    movq $0, _6911
    jmp block6917
    
block6917:
    movq free_ptr(%rip), %r11
    addq $24, free_ptr(%rip)
    movq $5, 0(%r11)
    movq %r11, alloc6906
    movq alloc6906, %r11
    movq vecinit6907, 8(%r11)
    movq $0, _6910
    movq alloc6906, %r11
    movq vecinit6908, 16(%r11)
    movq $0, _6909
    movq alloc6906, v6905
    movq v6905, %r11
    movq 8(%r11), tmp6915
    movq v6905, %r11
    movq 16(%r11), tmp6916
    movq tmp6915, %rax
    addq tmp6916, %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6906
movq alloc6906, %r11
movq vecinit6907, 8(%r11)
movq $0, _6910
movq alloc6906, %r11
movq vecinit6908, 16(%r11)
movq $0, _6909
movq alloc6906, v6905
movq v6905, %r11
movq 8(%r11), tmp6915
movq v6905, %r11
movq 16(%r11), tmp6916
movq tmp6915, %rax
addq tmp6916, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, _6911
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, vecinit6907
movq $22, vecinit6908
movq free_ptr(%rip), tmp6913
movq tmp6913, tmp6912
addq $24, tmp6912
movq fromspace_end(%rip), tmp6914
cmpq tmp6914, tmp6912
jl block6918
jmp block6919




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6906
movq alloc6906, %r11
movq vecinit6907, 8(%r11)
movq $0, _6910
movq alloc6906, %r11
movq vecinit6908, 16(%r11)
movq $0, _6909
movq alloc6906, v6905
movq v6905, %r11
movq 8(%r11), tmp6915
movq v6905, %r11
movq 16(%r11), tmp6916
movq tmp6915, %rax
addq tmp6916, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, _6911
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, vecinit6907
movq $22, vecinit6908
movq free_ptr(%rip), tmp6913
movq tmp6913, tmp6912
addq $24, tmp6912
movq fromspace_end(%rip), tmp6914
cmpq tmp6914, tmp6912
jl block6918
jmp block6919




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: addq $24, free_ptr(%rip)

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: movq $5, 0(%r11)

2 live-set: #<set: vecinit6907 %r11 vecinit6908>
1 instruction: movq %r11, alloc6906

2 live-set: #<set: alloc6906 vecinit6907 vecinit6908>
1 instruction: movq alloc6906, %r11

2 live-set: #<set: alloc6906 vecinit6907 vecinit6908>
1 instruction: movq vecinit6907, 8(%r11)

2 live-set: #<set: alloc6906 vecinit6908>
1 instruction: movq $0, _6910

2 live-set: #<set: alloc6906 vecinit6908>
1 instruction: movq alloc6906, %r11

2 live-set: #<set: alloc6906 vecinit6908>
1 instruction: movq vecinit6908, 16(%r11)

2 live-set: #<set: alloc6906>
1 instruction: movq $0, _6909

2 live-set: #<set: alloc6906>
1 instruction: movq alloc6906, v6905

2 live-set: #<set: v6905>
1 instruction: movq v6905, %r11

2 live-set: #<set: v6905 %r11>
1 instruction: movq 8(%r11), tmp6915

2 live-set: #<set: tmp6915 v6905>
1 instruction: movq v6905, %r11

2 live-set: #<set: tmp6915 %r11>
1 instruction: movq 16(%r11), tmp6916

2 live-set: #<set: tmp6915 tmp6916>
1 instruction: movq tmp6915, %rax

2 live-set: #<set: tmp6916 %rax>
1 instruction: addq tmp6916, %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6907 %rdi vecinit6908>
1 instruction: movq $24, %rsi

2 live-set: #<set: %rsi vecinit6907 %rdi vecinit6908>
1 instruction: callq collect

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: jmp block6917

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: movq $0, _6911

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: jmp block6917

2 live-set: #<set: vecinit6907 vecinit6908>
1 instruction: movq $20, vecinit6907

2 live-set: #<set: vecinit6907 %r15>
1 instruction: movq $22, vecinit6908

2 live-set: #<set: vecinit6907 %r15 vecinit6908>
1 instruction: movq free_ptr(%rip), tmp6913

2 live-set: #<set: vecinit6907 tmp6913 %r15 vecinit6908>
1 instruction: movq tmp6913, tmp6912

2 live-set: #<set: vecinit6907 %r15 tmp6912 vecinit6908>
1 instruction: addq $24, tmp6912

2 live-set: #<set: vecinit6907 %r15 tmp6912 vecinit6908>
1 instruction: movq fromspace_end(%rip), tmp6914

2 live-set: #<set: tmp6914 vecinit6907 %r15 tmp6912 vecinit6908>
1 instruction: cmpq tmp6914, tmp6912

2 live-set: #<set: vecinit6907 %r15 vecinit6908>
1 instruction: jl block6918

2 live-set: #<set: vecinit6907 %r15 vecinit6908>
1 instruction: jmp block6919

2 live-set: #<set: vecinit6907 %r15 vecinit6908>
tmp6914 -> vecinit6907;
tmp6914 -> %r15;
tmp6914 -> tmp6912;
tmp6914 -> vecinit6908;
%rsi -> vecinit6907;
%rsi -> %rdi;
%rsi -> vecinit6908;
_6909 -> alloc6906;
%rax -> vecinit6907;
%rax -> tmp6916;
%rax -> vecinit6908;
%rcx -> vecinit6907;
%rcx -> vecinit6908;
%r11 -> alloc6906;
%r11 -> tmp6915;
%r11 -> vecinit6907;
%r11 -> vecinit6908;
vecinit6908 -> alloc6906;
vecinit6908 -> %rcx;
vecinit6908 -> %rsi;
vecinit6908 -> tmp6914;
vecinit6908 -> vecinit6907;
vecinit6908 -> tmp6913;
vecinit6908 -> %rdx;
vecinit6908 -> %r8;
vecinit6908 -> _6910;
vecinit6908 -> %r15;
vecinit6908 -> %r9;
vecinit6908 -> %r11;
vecinit6908 -> %rax;
vecinit6908 -> %rdi;
vecinit6908 -> tmp6912;
vecinit6908 -> %r10;
vecinit6908 -> _6911;
%r15 -> tmp6914;
%r15 -> vecinit6907;
%r15 -> tmp6913;
%r15 -> tmp6912;
%r15 -> vecinit6908;
v6905 -> tmp6915;
%r8 -> vecinit6907;
%r8 -> vecinit6908;
%r10 -> vecinit6907;
%r10 -> vecinit6908;
_6911 -> vecinit6907;
_6911 -> vecinit6908;
tmp6913 -> vecinit6907;
tmp6913 -> %r15;
tmp6913 -> vecinit6908;
tmp6915 -> tmp6916;
tmp6915 -> v6905;
tmp6915 -> %r11;
%rdx -> vecinit6907;
%rdx -> vecinit6908;
alloc6906 -> _6909;
alloc6906 -> vecinit6907;
alloc6906 -> _6910;
alloc6906 -> %r11;
alloc6906 -> vecinit6908;
tmp6912 -> tmp6914;
tmp6912 -> vecinit6907;
tmp6912 -> %r15;
tmp6912 -> vecinit6908;
%rdi -> %rsi;
%rdi -> vecinit6907;
%rdi -> vecinit6908;
tmp6916 -> tmp6915;
tmp6916 -> %rax;
%r9 -> vecinit6907;
%r9 -> vecinit6908;
_6910 -> alloc6906;
_6910 -> vecinit6908;
vecinit6907 -> alloc6906;
vecinit6907 -> %rcx;
vecinit6907 -> %rsi;
vecinit6907 -> tmp6914;
vecinit6907 -> tmp6913;
vecinit6907 -> %rdx;
vecinit6907 -> %r8;
vecinit6907 -> %r15;
vecinit6907 -> %r9;
vecinit6907 -> %r11;
vecinit6907 -> %rax;
vecinit6907 -> %rdi;
vecinit6907 -> tmp6912;
vecinit6907 -> %r10;
vecinit6907 -> _6911;
vecinit6907 -> vecinit6908;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6906
movq alloc6906, %r11
movq vecinit6907, 8(%r11)
movq $0, _6910
movq alloc6906, %r11
movq vecinit6908, 16(%r11)
movq $0, _6909
movq alloc6906, v6905
movq v6905, %r11
movq 8(%r11), tmp6915
movq v6905, %r11
movq 16(%r11), tmp6916
movq tmp6915, %rax
addq tmp6916, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, _6911
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, vecinit6907
movq $22, vecinit6908
movq free_ptr(%rip), tmp6913
movq tmp6913, tmp6912
addq $24, tmp6912
movq fromspace_end(%rip), tmp6914
cmpq tmp6914, tmp6912
jl block6918
jmp block6919




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, alloc6906
movq alloc6906, %r11
movq vecinit6907, 8(%r11)
movq $0, _6910
movq alloc6906, %r11
movq vecinit6908, 16(%r11)
movq $0, _6909
movq alloc6906, v6905
movq v6905, %r11
movq 8(%r11), tmp6915
movq v6905, %r11
movq 16(%r11), tmp6916
movq tmp6915, %rax
addq tmp6916, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, _6911
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, vecinit6907
movq $22, vecinit6908
movq free_ptr(%rip), tmp6913
movq tmp6913, tmp6912
addq $24, tmp6912
movq fromspace_end(%rip), tmp6914
cmpq tmp6914, tmp6912
jl block6918
jmp block6919




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
jmp block6919




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
jmp block6919




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: ()
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    subq $0, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $0, %rsp
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    v6905 : '(Vector Integer Integer), tmp6915 : 'Integer, tmp6916 : 'Integer, vecinit6907 : 'Integer, vecinit6908 : 'Integer, tmp6913 : 'Integer, tmp6912 : 'Integer, tmp6914 : 'Integer, _6911 : 'Void, alloc6906 : '(Vector
                                                                                                                                                                                                                        Integer
                                                                                                                                                                                                                        Integer), _6910 : 'Void, _6909 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r12 %rbx)
num-root-spills:
0
stack-space:
16
block6917:
    live-sets:
(list
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 %r11 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6907 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906 vecinit6908)
 (set alloc6906)
 (set alloc6906)
 (set v6905)
 (set v6905 %r11)
 (set tmp6915 v6905)
 (set tmp6915 %r11)
 (set tmp6915 tmp6916)
 (set tmp6916 %rax)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $24, free_ptr(%rip)
movq $5, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 16(%r11)
movq $0, %rdx
movq %rcx, %rdx
movq %rdx, %r11
movq 8(%r11), %rcx
movq %rdx, %r11
movq 16(%r11), %rdx
movq %rcx, %rax
addq %rdx, %rax
jmp conclusion

block6919:
    live-sets:
(list
 (set vecinit6907 %rdi vecinit6908)
 (set %rsi vecinit6907 %rdi vecinit6908)
 (set vecinit6907 vecinit6908)
 (set vecinit6907 vecinit6908))
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

block6918:
    live-sets:
(list (set vecinit6907 vecinit6908) (set vecinit6907 vecinit6908))
movq $0, %rcx
jmp block6917

start:
    live-sets:
(list
 (set vecinit6907 %r15)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 tmp6913 %r15 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 tmp6912 vecinit6908)
 (set tmp6914 vecinit6907 %r15 tmp6912 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908)
 (set vecinit6907 %r15 vecinit6908))
movq $20, %r12
movq $22, %rbx
movq free_ptr(%rip), %rcx
addq $24, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block6918
movq %r15, %rdi
movq $24, %rsi
callq collect
jmp block6917

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    subq $0, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $0, %rsp
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(vector-ref (vector-ref (vector (vector 42)) 0) 0)


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (vector-ref (vector (vector 42)) 0) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (vector-ref (vector (vector 42)) 0) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (vector-ref (vector (vector 42)) 0) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (vector-ref (vector (vector 42)) 0) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (vector-ref (let ([vecinit6928 (let ([vecinit6932 42])
                                              (let ([_6934 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                                                              (void)
                                                              (collect 16))
                                                           ])
                                                 (let ([alloc6931 (allocate 1 (Vector Integer))])
                                                    (let ([_6933 (vector-set! alloc6931 0 vecinit6932)])
                                                       alloc6931))))])
                           (let ([_6930 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                                           (void)
                                           (collect 16))
                                        ])
                              (let ([alloc6927 (allocate 1 (Vector (Vector Integer)))])
                                 (let ([_6929 (vector-set! alloc6927 0 vecinit6928)])
                                    alloc6927)))) 0) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (vector-ref (let ([vecinit6928 (let ([vecinit6932 42])
                                              (let ([_6934 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                                                              (void)
                                                              (collect 16))
                                                           ])
                                                 (let ([alloc6931 (allocate 1 (Vector Integer))])
                                                    (let ([_6933 (vector-set! alloc6931 0 vecinit6932)])
                                                       alloc6931))))])
                           (let ([_6930 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                                           (void)
                                           (collect 16))
                                        ])
                              (let ([alloc6927 (allocate 1 (Vector (Vector Integer)))])
                                 (let ([_6929 (vector-set! alloc6927 0 vecinit6928)])
                                    alloc6927)))) 0) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([tmp6935 (let ([tmp6936 (let ([vecinit6928 (let ([vecinit6932 42])
                                                    (let ([_6934 (if (let ([tmp6937 (let ([tmp6938 (global-value free_ptr)])
                                                                                       (+ tmp6938 16))])
                                                                        (let ([tmp6939 (global-value fromspace_end)])
                                                                           (< tmp6937 tmp6939)))
                                                                    (void)
                                                                    (collect 16))
                                                                 ])
                                                       (let ([alloc6931 (allocate 1 (Vector Integer))])
                                                          (let ([_6933 (vector-set! alloc6931 0 vecinit6932)])
                                                             alloc6931))))])
                                 (let ([_6930 (if (let ([tmp6940 (let ([tmp6941 (global-value free_ptr)])
                                                                    (+ tmp6941 16))])
                                                     (let ([tmp6942 (global-value fromspace_end)])
                                                        (< tmp6940 tmp6942)))
                                                 (void)
                                                 (collect 16))
                                              ])
                                    (let ([alloc6927 (allocate 1 (Vector (Vector Integer)))])
                                       (let ([_6929 (vector-set! alloc6927 0 vecinit6928)])
                                          alloc6927))))])
                  (vector-ref tmp6936 0))])
   (vector-ref tmp6935 0))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([tmp6935 (let ([tmp6936 (let ([vecinit6928 (let ([vecinit6932 42])
                                                    (let ([_6934 (if (let ([tmp6937 (let ([tmp6938 (global-value free_ptr)])
                                                                                       (+ tmp6938 16))])
                                                                        (let ([tmp6939 (global-value fromspace_end)])
                                                                           (< tmp6937 tmp6939)))
                                                                    (void)
                                                                    (collect 16))
                                                                 ])
                                                       (let ([alloc6931 (allocate 1 (Vector Integer))])
                                                          (let ([_6933 (vector-set! alloc6931 0 vecinit6932)])
                                                             alloc6931))))])
                                 (let ([_6930 (if (let ([tmp6940 (let ([tmp6941 (global-value free_ptr)])
                                                                    (+ tmp6941 16))])
                                                     (let ([tmp6942 (global-value fromspace_end)])
                                                        (< tmp6940 tmp6942)))
                                                 (void)
                                                 (collect 16))
                                              ])
                                    (let ([alloc6927 (allocate 1 (Vector (Vector Integer)))])
                                       (let ([_6929 (vector-set! alloc6927 0 vecinit6928)])
                                          alloc6927))))])
                  (vector-ref tmp6936 0))])
   (vector-ref tmp6935 0))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit6932 = 42;
    tmp6938 = (global-value free_ptr);
    tmp6937 = (+ tmp6938 16);
    tmp6939 = (global-value fromspace_end);
    if (< tmp6937 tmp6939)
       goto block6947;
    else
       goto block6948;
block6948:
    (collect 16)
    goto block6946;
block6947:
    _6934 = (void);
    goto block6946;
block6946:
    alloc6931 = (allocate 1 (Vector Integer));
    _6933 = (vector-set! alloc6931 0 vecinit6932);
    vecinit6928 = alloc6931;
    tmp6941 = (global-value free_ptr);
    tmp6940 = (+ tmp6941 16);
    tmp6942 = (global-value fromspace_end);
    if (< tmp6940 tmp6942)
       goto block6944;
    else
       goto block6945;
block6945:
    (collect 16)
    goto block6943;
block6944:
    _6930 = (void);
    goto block6943;
block6943:
    alloc6927 = (allocate 1 (Vector (Vector Integer)));
    _6929 = (vector-set! alloc6927 0 vecinit6928);
    tmp6936 = alloc6927;
    tmp6935 = (vector-ref tmp6936 0);
    return (vector-ref tmp6935 0);



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
start:
    vecinit6932 = 42;
    tmp6938 = (global-value free_ptr);
    tmp6937 = (+ tmp6938 16);
    tmp6939 = (global-value fromspace_end);
    if (< tmp6937 tmp6939)
       goto block6947;
    else
       goto block6948;
block6948:
    (collect 16)
    goto block6946;
block6947:
    _6934 = (void);
    goto block6946;
block6946:
    alloc6931 = (allocate 1 (Vector Integer));
    _6933 = (vector-set! alloc6931 0 vecinit6932);
    vecinit6928 = alloc6931;
    tmp6941 = (global-value free_ptr);
    tmp6940 = (+ tmp6941 16);
    tmp6942 = (global-value fromspace_end);
    if (< tmp6940 tmp6942)
       goto block6944;
    else
       goto block6945;
block6945:
    (collect 16)
    goto block6943;
block6944:
    _6930 = (void);
    goto block6943;
block6943:
    alloc6927 = (allocate 1 (Vector (Vector Integer)));
    _6929 = (vector-set! alloc6927 0 vecinit6928);
    tmp6936 = alloc6927;
    tmp6935 = (vector-ref tmp6936 0);
    return (vector-ref tmp6935 0);



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
start:
    movq $42, vecinit6932
    movq free_ptr(%rip), tmp6938
    movq tmp6938, tmp6937
    addq $16, tmp6937
    movq fromspace_end(%rip), tmp6939
    cmpq tmp6939, tmp6937
    jl block6947
    jmp block6948
    
block6948:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block6946
    
block6947:
    movq $0, _6934
    jmp block6946
    
block6946:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, alloc6931
    movq alloc6931, %r11
    movq vecinit6932, 8(%r11)
    movq $0, _6933
    movq alloc6931, vecinit6928
    movq free_ptr(%rip), tmp6941
    movq tmp6941, tmp6940
    addq $16, tmp6940
    movq fromspace_end(%rip), tmp6942
    cmpq tmp6942, tmp6940
    jl block6944
    jmp block6945
    
block6945:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block6943
    
block6944:
    movq $0, _6930
    jmp block6943
    
block6943:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $131, 0(%r11)
    movq %r11, alloc6927
    movq alloc6927, %r11
    movq vecinit6928, 8(%r11)
    movq $0, _6929
    movq alloc6927, tmp6936
    movq tmp6936, %r11
    movq 8(%r11), tmp6935
    movq tmp6935, %r11
    movq 8(%r11), %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
start:
    movq $42, vecinit6932
    movq free_ptr(%rip), tmp6938
    movq tmp6938, tmp6937
    addq $16, tmp6937
    movq fromspace_end(%rip), tmp6939
    cmpq tmp6939, tmp6937
    jl block6947
    jmp block6948
    
block6948:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block6946
    
block6947:
    movq $0, _6934
    jmp block6946
    
block6946:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, alloc6931
    movq alloc6931, %r11
    movq vecinit6932, 8(%r11)
    movq $0, _6933
    movq alloc6931, vecinit6928
    movq free_ptr(%rip), tmp6941
    movq tmp6941, tmp6940
    addq $16, tmp6940
    movq fromspace_end(%rip), tmp6942
    cmpq tmp6942, tmp6940
    jl block6944
    jmp block6945
    
block6945:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block6943
    
block6944:
    movq $0, _6930
    jmp block6943
    
block6943:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $131, 0(%r11)
    movq %r11, alloc6927
    movq alloc6927, %r11
    movq vecinit6928, 8(%r11)
    movq $0, _6929
    movq alloc6927, tmp6936
    movq tmp6936, %r11
    movq 8(%r11), tmp6935
    movq tmp6935, %r11
    movq 8(%r11), %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, alloc6927
movq alloc6927, %r11
movq vecinit6928, 8(%r11)
movq $0, _6929
movq alloc6927, tmp6936
movq tmp6936, %r11
movq 8(%r11), tmp6935
movq tmp6935, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, _6930
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc6931
movq alloc6931, %r11
movq vecinit6932, 8(%r11)
movq $0, _6933
movq alloc6931, vecinit6928
movq free_ptr(%rip), tmp6941
movq tmp6941, tmp6940
addq $16, tmp6940
movq fromspace_end(%rip), tmp6942
cmpq tmp6942, tmp6940
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, _6934
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, vecinit6932
movq free_ptr(%rip), tmp6938
movq tmp6938, tmp6937
addq $16, tmp6937
movq fromspace_end(%rip), tmp6939
cmpq tmp6939, tmp6937
jl block6947
jmp block6948




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, alloc6927
movq alloc6927, %r11
movq vecinit6928, 8(%r11)
movq $0, _6929
movq alloc6927, tmp6936
movq tmp6936, %r11
movq 8(%r11), tmp6935
movq tmp6935, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, _6930
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc6931
movq alloc6931, %r11
movq vecinit6932, 8(%r11)
movq $0, _6933
movq alloc6931, vecinit6928
movq free_ptr(%rip), tmp6941
movq tmp6941, tmp6940
addq $16, tmp6940
movq fromspace_end(%rip), tmp6942
cmpq tmp6942, tmp6940
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, _6934
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, vecinit6932
movq free_ptr(%rip), tmp6938
movq tmp6938, tmp6937
addq $16, tmp6937
movq fromspace_end(%rip), tmp6939
cmpq tmp6939, tmp6937
jl block6947
jmp block6948




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6928>
1 instruction: addq $16, free_ptr(%rip)

2 live-set: #<set: vecinit6928>
1 instruction: movq $131, 0(%r11)

2 live-set: #<set: vecinit6928 %r11>
1 instruction: movq %r11, alloc6927

2 live-set: #<set: vecinit6928 alloc6927>
1 instruction: movq alloc6927, %r11

2 live-set: #<set: vecinit6928 alloc6927>
1 instruction: movq vecinit6928, 8(%r11)

2 live-set: #<set: alloc6927>
1 instruction: movq $0, _6929

2 live-set: #<set: alloc6927>
1 instruction: movq alloc6927, tmp6936

2 live-set: #<set: tmp6936>
1 instruction: movq tmp6936, %r11

2 live-set: #<set: %r11>
1 instruction: movq 8(%r11), tmp6935

2 live-set: #<set: tmp6935>
1 instruction: movq tmp6935, %r11

2 live-set: #<set: %r11>
1 instruction: movq 8(%r11), %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6928 %rdi>
1 instruction: movq $16, %rsi

2 live-set: #<set: %rsi vecinit6928 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6928>
***************: tuple variable is live during call to collect IMP IMP IMP
1 instruction: jmp block6943

2 live-set: #<set: vecinit6928>
1 instruction: movq $0, _6930

2 live-set: #<set: vecinit6928>
1 instruction: jmp block6943

2 live-set: #<set: vecinit6928>
1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6932 %r15>
1 instruction: addq $16, free_ptr(%rip)

2 live-set: #<set: vecinit6932 %r15>
1 instruction: movq $3, 0(%r11)

2 live-set: #<set: vecinit6932 %r15 %r11>
1 instruction: movq %r11, alloc6931

2 live-set: #<set: vecinit6932 %r15 alloc6931>
1 instruction: movq alloc6931, %r11

2 live-set: #<set: vecinit6932 %r15 alloc6931>
1 instruction: movq vecinit6932, 8(%r11)

2 live-set: #<set: %r15 alloc6931>
1 instruction: movq $0, _6933

2 live-set: #<set: %r15 alloc6931>
1 instruction: movq alloc6931, vecinit6928

2 live-set: #<set: vecinit6928 %r15>
1 instruction: movq free_ptr(%rip), tmp6941

2 live-set: #<set: vecinit6928 %r15 tmp6941>
1 instruction: movq tmp6941, tmp6940

2 live-set: #<set: vecinit6928 tmp6940 %r15>
1 instruction: addq $16, tmp6940

2 live-set: #<set: vecinit6928 tmp6940 %r15>
1 instruction: movq fromspace_end(%rip), tmp6942

2 live-set: #<set: vecinit6928 tmp6940 %r15 tmp6942>
1 instruction: cmpq tmp6942, tmp6940

2 live-set: #<set: vecinit6928 %r15>
1 instruction: jl block6944

2 live-set: #<set: vecinit6928 %r15>
1 instruction: jmp block6945

2 live-set: #<set: vecinit6928 %r15>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6932 %r15 %rdi>
1 instruction: movq $16, %rsi

2 live-set: #<set: %rsi vecinit6932 %r15 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6932 %r15>
1 instruction: jmp block6946

2 live-set: #<set: vecinit6932 %r15>
1 instruction: movq $0, _6934

2 live-set: #<set: vecinit6932 %r15>
1 instruction: jmp block6946

2 live-set: #<set: vecinit6932 %r15>
1 instruction: movq $42, vecinit6932

2 live-set: #<set: vecinit6932 %r15>
1 instruction: movq free_ptr(%rip), tmp6938

2 live-set: #<set: vecinit6932 %r15 tmp6938>
1 instruction: movq tmp6938, tmp6937

2 live-set: #<set: vecinit6932 tmp6937 %r15>
1 instruction: addq $16, tmp6937

2 live-set: #<set: vecinit6932 tmp6937 %r15>
1 instruction: movq fromspace_end(%rip), tmp6939

2 live-set: #<set: vecinit6932 tmp6937 %r15 tmp6939>
1 instruction: cmpq tmp6939, tmp6937

2 live-set: #<set: vecinit6932 %r15>
1 instruction: jl block6947

2 live-set: #<set: vecinit6932 %r15>
1 instruction: jmp block6948

2 live-set: #<set: vecinit6932 %r15>
_6929 -> alloc6927;
%rsi -> vecinit6932;
%rsi -> vecinit6928;
%rsi -> %r15;
%rsi -> %rdi;
%rsp -> vecinit6928;
%rbp -> vecinit6928;
%rax -> vecinit6932;
%rax -> vecinit6928;
%rax -> %r15;
vecinit6932 -> %rcx;
vecinit6932 -> %rsi;
vecinit6932 -> _6934;
vecinit6932 -> tmp6937;
vecinit6932 -> %rdx;
vecinit6932 -> %r8;
vecinit6932 -> %r15;
vecinit6932 -> %r9;
vecinit6932 -> %r11;
vecinit6932 -> %rax;
vecinit6932 -> %rdi;
vecinit6932 -> tmp6939;
vecinit6932 -> %r10;
vecinit6932 -> tmp6938;
vecinit6932 -> alloc6931;
tmp6941 -> vecinit6928;
tmp6941 -> %r15;
_6934 -> vecinit6932;
_6934 -> %r15;
%rcx -> vecinit6932;
%rcx -> vecinit6928;
%rcx -> %r15;
%r12 -> vecinit6928;
%r11 -> vecinit6932;
%r11 -> vecinit6928;
%r11 -> %r15;
%r11 -> alloc6927;
%r11 -> alloc6931;
alloc6927 -> vecinit6928;
alloc6927 -> _6929;
alloc6927 -> %r11;
%r15 -> %rcx;
%r15 -> %rsi;
%r15 -> vecinit6932;
%r15 -> _6934;
%r15 -> vecinit6928;
%r15 -> tmp6937;
%r15 -> _6933;
%r15 -> %rdx;
%r15 -> tmp6940;
%r15 -> %r8;
%r15 -> %r9;
%r15 -> %r11;
%r15 -> %rax;
%r15 -> tmp6941;
%r15 -> %rdi;
%r15 -> tmp6939;
%r15 -> tmp6942;
%r15 -> %r10;
%r15 -> tmp6938;
%r15 -> alloc6931;
tmp6938 -> vecinit6932;
tmp6938 -> %r15;
%r8 -> vecinit6932;
%r8 -> vecinit6928;
%r8 -> %r15;
%r10 -> vecinit6932;
%r10 -> vecinit6928;
%r10 -> %r15;
alloc6931 -> vecinit6932;
alloc6931 -> _6933;
alloc6931 -> %r15;
alloc6931 -> %r11;
vecinit6928 -> %r13;
vecinit6928 -> %rsp;
vecinit6928 -> %rcx;
vecinit6928 -> %rsi;
vecinit6928 -> _6930;
vecinit6928 -> %rbp;
vecinit6928 -> %rdx;
vecinit6928 -> tmp6940;
vecinit6928 -> %r8;
vecinit6928 -> %r14;
vecinit6928 -> %r15;
vecinit6928 -> %r9;
vecinit6928 -> %r12;
vecinit6928 -> %r11;
vecinit6928 -> %rax;
vecinit6928 -> tmp6941;
vecinit6928 -> alloc6927;
vecinit6928 -> %rdi;
vecinit6928 -> tmp6942;
vecinit6928 -> %r10;
vecinit6928 -> %rbx;
_6930 -> vecinit6928;
%r13 -> vecinit6928;
tmp6937 -> vecinit6932;
tmp6937 -> %r15;
tmp6937 -> tmp6939;
%rdx -> vecinit6932;
%rdx -> vecinit6928;
%rdx -> %r15;
_6933 -> %r15;
_6933 -> alloc6931;
tmp6942 -> vecinit6928;
tmp6942 -> tmp6940;
tmp6942 -> %r15;
%rdi -> %rsi;
%rdi -> vecinit6932;
%rdi -> vecinit6928;
%rdi -> %r15;
tmp6940 -> vecinit6928;
tmp6940 -> %r15;
tmp6940 -> tmp6942;
%r9 -> vecinit6932;
%r9 -> vecinit6928;
%r9 -> %r15;
%rbx -> vecinit6928;
tmp6939 -> vecinit6932;
tmp6939 -> tmp6937;
tmp6939 -> %r15;
%r14 -> vecinit6928;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, alloc6927
movq alloc6927, %r11
movq vecinit6928, 8(%r11)
movq $0, _6929
movq alloc6927, tmp6936
movq tmp6936, %r11
movq 8(%r11), tmp6935
movq tmp6935, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, _6930
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc6931
movq alloc6931, %r11
movq vecinit6932, 8(%r11)
movq $0, _6933
movq alloc6931, vecinit6928
movq free_ptr(%rip), tmp6941
movq tmp6941, tmp6940
addq $16, tmp6940
movq fromspace_end(%rip), tmp6942
cmpq tmp6942, tmp6940
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, _6934
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, vecinit6932
movq free_ptr(%rip), tmp6938
movq tmp6938, tmp6937
addq $16, tmp6937
movq fromspace_end(%rip), tmp6939
cmpq tmp6939, tmp6937
jl block6947
jmp block6948




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, alloc6927
movq alloc6927, %r11
movq vecinit6928, 8(%r11)
movq $0, _6929
movq alloc6927, tmp6936
movq tmp6936, %r11
movq 8(%r11), tmp6935
movq tmp6935, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, _6930
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc6931
movq alloc6931, %r11
movq vecinit6932, 8(%r11)
movq $0, _6933
movq alloc6931, vecinit6928
movq free_ptr(%rip), tmp6941
movq tmp6941, tmp6940
addq $16, tmp6940
movq fromspace_end(%rip), tmp6942
cmpq tmp6942, tmp6940
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, _6934
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, vecinit6932
movq free_ptr(%rip), tmp6938
movq tmp6938, tmp6937
addq $16, tmp6937
movq fromspace_end(%rip), tmp6939
cmpq tmp6939, tmp6937
jl block6947
jmp block6948




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
jmp block6948




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
jmp block6945

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
jmp block6948




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: (movq $0, 0(%r15)
)
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, %r15
    jmp start
    
conclusion:
    subq $8, %r15
    addq $8, %rsp
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6932 : 'Integer, tmp6938 : 'Integer, tmp6937 : 'Integer, tmp6939 : 'Integer, _6934 : 'Void, alloc6931 : '(Vector
                                                                                                                     Integer), _6933 : 'Void, vecinit6928 : '(Vector
                                                                                                                                                              Integer), tmp6941 : 'Integer, tmp6940 : 'Integer, tmp6942 : 'Integer, _6930 : 'Void, alloc6927 : '(Vector
                                                                                                                                                                                                                                                                 (Vector
                                                                                                                                                                                                                                                                  Integer)), _6929 : 'Void, tmp6936 : '(Vector
                                                                                                                                                                                                                                                                                                        (Vector
                                                                                                                                                                                                                                                                                                         Integer)), tmp6935 : '(Vector
                                                                                                                                                                                                                                                                                                                                Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
1
stack-space:
16
block6943:
    live-sets:
(list
 (set vecinit6928)
 (set vecinit6928)
 (set vecinit6928 %r11)
 (set vecinit6928 alloc6927)
 (set vecinit6928 alloc6927)
 (set alloc6927)
 (set alloc6927)
 (set tmp6936)
 (set %r11)
 (set tmp6935)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $131, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block6945:
    live-sets:
(list
 (set vecinit6928 %rdi)
 (set %rsi vecinit6928 %rdi)
 (set vecinit6928)
 (set vecinit6928))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6944:
    live-sets:
(list (set vecinit6928) (set vecinit6928))
movq $0, %rcx
jmp block6943

block6946:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 %r11)
 (set vecinit6932 %r15 alloc6931)
 (set vecinit6932 %r15 alloc6931)
 (set %r15 alloc6931)
 (set %r15 alloc6931)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15 tmp6941)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15)
 (set vecinit6928 tmp6940 %r15 tmp6942)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15)
 (set vecinit6928 %r15))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq free_ptr(%rip), %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6944
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6943

block6948:
    live-sets:
(list
 (set vecinit6932 %r15 %rdi)
 (set %rsi vecinit6932 %r15 %rdi)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

block6947:
    live-sets:
(list (set vecinit6932 %r15) (set vecinit6932 %r15))
movq $0, %rcx
jmp block6946

start:
    live-sets:
(list
 (set vecinit6932 %r15)
 (set vecinit6932 %r15 tmp6938)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15)
 (set vecinit6932 tmp6937 %r15 tmp6939)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15)
 (set vecinit6932 %r15))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rdx
addq $16, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6947
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block6946

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, %r15
    jmp start
    
conclusion:
    subq $8, %r15
    addq $8, %rsp
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(let ([v (vector 1 #t 42)])
   (if (vector-ref v 1)
      42
      5)
   )


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v (vector 1 #t 42)])
   (if (vector-ref v 1)
      42
      5)
   )


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v (vector 1 #t 42)])
   (if (vector-ref v 1)
      42
      5)
   )


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6956 (vector 1 #t 42)])
   (if (vector-ref v6956 1)
      42
      5)
   )


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6956 (vector 1 #t 42)])
   (if (vector-ref v6956 1)
      42
      5)
   )


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6956 (let ([vecinit6958 1])
                (let ([vecinit6959 #t])
                   (let ([vecinit6960 42])
                      (let ([_6964 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc6957 (allocate 3 (Vector Integer Boolean Integer))])
                            (let ([_6963 (vector-set! alloc6957 0 vecinit6958)])
                               (let ([_6962 (vector-set! alloc6957 1 vecinit6959)])
                                  (let ([_6961 (vector-set! alloc6957 2 vecinit6960)])
                                     alloc6957))))))))])
   (if (vector-ref v6956 1)
      42
      5)
   )


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6956 (let ([vecinit6958 1])
                (let ([vecinit6959 #t])
                   (let ([vecinit6960 42])
                      (let ([_6964 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc6957 (allocate 3 (Vector Integer Boolean Integer))])
                            (let ([_6963 (vector-set! alloc6957 0 vecinit6958)])
                               (let ([_6962 (vector-set! alloc6957 1 vecinit6959)])
                                  (let ([_6961 (vector-set! alloc6957 2 vecinit6960)])
                                     alloc6957))))))))])
   (if (vector-ref v6956 1)
      42
      5)
   )


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v6956 (let ([vecinit6958 1])
                (let ([vecinit6959 #t])
                   (let ([vecinit6960 42])
                      (let ([_6964 (if (let ([tmp6965 (let ([tmp6966 (global-value free_ptr)])
                                                         (+ tmp6966 32))])
                                          (let ([tmp6967 (global-value fromspace_end)])
                                             (< tmp6965 tmp6967)))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc6957 (allocate 3 (Vector Integer Boolean Integer))])
                            (let ([_6963 (vector-set! alloc6957 0 vecinit6958)])
                               (let ([_6962 (vector-set! alloc6957 1 vecinit6959)])
                                  (let ([_6961 (vector-set! alloc6957 2 vecinit6960)])
                                     alloc6957))))))))])
   (if (vector-ref v6956 1)
      42
      5)
   )


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v6956 (let ([vecinit6958 1])
                (let ([vecinit6959 #t])
                   (let ([vecinit6960 42])
                      (let ([_6964 (if (let ([tmp6965 (let ([tmp6966 (global-value free_ptr)])
                                                         (+ tmp6966 32))])
                                          (let ([tmp6967 (global-value fromspace_end)])
                                             (< tmp6965 tmp6967)))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc6957 (allocate 3 (Vector Integer Boolean Integer))])
                            (let ([_6963 (vector-set! alloc6957 0 vecinit6958)])
                               (let ([_6962 (vector-set! alloc6957 1 vecinit6959)])
                                  (let ([_6961 (vector-set! alloc6957 2 vecinit6960)])
                                     alloc6957))))))))])
   (if (vector-ref v6956 1)
      42
      5)
   )


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit6958 = 1;
    vecinit6959 = #t;
    vecinit6960 = 42;
    tmp6966 = (global-value free_ptr);
    tmp6965 = (+ tmp6966 32);
    tmp6967 = (global-value fromspace_end);
    if (< tmp6965 tmp6967)
       goto block6972;
    else
       goto block6973;
block6973:
    (collect 32)
    goto block6971;
block6972:
    _6964 = (void);
    goto block6971;
block6971:
    alloc6957 = (allocate 3 (Vector Integer Boolean Integer));
    _6963 = (vector-set! alloc6957 0 vecinit6958);
    _6962 = (vector-set! alloc6957 1 vecinit6959);
    _6961 = (vector-set! alloc6957 2 vecinit6960);
    v6956 = alloc6957;
    tmp6968 = (vector-ref v6956 1);
    if (eq? tmp6968 #t)
       goto block6969;
    else
       goto block6970;
block6970:
    return 5;
block6969:
    return 42;



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
start:
    vecinit6958 = 1;
    vecinit6959 = #t;
    vecinit6960 = 42;
    tmp6966 = (global-value free_ptr);
    tmp6965 = (+ tmp6966 32);
    tmp6967 = (global-value fromspace_end);
    if (< tmp6965 tmp6967)
       goto block6972;
    else
       goto block6973;
block6973:
    (collect 32)
    goto block6971;
block6972:
    _6964 = (void);
    goto block6971;
block6971:
    alloc6957 = (allocate 3 (Vector Integer Boolean Integer));
    _6963 = (vector-set! alloc6957 0 vecinit6958);
    _6962 = (vector-set! alloc6957 1 vecinit6959);
    _6961 = (vector-set! alloc6957 2 vecinit6960);
    v6956 = alloc6957;
    tmp6968 = (vector-ref v6956 1);
    if (eq? tmp6968 #t)
       goto block6969;
    else
       goto block6970;
block6970:
    return 5;
block6969:
    return 42;



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
start:
    movq $1, vecinit6958
    movq $1, vecinit6959
    movq $42, vecinit6960
    movq free_ptr(%rip), tmp6966
    movq tmp6966, tmp6965
    addq $32, tmp6965
    movq fromspace_end(%rip), tmp6967
    cmpq tmp6967, tmp6965
    jl block6972
    jmp block6973
    
block6973:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block6971
    
block6972:
    movq $0, _6964
    jmp block6971
    
block6971:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6957
    movq alloc6957, %r11
    movq vecinit6958, 8(%r11)
    movq $0, _6963
    movq alloc6957, %r11
    movq vecinit6959, 16(%r11)
    movq $0, _6962
    movq alloc6957, %r11
    movq vecinit6960, 24(%r11)
    movq $0, _6961
    movq alloc6957, v6956
    movq v6956, %r11
    movq 16(%r11), tmp6968
    cmpq $1, tmp6968
    je block6969
    jmp block6970
    
block6970:
    movq $5, %rax
    jmp conclusion
    
block6969:
    movq $42, %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
start:
    movq $1, vecinit6958
    movq $1, vecinit6959
    movq $42, vecinit6960
    movq free_ptr(%rip), tmp6966
    movq tmp6966, tmp6965
    addq $32, tmp6965
    movq fromspace_end(%rip), tmp6967
    cmpq tmp6967, tmp6965
    jl block6972
    jmp block6973
    
block6973:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block6971
    
block6972:
    movq $0, _6964
    jmp block6971
    
block6971:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6957
    movq alloc6957, %r11
    movq vecinit6958, 8(%r11)
    movq $0, _6963
    movq alloc6957, %r11
    movq vecinit6959, 16(%r11)
    movq $0, _6962
    movq alloc6957, %r11
    movq vecinit6960, 24(%r11)
    movq $0, _6961
    movq alloc6957, v6956
    movq v6956, %r11
    movq 16(%r11), tmp6968
    cmpq $1, tmp6968
    je block6969
    jmp block6970
    
block6970:
    movq $5, %rax
    jmp conclusion
    
block6969:
    movq $42, %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6957
movq alloc6957, %r11
movq vecinit6958, 8(%r11)
movq $0, _6963
movq alloc6957, %r11
movq vecinit6959, 16(%r11)
movq $0, _6962
movq alloc6957, %r11
movq vecinit6960, 24(%r11)
movq $0, _6961
movq alloc6957, v6956
movq v6956, %r11
movq 16(%r11), tmp6968
cmpq $1, tmp6968
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, _6964
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, vecinit6958
movq $1, vecinit6959
movq $42, vecinit6960
movq free_ptr(%rip), tmp6966
movq tmp6966, tmp6965
addq $32, tmp6965
movq fromspace_end(%rip), tmp6967
cmpq tmp6967, tmp6965
jl block6972
jmp block6973




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6957
movq alloc6957, %r11
movq vecinit6958, 8(%r11)
movq $0, _6963
movq alloc6957, %r11
movq vecinit6959, 16(%r11)
movq $0, _6962
movq alloc6957, %r11
movq vecinit6960, 24(%r11)
movq $0, _6961
movq alloc6957, v6956
movq v6956, %r11
movq 16(%r11), tmp6968
cmpq $1, tmp6968
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, _6964
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, vecinit6958
movq $1, vecinit6959
movq $42, vecinit6960
movq free_ptr(%rip), tmp6966
movq tmp6966, tmp6965
addq $32, tmp6965
movq fromspace_end(%rip), tmp6967
cmpq tmp6967, tmp6965
jl block6972
jmp block6973




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq $42, %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq $5, %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: addq $32, free_ptr(%rip)

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: movq $7, 0(%r11)

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958 %r11>
1 instruction: movq %r11, alloc6957

2 live-set: #<set: vecinit6959 vecinit6960 alloc6957 vecinit6958>
1 instruction: movq alloc6957, %r11

2 live-set: #<set: vecinit6959 vecinit6960 alloc6957 vecinit6958>
1 instruction: movq vecinit6958, 8(%r11)

2 live-set: #<set: vecinit6959 vecinit6960 alloc6957>
1 instruction: movq $0, _6963

2 live-set: #<set: vecinit6959 vecinit6960 alloc6957>
1 instruction: movq alloc6957, %r11

2 live-set: #<set: vecinit6959 vecinit6960 alloc6957>
1 instruction: movq vecinit6959, 16(%r11)

2 live-set: #<set: vecinit6960 alloc6957>
1 instruction: movq $0, _6962

2 live-set: #<set: vecinit6960 alloc6957>
1 instruction: movq alloc6957, %r11

2 live-set: #<set: vecinit6960 alloc6957>
1 instruction: movq vecinit6960, 24(%r11)

2 live-set: #<set: alloc6957>
1 instruction: movq $0, _6961

2 live-set: #<set: alloc6957>
1 instruction: movq alloc6957, v6956

2 live-set: #<set: v6956>
1 instruction: movq v6956, %r11

2 live-set: #<set: %r11>
1 instruction: movq 16(%r11), tmp6968

2 live-set: #<set: tmp6968>
1 instruction: cmpq $1, tmp6968

2 live-set: #<set:>
1 instruction: je block6969

2 live-set: #<set:>
1 instruction: jmp block6970

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958 %rdi>
1 instruction: movq $32, %rsi

2 live-set: #<set: vecinit6959 %rsi vecinit6960 vecinit6958 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: jmp block6971

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: movq $0, _6964

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: jmp block6971

2 live-set: #<set: vecinit6959 vecinit6960 vecinit6958>
1 instruction: movq $1, vecinit6958

2 live-set: #<set: %r15 vecinit6958>
1 instruction: movq $1, vecinit6959

2 live-set: #<set: vecinit6959 %r15 vecinit6958>
1 instruction: movq $42, vecinit6960

2 live-set: #<set: vecinit6959 vecinit6960 %r15 vecinit6958>
1 instruction: movq free_ptr(%rip), tmp6966

2 live-set: #<set: vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958>
1 instruction: movq tmp6966, tmp6965

2 live-set: #<set: vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958>
1 instruction: addq $32, tmp6965

2 live-set: #<set: vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958>
1 instruction: movq fromspace_end(%rip), tmp6967

2 live-set: #<set: vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958>
1 instruction: cmpq tmp6967, tmp6965

2 live-set: #<set: vecinit6959 vecinit6960 %r15 vecinit6958>
1 instruction: jl block6972

2 live-set: #<set: vecinit6959 vecinit6960 %r15 vecinit6958>
1 instruction: jmp block6973

2 live-set: #<set: vecinit6959 vecinit6960 %r15 vecinit6958>
%rsi -> vecinit6959;
%rsi -> vecinit6960;
%rsi -> vecinit6958;
%rsi -> %rdi;
_6964 -> vecinit6959;
_6964 -> vecinit6960;
_6964 -> vecinit6958;
_6961 -> alloc6957;
%rcx -> vecinit6959;
%rcx -> vecinit6960;
%rcx -> vecinit6958;
%r11 -> vecinit6959;
%r11 -> vecinit6960;
%r11 -> alloc6957;
%r11 -> vecinit6958;
vecinit6960 -> vecinit6959;
vecinit6960 -> _6964;
vecinit6960 -> tmp6965;
vecinit6960 -> _6963;
vecinit6960 -> %rcx;
vecinit6960 -> %rsi;
vecinit6960 -> %rdx;
vecinit6960 -> %r8;
vecinit6960 -> _6962;
vecinit6960 -> tmp6967;
vecinit6960 -> tmp6966;
vecinit6960 -> alloc6957;
vecinit6960 -> %r15;
vecinit6960 -> %r9;
vecinit6960 -> vecinit6958;
vecinit6960 -> %r11;
vecinit6960 -> %rax;
vecinit6960 -> %rdi;
vecinit6960 -> %r10;
%r15 -> vecinit6959;
%r15 -> tmp6965;
%r15 -> tmp6967;
%r15 -> vecinit6960;
%r15 -> tmp6966;
%r15 -> vecinit6958;
tmp6967 -> vecinit6959;
tmp6967 -> tmp6965;
tmp6967 -> vecinit6960;
tmp6967 -> %r15;
tmp6967 -> vecinit6958;
%rax -> vecinit6959;
%rax -> vecinit6960;
%rax -> vecinit6958;
_6962 -> vecinit6960;
_6962 -> alloc6957;
%r8 -> vecinit6959;
%r8 -> vecinit6960;
%r8 -> vecinit6958;
%r10 -> vecinit6959;
%r10 -> vecinit6960;
%r10 -> vecinit6958;
tmp6965 -> vecinit6959;
tmp6965 -> tmp6967;
tmp6965 -> vecinit6960;
tmp6965 -> %r15;
tmp6965 -> vecinit6958;
%rdx -> vecinit6959;
%rdx -> vecinit6960;
%rdx -> vecinit6958;
_6963 -> vecinit6959;
_6963 -> vecinit6960;
_6963 -> alloc6957;
tmp6966 -> vecinit6959;
tmp6966 -> vecinit6960;
tmp6966 -> %r15;
tmp6966 -> vecinit6958;
%rdi -> vecinit6959;
%rdi -> %rsi;
%rdi -> vecinit6960;
%rdi -> vecinit6958;
vecinit6958 -> vecinit6959;
vecinit6958 -> _6964;
vecinit6958 -> tmp6965;
vecinit6958 -> %rcx;
vecinit6958 -> %rsi;
vecinit6958 -> %rdx;
vecinit6958 -> %r8;
vecinit6958 -> tmp6967;
vecinit6958 -> vecinit6960;
vecinit6958 -> tmp6966;
vecinit6958 -> alloc6957;
vecinit6958 -> %r15;
vecinit6958 -> %r9;
vecinit6958 -> %r11;
vecinit6958 -> %rax;
vecinit6958 -> %rdi;
vecinit6958 -> %r10;
alloc6957 -> vecinit6959;
alloc6957 -> _6961;
alloc6957 -> _6963;
alloc6957 -> _6962;
alloc6957 -> vecinit6960;
alloc6957 -> vecinit6958;
alloc6957 -> %r11;
%r9 -> vecinit6959;
%r9 -> vecinit6960;
%r9 -> vecinit6958;
vecinit6959 -> _6964;
vecinit6959 -> tmp6965;
vecinit6959 -> _6963;
vecinit6959 -> %rcx;
vecinit6959 -> %rsi;
vecinit6959 -> %rdx;
vecinit6959 -> %r8;
vecinit6959 -> tmp6967;
vecinit6959 -> vecinit6960;
vecinit6959 -> tmp6966;
vecinit6959 -> alloc6957;
vecinit6959 -> %r15;
vecinit6959 -> %r9;
vecinit6959 -> vecinit6958;
vecinit6959 -> %r11;
vecinit6959 -> %rax;
vecinit6959 -> %rdi;
vecinit6959 -> %r10;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6957
movq alloc6957, %r11
movq vecinit6958, 8(%r11)
movq $0, _6963
movq alloc6957, %r11
movq vecinit6959, 16(%r11)
movq $0, _6962
movq alloc6957, %r11
movq vecinit6960, 24(%r11)
movq $0, _6961
movq alloc6957, v6956
movq v6956, %r11
movq 16(%r11), tmp6968
cmpq $1, tmp6968
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, _6964
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, vecinit6958
movq $1, vecinit6959
movq $42, vecinit6960
movq free_ptr(%rip), tmp6966
movq tmp6966, tmp6965
addq $32, tmp6965
movq fromspace_end(%rip), tmp6967
cmpq tmp6967, tmp6965
jl block6972
jmp block6973




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6957
movq alloc6957, %r11
movq vecinit6958, 8(%r11)
movq $0, _6963
movq alloc6957, %r11
movq vecinit6959, 16(%r11)
movq $0, _6962
movq alloc6957, %r11
movq vecinit6960, 24(%r11)
movq $0, _6961
movq alloc6957, v6956
movq v6956, %r11
movq 16(%r11), tmp6968
cmpq $1, tmp6968
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, _6964
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, vecinit6958
movq $1, vecinit6959
movq $42, vecinit6960
movq free_ptr(%rip), tmp6966
movq tmp6966, tmp6965
addq $32, tmp6965
movq fromspace_end(%rip), tmp6967
cmpq tmp6967, tmp6965
jl block6972
jmp block6973




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
jmp block6973




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
jmp block6970

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
jmp block6973




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: ()
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit6958 : 'Integer, vecinit6959 : 'Boolean, vecinit6960 : 'Integer, tmp6966 : 'Integer, tmp6965 : 'Integer, tmp6967 : 'Integer, _6964 : 'Void, alloc6957 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Boolean
                                                                                                                                                                     Integer), _6963 : 'Void, _6962 : 'Void, _6961 : 'Void, v6956 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Boolean
                                                                                                                                                                                                                                      Integer), tmp6968 : 'Boolean, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block6969:
    live-sets:
(list (set) (set))
movq $42, %rax
jmp conclusion

block6970:
    live-sets:
(list (set) (set))
movq $5, %rax
jmp conclusion

block6971:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958 %r11)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957 vecinit6958)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6959 vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set vecinit6960 alloc6957)
 (set alloc6957)
 (set alloc6957)
 (set v6956)
 (set %r11)
 (set tmp6968)
 (set)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r12, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rcx
cmpq $1, %rcx
je block6969
movq $5, %rax
jmp conclusion

block6973:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 %rsi vecinit6960 vecinit6958 %rdi)
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

block6972:
    live-sets:
(list
 (set vecinit6959 vecinit6960 vecinit6958)
 (set vecinit6959 vecinit6960 vecinit6958))
movq $0, %rcx
jmp block6971

start:
    live-sets:
(list
 (set %r15 vecinit6958)
 (set vecinit6959 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 tmp6966 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 tmp6965 tmp6967 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958)
 (set vecinit6959 vecinit6960 %r15 vecinit6958))
movq $1, %r12
movq $1, %r13
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block6972
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block6971

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(vector-length (vector 1 #t (vector 4 5 6) (vector-length (vector 1 2 3))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-length (vector 1 #t (vector 4 5 6) (vector-length (vector 1 2 3))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-length (vector 1 #t (vector 4 5 6) (vector-length (vector 1 2 3))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-length (vector 1 #t (vector 4 5 6) (vector-length (vector 1 2 3))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-length (vector 1 #t (vector 4 5 6) (vector-length (vector 1 2 3))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-length (let ([vecinit6982 1])
                  (let ([vecinit6983 #t])
                     (let ([vecinit6984 (let ([vecinit7000 4])
                                           (let ([vecinit7001 5])
                                              (let ([vecinit7002 6])
                                                 (let ([_7006 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                                                 (void)
                                                                 (collect 32))
                                                              ])
                                                    (let ([alloc6999 (allocate 3 (Vector Integer Integer Integer))])
                                                       (let ([_7005 (vector-set! alloc6999 0 vecinit7000)])
                                                          (let ([_7004 (vector-set! alloc6999 1 vecinit7001)])
                                                             (let ([_7003 (vector-set! alloc6999 2 vecinit7002)])
                                                                alloc6999))))))))])
                        (let ([vecinit6985 (vector-length (let ([vecinit6992 1])
                                                             (let ([vecinit6993 2])
                                                                (let ([vecinit6994 3])
                                                                   (let ([_6998 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                                                                   (void)
                                                                                   (collect 32))
                                                                                ])
                                                                      (let ([alloc6991 (allocate 3 (Vector Integer Integer Integer))])
                                                                         (let ([_6997 (vector-set! alloc6991 0 vecinit6992)])
                                                                            (let ([_6996 (vector-set! alloc6991 1 vecinit6993)])
                                                                               (let ([_6995 (vector-set! alloc6991 2 vecinit6994)])
                                                                                  alloc6991)))))))))])
                           (let ([_6990 (if (< (+ (global-value free_ptr) 40) (global-value fromspace_end))
                                           (void)
                                           (collect 40))
                                        ])
                              (let ([alloc6981 (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))])
                                 (let ([_6989 (vector-set! alloc6981 0 vecinit6982)])
                                    (let ([_6988 (vector-set! alloc6981 1 vecinit6983)])
                                       (let ([_6987 (vector-set! alloc6981 2 vecinit6984)])
                                          (let ([_6986 (vector-set! alloc6981 3 vecinit6985)])
                                             alloc6981)))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-length (let ([vecinit6982 1])
                  (let ([vecinit6983 #t])
                     (let ([vecinit6984 (let ([vecinit7000 4])
                                           (let ([vecinit7001 5])
                                              (let ([vecinit7002 6])
                                                 (let ([_7006 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                                                 (void)
                                                                 (collect 32))
                                                              ])
                                                    (let ([alloc6999 (allocate 3 (Vector Integer Integer Integer))])
                                                       (let ([_7005 (vector-set! alloc6999 0 vecinit7000)])
                                                          (let ([_7004 (vector-set! alloc6999 1 vecinit7001)])
                                                             (let ([_7003 (vector-set! alloc6999 2 vecinit7002)])
                                                                alloc6999))))))))])
                        (let ([vecinit6985 (vector-length (let ([vecinit6992 1])
                                                             (let ([vecinit6993 2])
                                                                (let ([vecinit6994 3])
                                                                   (let ([_6998 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                                                                   (void)
                                                                                   (collect 32))
                                                                                ])
                                                                      (let ([alloc6991 (allocate 3 (Vector Integer Integer Integer))])
                                                                         (let ([_6997 (vector-set! alloc6991 0 vecinit6992)])
                                                                            (let ([_6996 (vector-set! alloc6991 1 vecinit6993)])
                                                                               (let ([_6995 (vector-set! alloc6991 2 vecinit6994)])
                                                                                  alloc6991)))))))))])
                           (let ([_6990 (if (< (+ (global-value free_ptr) 40) (global-value fromspace_end))
                                           (void)
                                           (collect 40))
                                        ])
                              (let ([alloc6981 (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))])
                                 (let ([_6989 (vector-set! alloc6981 0 vecinit6982)])
                                    (let ([_6988 (vector-set! alloc6981 1 vecinit6983)])
                                       (let ([_6987 (vector-set! alloc6981 2 vecinit6984)])
                                          (let ([_6986 (vector-set! alloc6981 3 vecinit6985)])
                                             alloc6981)))))))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([tmp7007 (let ([vecinit6982 1])
                  (let ([vecinit6983 #t])
                     (let ([vecinit6984 (let ([vecinit7000 4])
                                           (let ([vecinit7001 5])
                                              (let ([vecinit7002 6])
                                                 (let ([_7006 (if (let ([tmp7008 (let ([tmp7009 (global-value free_ptr)])
                                                                                    (+ tmp7009 32))])
                                                                     (let ([tmp7010 (global-value fromspace_end)])
                                                                        (< tmp7008 tmp7010)))
                                                                 (void)
                                                                 (collect 32))
                                                              ])
                                                    (let ([alloc6999 (allocate 3 (Vector Integer Integer Integer))])
                                                       (let ([_7005 (vector-set! alloc6999 0 vecinit7000)])
                                                          (let ([_7004 (vector-set! alloc6999 1 vecinit7001)])
                                                             (let ([_7003 (vector-set! alloc6999 2 vecinit7002)])
                                                                alloc6999))))))))])
                        (let ([vecinit6985 (let ([tmp7011 (let ([vecinit6992 1])
                                                             (let ([vecinit6993 2])
                                                                (let ([vecinit6994 3])
                                                                   (let ([_6998 (if (let ([tmp7012 (let ([tmp7013 (global-value free_ptr)])
                                                                                                      (+ tmp7013 32))])
                                                                                       (let ([tmp7014 (global-value fromspace_end)])
                                                                                          (< tmp7012 tmp7014)))
                                                                                   (void)
                                                                                   (collect 32))
                                                                                ])
                                                                      (let ([alloc6991 (allocate 3 (Vector Integer Integer Integer))])
                                                                         (let ([_6997 (vector-set! alloc6991 0 vecinit6992)])
                                                                            (let ([_6996 (vector-set! alloc6991 1 vecinit6993)])
                                                                               (let ([_6995 (vector-set! alloc6991 2 vecinit6994)])
                                                                                  alloc6991))))))))])
                                              (vector-length tmp7011))])
                           (let ([_6990 (if (let ([tmp7015 (let ([tmp7016 (global-value free_ptr)])
                                                              (+ tmp7016 40))])
                                               (let ([tmp7017 (global-value fromspace_end)])
                                                  (< tmp7015 tmp7017)))
                                           (void)
                                           (collect 40))
                                        ])
                              (let ([alloc6981 (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))])
                                 (let ([_6989 (vector-set! alloc6981 0 vecinit6982)])
                                    (let ([_6988 (vector-set! alloc6981 1 vecinit6983)])
                                       (let ([_6987 (vector-set! alloc6981 2 vecinit6984)])
                                          (let ([_6986 (vector-set! alloc6981 3 vecinit6985)])
                                             alloc6981))))))))))])
   (vector-length tmp7007))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([tmp7007 (let ([vecinit6982 1])
                  (let ([vecinit6983 #t])
                     (let ([vecinit6984 (let ([vecinit7000 4])
                                           (let ([vecinit7001 5])
                                              (let ([vecinit7002 6])
                                                 (let ([_7006 (if (let ([tmp7008 (let ([tmp7009 (global-value free_ptr)])
                                                                                    (+ tmp7009 32))])
                                                                     (let ([tmp7010 (global-value fromspace_end)])
                                                                        (< tmp7008 tmp7010)))
                                                                 (void)
                                                                 (collect 32))
                                                              ])
                                                    (let ([alloc6999 (allocate 3 (Vector Integer Integer Integer))])
                                                       (let ([_7005 (vector-set! alloc6999 0 vecinit7000)])
                                                          (let ([_7004 (vector-set! alloc6999 1 vecinit7001)])
                                                             (let ([_7003 (vector-set! alloc6999 2 vecinit7002)])
                                                                alloc6999))))))))])
                        (let ([vecinit6985 (let ([tmp7011 (let ([vecinit6992 1])
                                                             (let ([vecinit6993 2])
                                                                (let ([vecinit6994 3])
                                                                   (let ([_6998 (if (let ([tmp7012 (let ([tmp7013 (global-value free_ptr)])
                                                                                                      (+ tmp7013 32))])
                                                                                       (let ([tmp7014 (global-value fromspace_end)])
                                                                                          (< tmp7012 tmp7014)))
                                                                                   (void)
                                                                                   (collect 32))
                                                                                ])
                                                                      (let ([alloc6991 (allocate 3 (Vector Integer Integer Integer))])
                                                                         (let ([_6997 (vector-set! alloc6991 0 vecinit6992)])
                                                                            (let ([_6996 (vector-set! alloc6991 1 vecinit6993)])
                                                                               (let ([_6995 (vector-set! alloc6991 2 vecinit6994)])
                                                                                  alloc6991))))))))])
                                              (vector-length tmp7011))])
                           (let ([_6990 (if (let ([tmp7015 (let ([tmp7016 (global-value free_ptr)])
                                                              (+ tmp7016 40))])
                                               (let ([tmp7017 (global-value fromspace_end)])
                                                  (< tmp7015 tmp7017)))
                                           (void)
                                           (collect 40))
                                        ])
                              (let ([alloc6981 (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))])
                                 (let ([_6989 (vector-set! alloc6981 0 vecinit6982)])
                                    (let ([_6988 (vector-set! alloc6981 1 vecinit6983)])
                                       (let ([_6987 (vector-set! alloc6981 2 vecinit6984)])
                                          (let ([_6986 (vector-set! alloc6981 3 vecinit6985)])
                                             alloc6981))))))))))])
   (vector-length tmp7007))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit6982 = 1;
    vecinit6983 = #t;
    vecinit7000 = 4;
    vecinit7001 = 5;
    vecinit7002 = 6;
    tmp7009 = (global-value free_ptr);
    tmp7008 = (+ tmp7009 32);
    tmp7010 = (global-value fromspace_end);
    if (< tmp7008 tmp7010)
       goto block7025;
    else
       goto block7026;
block7026:
    (collect 32)
    goto block7024;
block7025:
    _7006 = (void);
    goto block7024;
block7024:
    alloc6999 = (allocate 3 (Vector Integer Integer Integer));
    _7005 = (vector-set! alloc6999 0 vecinit7000);
    _7004 = (vector-set! alloc6999 1 vecinit7001);
    _7003 = (vector-set! alloc6999 2 vecinit7002);
    vecinit6984 = alloc6999;
    vecinit6992 = 1;
    vecinit6993 = 2;
    vecinit6994 = 3;
    tmp7013 = (global-value free_ptr);
    tmp7012 = (+ tmp7013 32);
    tmp7014 = (global-value fromspace_end);
    if (< tmp7012 tmp7014)
       goto block7022;
    else
       goto block7023;
block7023:
    (collect 32)
    goto block7021;
block7022:
    _6998 = (void);
    goto block7021;
block7021:
    alloc6991 = (allocate 3 (Vector Integer Integer Integer));
    _6997 = (vector-set! alloc6991 0 vecinit6992);
    _6996 = (vector-set! alloc6991 1 vecinit6993);
    _6995 = (vector-set! alloc6991 2 vecinit6994);
    tmp7011 = alloc6991;
    vecinit6985 = (vector-length tmp7011);
    tmp7016 = (global-value free_ptr);
    tmp7015 = (+ tmp7016 40);
    tmp7017 = (global-value fromspace_end);
    if (< tmp7015 tmp7017)
       goto block7019;
    else
       goto block7020;
block7020:
    (collect 40)
    goto block7018;
block7019:
    _6990 = (void);
    goto block7018;
block7018:
    alloc6981 = (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer));
    _6989 = (vector-set! alloc6981 0 vecinit6982);
    _6988 = (vector-set! alloc6981 1 vecinit6983);
    _6987 = (vector-set! alloc6981 2 vecinit6984);
    _6986 = (vector-set! alloc6981 3 vecinit6985);
    tmp7007 = alloc6981;
    return (vector-length tmp7007);



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Integer), _6997 : 'Void, 
start:
    vecinit6982 = 1;
    vecinit6983 = #t;
    vecinit7000 = 4;
    vecinit7001 = 5;
    vecinit7002 = 6;
    tmp7009 = (global-value free_ptr);
    tmp7008 = (+ tmp7009 32);
    tmp7010 = (global-value fromspace_end);
    if (< tmp7008 tmp7010)
       goto block7025;
    else
       goto block7026;
block7026:
    (collect 32)
    goto block7024;
block7025:
    _7006 = (void);
    goto block7024;
block7024:
    alloc6999 = (allocate 3 (Vector Integer Integer Integer));
    _7005 = (vector-set! alloc6999 0 vecinit7000);
    _7004 = (vector-set! alloc6999 1 vecinit7001);
    _7003 = (vector-set! alloc6999 2 vecinit7002);
    vecinit6984 = alloc6999;
    vecinit6992 = 1;
    vecinit6993 = 2;
    vecinit6994 = 3;
    tmp7013 = (global-value free_ptr);
    tmp7012 = (+ tmp7013 32);
    tmp7014 = (global-value fromspace_end);
    if (< tmp7012 tmp7014)
       goto block7022;
    else
       goto block7023;
block7023:
    (collect 32)
    goto block7021;
block7022:
    _6998 = (void);
    goto block7021;
block7021:
    alloc6991 = (allocate 3 (Vector Integer Integer Integer));
    _6997 = (vector-set! alloc6991 0 vecinit6992);
    _6996 = (vector-set! alloc6991 1 vecinit6993);
    _6995 = (vector-set! alloc6991 2 vecinit6994);
    tmp7011 = alloc6991;
    vecinit6985 = (vector-length tmp7011);
    tmp7016 = (global-value free_ptr);
    tmp7015 = (+ tmp7016 40);
    tmp7017 = (global-value fromspace_end);
    if (< tmp7015 tmp7017)
       goto block7019;
    else
       goto block7020;
block7020:
    (collect 40)
    goto block7018;
block7019:
    _6990 = (void);
    goto block7018;
block7018:
    alloc6981 = (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer));
    _6989 = (vector-set! alloc6981 0 vecinit6982);
    _6988 = (vector-set! alloc6981 1 vecinit6983);
    _6987 = (vector-set! alloc6981 2 vecinit6984);
    _6986 = (vector-set! alloc6981 3 vecinit6985);
    tmp7007 = alloc6981;
    return (vector-length tmp7007);



output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
start:
    movq $1, vecinit6982
    movq $1, vecinit6983
    movq $4, vecinit7000
    movq $5, vecinit7001
    movq $6, vecinit7002
    movq free_ptr(%rip), tmp7009
    movq tmp7009, tmp7008
    addq $32, tmp7008
    movq fromspace_end(%rip), tmp7010
    cmpq tmp7010, tmp7008
    jl block7025
    jmp block7026
    
block7026:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7024
    
block7025:
    movq $0, _7006
    jmp block7024
    
block7024:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6999
    movq alloc6999, %r11
    movq vecinit7000, 8(%r11)
    movq $0, _7005
    movq alloc6999, %r11
    movq vecinit7001, 16(%r11)
    movq $0, _7004
    movq alloc6999, %r11
    movq vecinit7002, 24(%r11)
    movq $0, _7003
    movq alloc6999, vecinit6984
    movq $1, vecinit6992
    movq $2, vecinit6993
    movq $3, vecinit6994
    movq free_ptr(%rip), tmp7013
    movq tmp7013, tmp7012
    addq $32, tmp7012
    movq fromspace_end(%rip), tmp7014
    cmpq tmp7014, tmp7012
    jl block7022
    jmp block7023
    
block7023:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7021
    
block7022:
    movq $0, _6998
    jmp block7021
    
block7021:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6991
    movq alloc6991, %r11
    movq vecinit6992, 8(%r11)
    movq $0, _6997
    movq alloc6991, %r11
    movq vecinit6993, 16(%r11)
    movq $0, _6996
    movq alloc6991, %r11
    movq vecinit6994, 24(%r11)
    movq $0, _6995
    movq alloc6991, tmp7011
    movq tmp7011, %r11
    movq 0(%r11), %r11
    sarq $1, %r11
    andq $63, %r11
    movq %r11, vecinit6985
    movq free_ptr(%rip), tmp7016
    movq tmp7016, tmp7015
    addq $40, tmp7015
    movq fromspace_end(%rip), tmp7017
    cmpq tmp7017, tmp7015
    jl block7019
    jmp block7020
    
block7020:
    movq %r15, %rdi
    movq $40, %rsi
    callq collect
    jmp block7018
    
block7019:
    movq $0, _6990
    jmp block7018
    
block7018:
    movq free_ptr(%rip), %r11
    addq $40, free_ptr(%rip)
    movq $521, 0(%r11)
    movq %r11, alloc6981
    movq alloc6981, %r11
    movq vecinit6982, 8(%r11)
    movq $0, _6989
    movq alloc6981, %r11
    movq vecinit6983, 16(%r11)
    movq $0, _6988
    movq alloc6981, %r11
    movq vecinit6984, 24(%r11)
    movq $0, _6987
    movq alloc6981, %r11
    movq vecinit6985, 32(%r11)
    movq $0, _6986
    movq alloc6981, tmp7007
    movq tmp7007, %r11
    movq 0(%r11), %r11
    sarq $1, %r11
    andq $63, %r11
    movq %r11, %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
start:
    movq $1, vecinit6982
    movq $1, vecinit6983
    movq $4, vecinit7000
    movq $5, vecinit7001
    movq $6, vecinit7002
    movq free_ptr(%rip), tmp7009
    movq tmp7009, tmp7008
    addq $32, tmp7008
    movq fromspace_end(%rip), tmp7010
    cmpq tmp7010, tmp7008
    jl block7025
    jmp block7026
    
block7026:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7024
    
block7025:
    movq $0, _7006
    jmp block7024
    
block7024:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6999
    movq alloc6999, %r11
    movq vecinit7000, 8(%r11)
    movq $0, _7005
    movq alloc6999, %r11
    movq vecinit7001, 16(%r11)
    movq $0, _7004
    movq alloc6999, %r11
    movq vecinit7002, 24(%r11)
    movq $0, _7003
    movq alloc6999, vecinit6984
    movq $1, vecinit6992
    movq $2, vecinit6993
    movq $3, vecinit6994
    movq free_ptr(%rip), tmp7013
    movq tmp7013, tmp7012
    addq $32, tmp7012
    movq fromspace_end(%rip), tmp7014
    cmpq tmp7014, tmp7012
    jl block7022
    jmp block7023
    
block7023:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7021
    
block7022:
    movq $0, _6998
    jmp block7021
    
block7021:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc6991
    movq alloc6991, %r11
    movq vecinit6992, 8(%r11)
    movq $0, _6997
    movq alloc6991, %r11
    movq vecinit6993, 16(%r11)
    movq $0, _6996
    movq alloc6991, %r11
    movq vecinit6994, 24(%r11)
    movq $0, _6995
    movq alloc6991, tmp7011
    movq tmp7011, %r11
    movq 0(%r11), %r11
    sarq $1, %r11
    andq $63, %r11
    movq %r11, vecinit6985
    movq free_ptr(%rip), tmp7016
    movq tmp7016, tmp7015
    addq $40, tmp7015
    movq fromspace_end(%rip), tmp7017
    cmpq tmp7017, tmp7015
    jl block7019
    jmp block7020
    
block7020:
    movq %r15, %rdi
    movq $40, %rsi
    callq collect
    jmp block7018
    
block7019:
    movq $0, _6990
    jmp block7018
    
block7018:
    movq free_ptr(%rip), %r11
    addq $40, free_ptr(%rip)
    movq $521, 0(%r11)
    movq %r11, alloc6981
    movq alloc6981, %r11
    movq vecinit6982, 8(%r11)
    movq $0, _6989
    movq alloc6981, %r11
    movq vecinit6983, 16(%r11)
    movq $0, _6988
    movq alloc6981, %r11
    movq vecinit6984, 24(%r11)
    movq $0, _6987
    movq alloc6981, %r11
    movq vecinit6985, 32(%r11)
    movq $0, _6986
    movq alloc6981, tmp7007
    movq tmp7007, %r11
    movq 0(%r11), %r11
    sarq $1, %r11
    andq $63, %r11
    movq %r11, %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Integer
nteger
nteger), _6997 : 'Void, 
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, alloc6981
movq alloc6981, %r11
movq vecinit6982, 8(%r11)
movq $0, _6989
movq alloc6981, %r11
movq vecinit6983, 16(%r11)
movq $0, _6988
movq alloc6981, %r11
movq vecinit6984, 24(%r11)
movq $0, _6987
movq alloc6981, %r11
movq vecinit6985, 32(%r11)
movq $0, _6986
movq alloc6981, tmp7007
movq tmp7007, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, _6990
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6991
movq alloc6991, %r11
movq vecinit6992, 8(%r11)
movq $0, _6997
movq alloc6991, %r11
movq vecinit6993, 16(%r11)
movq $0, _6996
movq alloc6991, %r11
movq vecinit6994, 24(%r11)
movq $0, _6995
movq alloc6991, tmp7011
movq tmp7011, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, vecinit6985
movq free_ptr(%rip), tmp7016
movq tmp7016, tmp7015
addq $40, tmp7015
movq fromspace_end(%rip), tmp7017
cmpq tmp7017, tmp7015
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, _6998
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6999
movq alloc6999, %r11
movq vecinit7000, 8(%r11)
movq $0, _7005
movq alloc6999, %r11
movq vecinit7001, 16(%r11)
movq $0, _7004
movq alloc6999, %r11
movq vecinit7002, 24(%r11)
movq $0, _7003
movq alloc6999, vecinit6984
movq $1, vecinit6992
movq $2, vecinit6993
movq $3, vecinit6994
movq free_ptr(%rip), tmp7013
movq tmp7013, tmp7012
addq $32, tmp7012
movq fromspace_end(%rip), tmp7014
cmpq tmp7014, tmp7012
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, _7006
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, vecinit6982
movq $1, vecinit6983
movq $4, vecinit7000
movq $5, vecinit7001
movq $6, vecinit7002
movq free_ptr(%rip), tmp7009
movq tmp7009, tmp7008
addq $32, tmp7008
movq fromspace_end(%rip), tmp7010
cmpq tmp7010, tmp7008
jl block7025
jmp block7026




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, alloc6981
movq alloc6981, %r11
movq vecinit6982, 8(%r11)
movq $0, _6989
movq alloc6981, %r11
movq vecinit6983, 16(%r11)
movq $0, _6988
movq alloc6981, %r11
movq vecinit6984, 24(%r11)
movq $0, _6987
movq alloc6981, %r11
movq vecinit6985, 32(%r11)
movq $0, _6986
movq alloc6981, tmp7007
movq tmp7007, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, _6990
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6991
movq alloc6991, %r11
movq vecinit6992, 8(%r11)
movq $0, _6997
movq alloc6991, %r11
movq vecinit6993, 16(%r11)
movq $0, _6996
movq alloc6991, %r11
movq vecinit6994, 24(%r11)
movq $0, _6995
movq alloc6991, tmp7011
movq tmp7011, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, vecinit6985
movq free_ptr(%rip), tmp7016
movq tmp7016, tmp7015
addq $40, tmp7015
movq fromspace_end(%rip), tmp7017
cmpq tmp7017, tmp7015
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, _6998
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6999
movq alloc6999, %r11
movq vecinit7000, 8(%r11)
movq $0, _7005
movq alloc6999, %r11
movq vecinit7001, 16(%r11)
movq $0, _7004
movq alloc6999, %r11
movq vecinit7002, 24(%r11)
movq $0, _7003
movq alloc6999, vecinit6984
movq $1, vecinit6992
movq $2, vecinit6993
movq $3, vecinit6994
movq free_ptr(%rip), tmp7013
movq tmp7013, tmp7012
addq $32, tmp7012
movq fromspace_end(%rip), tmp7014
cmpq tmp7014, tmp7012
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, _7006
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, vecinit6982
movq $1, vecinit6983
movq $4, vecinit7000
movq $5, vecinit7001
movq $6, vecinit7002
movq free_ptr(%rip), tmp7009
movq tmp7009, tmp7008
addq $32, tmp7008
movq fromspace_end(%rip), tmp7010
cmpq tmp7010, tmp7008
jl block7025
jmp block7026




output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
1 instruction: addq $40, free_ptr(%rip)

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
1 instruction: movq $521, 0(%r11)

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11>
1 instruction: movq %r11, alloc6981

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981>
1 instruction: movq alloc6981, %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981>
1 instruction: movq vecinit6982, 8(%r11)

2 live-set: #<set: vecinit6984 vecinit6985 vecinit6983 alloc6981>
1 instruction: movq $0, _6989

2 live-set: #<set: vecinit6984 vecinit6985 vecinit6983 alloc6981>
1 instruction: movq alloc6981, %r11

2 live-set: #<set: vecinit6984 vecinit6985 vecinit6983 alloc6981>
1 instruction: movq vecinit6983, 16(%r11)

2 live-set: #<set: vecinit6984 vecinit6985 alloc6981>
1 instruction: movq $0, _6988

2 live-set: #<set: vecinit6984 vecinit6985 alloc6981>
1 instruction: movq alloc6981, %r11

2 live-set: #<set: vecinit6984 vecinit6985 alloc6981>
1 instruction: movq vecinit6984, 24(%r11)

2 live-set: #<set: vecinit6985 alloc6981>
1 instruction: movq $0, _6987

2 live-set: #<set: vecinit6985 alloc6981>
1 instruction: movq alloc6981, %r11

2 live-set: #<set: vecinit6985 alloc6981>
1 instruction: movq vecinit6985, 32(%r11)

2 live-set: #<set: alloc6981>
1 instruction: movq $0, _6986

2 live-set: #<set: alloc6981>
1 instruction: movq alloc6981, tmp7007

2 live-set: #<set: tmp7007>
1 instruction: movq tmp7007, %r11

2 live-set: #<set: %r11>
1 instruction: movq 0(%r11), %r11

2 live-set: #<set: %r11>
1 instruction: sarq $1, %r11

2 live-set: #<set: %r11>
1 instruction: andq $63, %r11

2 live-set: #<set: %r11>
1 instruction: movq %r11, %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi>
1 instruction: movq $40, %rsi

2 live-set: #<set: vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
***************: tuple variable is live during call to collect IMP IMP IMP
1 instruction: jmp block7018

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
1 instruction: movq $0, _6990

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
1 instruction: jmp block7018

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983>
1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: addq $32, free_ptr(%rip)

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq $7, 0(%r11)

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15 %r11>
1 instruction: movq %r11, alloc6991

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq alloc6991, %r11

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq vecinit6992, 8(%r11)

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6993 vecinit6983 vecinit6994 %r15>
1 instruction: movq $0, _6997

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6993 vecinit6983 vecinit6994 %r15>
1 instruction: movq alloc6991, %r11

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6993 vecinit6983 vecinit6994 %r15>
1 instruction: movq vecinit6993, 16(%r11)

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15>
1 instruction: movq $0, _6996

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15>
1 instruction: movq alloc6991, %r11

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15>
1 instruction: movq vecinit6994, 24(%r11)

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15>
1 instruction: movq $0, _6995

2 live-set: #<set: vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15>
1 instruction: movq alloc6991, tmp7011

2 live-set: #<set: vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15>
1 instruction: movq tmp7011, %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6983 %r15 %r11>
1 instruction: movq 0(%r11), %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6983 %r15 %r11>
1 instruction: sarq $1, %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6983 %r15 %r11>
1 instruction: andq $63, %r11

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6983 %r15 %r11>
1 instruction: movq %r11, vecinit6985

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: movq free_ptr(%rip), tmp7016

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15>
1 instruction: movq tmp7016, tmp7015

2 live-set: #<set: vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: addq $40, tmp7015

2 live-set: #<set: vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: movq fromspace_end(%rip), tmp7017

2 live-set: #<set: vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15>
1 instruction: cmpq tmp7017, tmp7015

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: jl block7019

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: jmp block7020

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15 %rdi>
1 instruction: movq $32, %rsi

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 %rsi vecinit6992 vecinit6983 vecinit6994 %r15 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
***************: tuple variable is live during call to collect IMP IMP IMP
1 instruction: jmp block7021

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq $0, _6998

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: jmp block7021

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: addq $32, free_ptr(%rip)

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: movq $7, 0(%r11)

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11>
1 instruction: movq %r11, alloc6999

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15>
1 instruction: movq alloc6999, %r11

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15>
1 instruction: movq vecinit7000, 8(%r11)

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15>
1 instruction: movq $0, _7005

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15>
1 instruction: movq alloc6999, %r11

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15>
1 instruction: movq vecinit7001, 16(%r11)

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15>
1 instruction: movq $0, _7004

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15>
1 instruction: movq alloc6999, %r11

2 live-set: #<set: vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15>
1 instruction: movq vecinit7002, 24(%r11)

2 live-set: #<set: vecinit6982 vecinit6983 alloc6999 %r15>
1 instruction: movq $0, _7003

2 live-set: #<set: vecinit6982 vecinit6983 alloc6999 %r15>
1 instruction: movq alloc6999, vecinit6984

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6983 %r15>
1 instruction: movq $1, vecinit6992

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15>
1 instruction: movq $2, vecinit6993

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15>
1 instruction: movq $3, vecinit6994

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq free_ptr(%rip), tmp7013

2 live-set: #<set: vecinit6984 tmp7013 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq tmp7013, tmp7012

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 tmp7012 vecinit6983 vecinit6994 %r15>
1 instruction: addq $32, tmp7012

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 tmp7012 vecinit6983 vecinit6994 %r15>
1 instruction: movq fromspace_end(%rip), tmp7014

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 tmp7014 vecinit6992 tmp7012 vecinit6983 vecinit6994 %r15>
1 instruction: cmpq tmp7014, tmp7012

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: jl block7022

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: jmp block7023

2 live-set: #<set: vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 vecinit6994 %r15>
1 instruction: movq $0, _7006

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: jmp block7024

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi>
1 instruction: movq $32, %rsi

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 %rsi vecinit6983 vecinit7001 %r15 %rdi>
1 instruction: callq collect

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: jmp block7024

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: movq $1, vecinit6982

2 live-set: #<set: vecinit6982 %r15>
1 instruction: movq $1, vecinit6983

2 live-set: #<set: vecinit6982 vecinit6983 %r15>
1 instruction: movq $4, vecinit7000

2 live-set: #<set: vecinit7000 vecinit6982 vecinit6983 %r15>
1 instruction: movq $5, vecinit7001

2 live-set: #<set: vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15>
1 instruction: movq $6, vecinit7002

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: movq free_ptr(%rip), tmp7009

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15>
1 instruction: movq tmp7009, tmp7008

2 live-set: #<set: vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: addq $32, tmp7008

2 live-set: #<set: vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: movq fromspace_end(%rip), tmp7010

2 live-set: #<set: vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 tmp7010 %r15>
1 instruction: cmpq tmp7010, tmp7008

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: jl block7025

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
1 instruction: jmp block7026

2 live-set: #<set: vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15>
%rsi -> vecinit7000;
%rsi -> vecinit6984;
%rsi -> vecinit6982;
%rsi -> vecinit7002;
%rsi -> vecinit6993;
%rsi -> vecinit6985;
%rsi -> vecinit6992;
%rsi -> vecinit6983;
%rsi -> vecinit6994;
%rsi -> vecinit7001;
%rsi -> %r15;
%rsi -> %rdi;
tmp7008 -> vecinit7000;
tmp7008 -> vecinit6982;
tmp7008 -> vecinit7002;
tmp7008 -> vecinit6983;
tmp7008 -> vecinit7001;
tmp7008 -> tmp7010;
tmp7008 -> %r15;
%rbp -> vecinit6984;
_6989 -> vecinit6984;
_6989 -> vecinit6985;
_6989 -> vecinit6983;
_6989 -> alloc6981;
vecinit6993 -> vecinit6984;
vecinit6993 -> tmp7013;
vecinit6993 -> alloc6991;
vecinit6993 -> vecinit6982;
vecinit6993 -> tmp7014;
vecinit6993 -> %rcx;
vecinit6993 -> %rsi;
vecinit6993 -> %rdx;
vecinit6993 -> vecinit6992;
vecinit6993 -> tmp7012;
vecinit6993 -> _6997;
vecinit6993 -> %r8;
vecinit6993 -> vecinit6983;
vecinit6993 -> vecinit6994;
vecinit6993 -> _6998;
vecinit6993 -> %r15;
vecinit6993 -> %r9;
vecinit6993 -> %r11;
vecinit6993 -> %rax;
vecinit6993 -> %rdi;
vecinit6993 -> %r10;
%rcx -> vecinit7000;
%rcx -> vecinit6984;
%rcx -> vecinit6982;
%rcx -> vecinit7002;
%rcx -> vecinit6993;
%rcx -> vecinit6985;
%rcx -> vecinit6992;
%rcx -> vecinit6983;
%rcx -> vecinit6994;
%rcx -> vecinit7001;
%rcx -> %r15;
%r12 -> vecinit6984;
tmp7010 -> vecinit7000;
tmp7010 -> tmp7008;
tmp7010 -> vecinit6982;
tmp7010 -> vecinit7002;
tmp7010 -> vecinit6983;
tmp7010 -> vecinit7001;
tmp7010 -> %r15;
_6997 -> vecinit6984;
_6997 -> alloc6991;
_6997 -> vecinit6982;
_6997 -> vecinit6993;
_6997 -> vecinit6983;
_6997 -> vecinit6994;
_6997 -> %r15;
tmp7017 -> vecinit6984;
tmp7017 -> tmp7015;
tmp7017 -> vecinit6982;
tmp7017 -> vecinit6985;
tmp7017 -> vecinit6983;
tmp7017 -> %r15;
_6988 -> vecinit6984;
_6988 -> vecinit6985;
_6988 -> alloc6981;
vecinit6992 -> vecinit6984;
vecinit6992 -> tmp7013;
vecinit6992 -> alloc6991;
vecinit6992 -> vecinit6982;
vecinit6992 -> vecinit6993;
vecinit6992 -> tmp7014;
vecinit6992 -> %rcx;
vecinit6992 -> %rsi;
vecinit6992 -> %rdx;
vecinit6992 -> tmp7012;
vecinit6992 -> %r8;
vecinit6992 -> vecinit6983;
vecinit6992 -> vecinit6994;
vecinit6992 -> _6998;
vecinit6992 -> %r15;
vecinit6992 -> %r9;
vecinit6992 -> %r11;
vecinit6992 -> %rax;
vecinit6992 -> %rdi;
vecinit6992 -> %r10;
tmp7011 -> vecinit6984;
tmp7011 -> vecinit6982;
tmp7011 -> vecinit6983;
tmp7011 -> %r15;
_7006 -> vecinit7000;
_7006 -> vecinit6982;
_7006 -> vecinit7002;
_7006 -> vecinit6983;
_7006 -> vecinit7001;
_7006 -> %r15;
vecinit6994 -> vecinit6984;
vecinit6994 -> tmp7013;
vecinit6994 -> alloc6991;
vecinit6994 -> vecinit6982;
vecinit6994 -> vecinit6993;
vecinit6994 -> tmp7014;
vecinit6994 -> _6996;
vecinit6994 -> %rcx;
vecinit6994 -> %rsi;
vecinit6994 -> %rdx;
vecinit6994 -> vecinit6992;
vecinit6994 -> tmp7012;
vecinit6994 -> _6997;
vecinit6994 -> %r8;
vecinit6994 -> vecinit6983;
vecinit6994 -> _6998;
vecinit6994 -> %r15;
vecinit6994 -> %r9;
vecinit6994 -> %r11;
vecinit6994 -> %rax;
vecinit6994 -> %rdi;
vecinit6994 -> %r10;
tmp7013 -> vecinit6984;
tmp7013 -> vecinit6982;
tmp7013 -> vecinit6993;
tmp7013 -> vecinit6992;
tmp7013 -> vecinit6983;
tmp7013 -> vecinit6994;
tmp7013 -> %r15;
vecinit6982 -> _6990;
vecinit6982 -> _7005;
vecinit6982 -> vecinit7000;
vecinit6982 -> tmp7008;
vecinit6982 -> vecinit6984;
vecinit6982 -> tmp7013;
vecinit6982 -> alloc6991;
vecinit6982 -> tmp7011;
vecinit6982 -> tmp7015;
vecinit6982 -> vecinit7002;
vecinit6982 -> _7006;
vecinit6982 -> _7004;
vecinit6982 -> vecinit6993;
vecinit6982 -> tmp7014;
vecinit6982 -> _6996;
vecinit6982 -> %rcx;
vecinit6982 -> %rsi;
vecinit6982 -> %rdx;
vecinit6982 -> vecinit6985;
vecinit6982 -> vecinit6992;
vecinit6982 -> tmp7012;
vecinit6982 -> _6997;
vecinit6982 -> %r8;
vecinit6982 -> tmp7017;
vecinit6982 -> vecinit6983;
vecinit6982 -> tmp7009;
vecinit6982 -> alloc6999;
vecinit6982 -> _7003;
vecinit6982 -> vecinit6994;
vecinit6982 -> _6998;
vecinit6982 -> _6995;
vecinit6982 -> tmp7016;
vecinit6982 -> alloc6981;
vecinit6982 -> vecinit7001;
vecinit6982 -> tmp7010;
vecinit6982 -> %r15;
vecinit6982 -> %r9;
vecinit6982 -> %r11;
vecinit6982 -> %rax;
vecinit6982 -> %rdi;
vecinit6982 -> %r10;
_6990 -> vecinit6984;
_6990 -> vecinit6982;
_6990 -> vecinit6985;
_6990 -> vecinit6983;
%rdi -> vecinit7000;
%rdi -> vecinit6984;
%rdi -> vecinit6982;
%rdi -> vecinit7002;
%rdi -> vecinit6993;
%rdi -> %rsi;
%rdi -> vecinit6985;
%rdi -> vecinit6992;
%rdi -> vecinit6983;
%rdi -> vecinit6994;
%rdi -> vecinit7001;
%rdi -> %r15;
alloc6999 -> _7005;
alloc6999 -> vecinit7000;
alloc6999 -> vecinit6982;
alloc6999 -> vecinit7002;
alloc6999 -> _7004;
alloc6999 -> vecinit6983;
alloc6999 -> _7003;
alloc6999 -> vecinit7001;
alloc6999 -> %r15;
alloc6999 -> %r11;
_6995 -> vecinit6984;
_6995 -> alloc6991;
_6995 -> vecinit6982;
_6995 -> vecinit6983;
_6995 -> %r15;
vecinit6983 -> _6990;
vecinit6983 -> _7005;
vecinit6983 -> vecinit7000;
vecinit6983 -> tmp7008;
vecinit6983 -> vecinit6984;
vecinit6983 -> tmp7013;
vecinit6983 -> alloc6991;
vecinit6983 -> tmp7011;
vecinit6983 -> tmp7015;
vecinit6983 -> _6989;
vecinit6983 -> vecinit6982;
vecinit6983 -> vecinit7002;
vecinit6983 -> _7006;
vecinit6983 -> _7004;
vecinit6983 -> vecinit6993;
vecinit6983 -> tmp7014;
vecinit6983 -> _6996;
vecinit6983 -> %rcx;
vecinit6983 -> %rsi;
vecinit6983 -> %rdx;
vecinit6983 -> vecinit6985;
vecinit6983 -> vecinit6992;
vecinit6983 -> tmp7012;
vecinit6983 -> _6997;
vecinit6983 -> %r8;
vecinit6983 -> tmp7017;
vecinit6983 -> tmp7009;
vecinit6983 -> alloc6999;
vecinit6983 -> _7003;
vecinit6983 -> vecinit6994;
vecinit6983 -> _6998;
vecinit6983 -> _6995;
vecinit6983 -> tmp7016;
vecinit6983 -> alloc6981;
vecinit6983 -> vecinit7001;
vecinit6983 -> tmp7010;
vecinit6983 -> %r15;
vecinit6983 -> %r9;
vecinit6983 -> %r11;
vecinit6983 -> %rax;
vecinit6983 -> %rdi;
vecinit6983 -> %r10;
%r9 -> vecinit7000;
%r9 -> vecinit6984;
%r9 -> vecinit6982;
%r9 -> vecinit7002;
%r9 -> vecinit6993;
%r9 -> vecinit6985;
%r9 -> vecinit6992;
%r9 -> vecinit6983;
%r9 -> vecinit6994;
%r9 -> vecinit7001;
%r9 -> %r15;
alloc6981 -> _6987;
alloc6981 -> vecinit6984;
alloc6981 -> _6989;
alloc6981 -> vecinit6982;
alloc6981 -> vecinit6985;
alloc6981 -> _6988;
alloc6981 -> vecinit6983;
alloc6981 -> _6986;
alloc6981 -> %r11;
_6996 -> vecinit6984;
_6996 -> alloc6991;
_6996 -> vecinit6982;
_6996 -> vecinit6983;
_6996 -> vecinit6994;
_6996 -> %r15;
_7005 -> vecinit6982;
_7005 -> vecinit7002;
_7005 -> vecinit6983;
_7005 -> alloc6999;
_7005 -> vecinit7001;
_7005 -> %r15;
%rsp -> vecinit6984;
tmp7014 -> vecinit6984;
tmp7014 -> vecinit6982;
tmp7014 -> vecinit6993;
tmp7014 -> vecinit6992;
tmp7014 -> tmp7012;
tmp7014 -> vecinit6983;
tmp7014 -> vecinit6994;
tmp7014 -> %r15;
vecinit7000 -> tmp7008;
vecinit7000 -> vecinit6982;
vecinit7000 -> vecinit7002;
vecinit7000 -> _7006;
vecinit7000 -> %rcx;
vecinit7000 -> %rsi;
vecinit7000 -> %rdx;
vecinit7000 -> %r8;
vecinit7000 -> vecinit6983;
vecinit7000 -> tmp7009;
vecinit7000 -> alloc6999;
vecinit7000 -> vecinit7001;
vecinit7000 -> tmp7010;
vecinit7000 -> %r15;
vecinit7000 -> %r9;
vecinit7000 -> %r11;
vecinit7000 -> %rax;
vecinit7000 -> %rdi;
vecinit7000 -> %r10;
tmp7015 -> vecinit6984;
tmp7015 -> vecinit6982;
tmp7015 -> vecinit6985;
tmp7015 -> tmp7017;
tmp7015 -> vecinit6983;
tmp7015 -> %r15;
_7004 -> vecinit6982;
_7004 -> vecinit7002;
_7004 -> vecinit6983;
_7004 -> alloc6999;
_7004 -> %r15;
vecinit6985 -> _6990;
vecinit6985 -> _6987;
vecinit6985 -> vecinit6984;
vecinit6985 -> tmp7015;
vecinit6985 -> _6989;
vecinit6985 -> vecinit6982;
vecinit6985 -> %rcx;
vecinit6985 -> %rsi;
vecinit6985 -> %rdx;
vecinit6985 -> %r8;
vecinit6985 -> tmp7017;
vecinit6985 -> _6988;
vecinit6985 -> vecinit6983;
vecinit6985 -> tmp7016;
vecinit6985 -> alloc6981;
vecinit6985 -> %r15;
vecinit6985 -> %r9;
vecinit6985 -> %r11;
vecinit6985 -> %rax;
vecinit6985 -> %rdi;
vecinit6985 -> %r10;
%r11 -> vecinit7000;
%r11 -> vecinit6984;
%r11 -> alloc6991;
%r11 -> vecinit6982;
%r11 -> vecinit7002;
%r11 -> vecinit6993;
%r11 -> vecinit6985;
%r11 -> vecinit6992;
%r11 -> vecinit6983;
%r11 -> alloc6999;
%r11 -> vecinit6994;
%r11 -> alloc6981;
%r11 -> vecinit7001;
%r11 -> %r15;
%r15 -> _7005;
%r15 -> vecinit7000;
%r15 -> tmp7008;
%r15 -> vecinit6984;
%r15 -> tmp7013;
%r15 -> alloc6991;
%r15 -> tmp7011;
%r15 -> tmp7015;
%r15 -> vecinit6982;
%r15 -> vecinit7002;
%r15 -> _7006;
%r15 -> _7004;
%r15 -> vecinit6993;
%r15 -> tmp7014;
%r15 -> _6996;
%r15 -> %rcx;
%r15 -> %rsi;
%r15 -> %rdx;
%r15 -> vecinit6985;
%r15 -> vecinit6992;
%r15 -> tmp7012;
%r15 -> _6997;
%r15 -> %r8;
%r15 -> tmp7017;
%r15 -> vecinit6983;
%r15 -> tmp7009;
%r15 -> alloc6999;
%r15 -> _7003;
%r15 -> vecinit6994;
%r15 -> _6998;
%r15 -> _6995;
%r15 -> tmp7016;
%r15 -> vecinit7001;
%r15 -> tmp7010;
%r15 -> %r9;
%r15 -> %r11;
%r15 -> %rax;
%r15 -> %rdi;
%r15 -> %r10;
vecinit7001 -> _7005;
vecinit7001 -> vecinit7000;
vecinit7001 -> tmp7008;
vecinit7001 -> vecinit6982;
vecinit7001 -> vecinit7002;
vecinit7001 -> _7006;
vecinit7001 -> %rcx;
vecinit7001 -> %rsi;
vecinit7001 -> %rdx;
vecinit7001 -> %r8;
vecinit7001 -> vecinit6983;
vecinit7001 -> tmp7009;
vecinit7001 -> alloc6999;
vecinit7001 -> tmp7010;
vecinit7001 -> %r15;
vecinit7001 -> %r9;
vecinit7001 -> %r11;
vecinit7001 -> %rax;
vecinit7001 -> %rdi;
vecinit7001 -> %r10;
tmp7012 -> vecinit6984;
tmp7012 -> vecinit6982;
tmp7012 -> vecinit6993;
tmp7012 -> tmp7014;
tmp7012 -> vecinit6992;
tmp7012 -> vecinit6983;
tmp7012 -> vecinit6994;
tmp7012 -> %r15;
%rax -> vecinit7000;
%rax -> vecinit6984;
%rax -> vecinit6982;
%rax -> vecinit7002;
%rax -> vecinit6993;
%rax -> vecinit6985;
%rax -> vecinit6992;
%rax -> vecinit6983;
%rax -> vecinit6994;
%rax -> vecinit7001;
%rax -> %r15;
%r8 -> vecinit7000;
%r8 -> vecinit6984;
%r8 -> vecinit6982;
%r8 -> vecinit7002;
%r8 -> vecinit6993;
%r8 -> vecinit6985;
%r8 -> vecinit6992;
%r8 -> vecinit6983;
%r8 -> vecinit6994;
%r8 -> vecinit7001;
%r8 -> %r15;
%r10 -> vecinit7000;
%r10 -> vecinit6984;
%r10 -> vecinit6982;
%r10 -> vecinit7002;
%r10 -> vecinit6993;
%r10 -> vecinit6985;
%r10 -> vecinit6992;
%r10 -> vecinit6983;
%r10 -> vecinit6994;
%r10 -> vecinit7001;
%r10 -> %r15;
alloc6991 -> vecinit6984;
alloc6991 -> vecinit6982;
alloc6991 -> vecinit6993;
alloc6991 -> _6996;
alloc6991 -> vecinit6992;
alloc6991 -> _6997;
alloc6991 -> vecinit6983;
alloc6991 -> vecinit6994;
alloc6991 -> _6995;
alloc6991 -> %r15;
alloc6991 -> %r11;
vecinit7002 -> _7005;
vecinit7002 -> vecinit7000;
vecinit7002 -> tmp7008;
vecinit7002 -> vecinit6982;
vecinit7002 -> _7006;
vecinit7002 -> _7004;
vecinit7002 -> %rcx;
vecinit7002 -> %rsi;
vecinit7002 -> %rdx;
vecinit7002 -> %r8;
vecinit7002 -> vecinit6983;
vecinit7002 -> tmp7009;
vecinit7002 -> alloc6999;
vecinit7002 -> vecinit7001;
vecinit7002 -> tmp7010;
vecinit7002 -> %r15;
vecinit7002 -> %r9;
vecinit7002 -> %r11;
vecinit7002 -> %rax;
vecinit7002 -> %rdi;
vecinit7002 -> %r10;
%r13 -> vecinit6984;
_6987 -> vecinit6985;
_6987 -> alloc6981;
%rdx -> vecinit7000;
%rdx -> vecinit6984;
%rdx -> vecinit6982;
%rdx -> vecinit7002;
%rdx -> vecinit6993;
%rdx -> vecinit6985;
%rdx -> vecinit6992;
%rdx -> vecinit6983;
%rdx -> vecinit6994;
%rdx -> vecinit7001;
%rdx -> %r15;
_6998 -> vecinit6984;
_6998 -> vecinit6982;
_6998 -> vecinit6993;
_6998 -> vecinit6992;
_6998 -> vecinit6983;
_6998 -> vecinit6994;
_6998 -> %r15;
vecinit6984 -> _6990;
vecinit6984 -> tmp7013;
vecinit6984 -> alloc6991;
vecinit6984 -> tmp7011;
vecinit6984 -> tmp7015;
vecinit6984 -> _6989;
vecinit6984 -> vecinit6982;
vecinit6984 -> vecinit6993;
vecinit6984 -> tmp7014;
vecinit6984 -> _6996;
vecinit6984 -> %r13;
vecinit6984 -> %rsp;
vecinit6984 -> %rcx;
vecinit6984 -> %rsi;
vecinit6984 -> %rbp;
vecinit6984 -> %rdx;
vecinit6984 -> vecinit6985;
vecinit6984 -> vecinit6992;
vecinit6984 -> tmp7012;
vecinit6984 -> _6997;
vecinit6984 -> %r8;
vecinit6984 -> tmp7017;
vecinit6984 -> _6988;
vecinit6984 -> vecinit6983;
vecinit6984 -> vecinit6994;
vecinit6984 -> _6998;
vecinit6984 -> _6995;
vecinit6984 -> %r14;
vecinit6984 -> tmp7016;
vecinit6984 -> alloc6981;
vecinit6984 -> %r15;
vecinit6984 -> %r9;
vecinit6984 -> %r12;
vecinit6984 -> %r11;
vecinit6984 -> %rax;
vecinit6984 -> %rdi;
vecinit6984 -> %r10;
vecinit6984 -> %rbx;
%r14 -> vecinit6984;
tmp7009 -> vecinit7000;
tmp7009 -> vecinit6982;
tmp7009 -> vecinit7002;
tmp7009 -> vecinit6983;
tmp7009 -> vecinit7001;
tmp7009 -> %r15;
%rbx -> vecinit6984;
_6986 -> alloc6981;
_7003 -> vecinit6982;
_7003 -> vecinit6983;
_7003 -> alloc6999;
_7003 -> %r15;
tmp7016 -> vecinit6984;
tmp7016 -> vecinit6982;
tmp7016 -> vecinit6985;
tmp7016 -> vecinit6983;
tmp7016 -> %r15;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, alloc6981
movq alloc6981, %r11
movq vecinit6982, 8(%r11)
movq $0, _6989
movq alloc6981, %r11
movq vecinit6983, 16(%r11)
movq $0, _6988
movq alloc6981, %r11
movq vecinit6984, 24(%r11)
movq $0, _6987
movq alloc6981, %r11
movq vecinit6985, 32(%r11)
movq $0, _6986
movq alloc6981, tmp7007
movq tmp7007, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, _6990
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6991
movq alloc6991, %r11
movq vecinit6992, 8(%r11)
movq $0, _6997
movq alloc6991, %r11
movq vecinit6993, 16(%r11)
movq $0, _6996
movq alloc6991, %r11
movq vecinit6994, 24(%r11)
movq $0, _6995
movq alloc6991, tmp7011
movq tmp7011, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, vecinit6985
movq free_ptr(%rip), tmp7016
movq tmp7016, tmp7015
addq $40, tmp7015
movq fromspace_end(%rip), tmp7017
cmpq tmp7017, tmp7015
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, _6998
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6999
movq alloc6999, %r11
movq vecinit7000, 8(%r11)
movq $0, _7005
movq alloc6999, %r11
movq vecinit7001, 16(%r11)
movq $0, _7004
movq alloc6999, %r11
movq vecinit7002, 24(%r11)
movq $0, _7003
movq alloc6999, vecinit6984
movq $1, vecinit6992
movq $2, vecinit6993
movq $3, vecinit6994
movq free_ptr(%rip), tmp7013
movq tmp7013, tmp7012
addq $32, tmp7012
movq fromspace_end(%rip), tmp7014
cmpq tmp7014, tmp7012
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, _7006
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, vecinit6982
movq $1, vecinit6983
movq $4, vecinit7000
movq $5, vecinit7001
movq $6, vecinit7002
movq free_ptr(%rip), tmp7009
movq tmp7009, tmp7008
addq $32, tmp7008
movq fromspace_end(%rip), tmp7010
cmpq tmp7010, tmp7008
jl block7025
jmp block7026




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, alloc6981
movq alloc6981, %r11
movq vecinit6982, 8(%r11)
movq $0, _6989
movq alloc6981, %r11
movq vecinit6983, 16(%r11)
movq $0, _6988
movq alloc6981, %r11
movq vecinit6984, 24(%r11)
movq $0, _6987
movq alloc6981, %r11
movq vecinit6985, 32(%r11)
movq $0, _6986
movq alloc6981, tmp7007
movq tmp7007, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, _6990
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6991
movq alloc6991, %r11
movq vecinit6992, 8(%r11)
movq $0, _6997
movq alloc6991, %r11
movq vecinit6993, 16(%r11)
movq $0, _6996
movq alloc6991, %r11
movq vecinit6994, 24(%r11)
movq $0, _6995
movq alloc6991, tmp7011
movq tmp7011, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, vecinit6985
movq free_ptr(%rip), tmp7016
movq tmp7016, tmp7015
addq $40, tmp7015
movq fromspace_end(%rip), tmp7017
cmpq tmp7017, tmp7015
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, _6998
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc6999
movq alloc6999, %r11
movq vecinit7000, 8(%r11)
movq $0, _7005
movq alloc6999, %r11
movq vecinit7001, 16(%r11)
movq $0, _7004
movq alloc6999, %r11
movq vecinit7002, 24(%r11)
movq $0, _7003
movq alloc6999, vecinit6984
movq $1, vecinit6992
movq $2, vecinit6993
movq $3, vecinit6994
movq free_ptr(%rip), tmp7013
movq tmp7013, tmp7012
addq $32, tmp7012
movq fromspace_end(%rip), tmp7014
cmpq tmp7014, tmp7012
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, _7006
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, vecinit6982
movq $1, vecinit6983
movq $4, vecinit7000
movq $5, vecinit7001
movq $6, vecinit7002
movq free_ptr(%rip), tmp7009
movq tmp7009, tmp7008
addq $32, tmp7008
movq fromspace_end(%rip), tmp7010
cmpq tmp7010, tmp7008
jl block7025
jmp block7026




output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
jmp block7026




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Integer
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
jmp block7020

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
jmp block7023

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
jmp block7026




output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Integer), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024




output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Integer), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024




output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: (movq $0, 0(%r15)
)
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r14
    pushq %r13
    subq $16, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, %r15
    jmp start
    
conclusion:
    subq $8, %r15
    addq $16, %rsp
    popq %r13
    popq %r14
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    _6996 : 'Void, _6995 : 'Void, tmp7011 : '(Vector Integer Integer Integer), vecinit6985 : 'Integer, tmp7016 : 'Integer, tmp7015 : 'Integer, tmp7017 : 'Integer, _6990 : 'Void, alloc6981 : '(Vector
                                                                                                                                                                                                Integer
                                                                                                                                                                                                Boolean
                                                                                                                                                                                                (Vector
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer
                                                                                                                                                                                                 Integer)
                                                                                                                                                                                                Integer), _6989 : 'Void, _6988 : 'Void, _6987 : 'Void, _6986 : 'Void, tmp7007 : '(Vector
                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                  (Vector
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer
                                                                                                                                                                                                                                                                                   Integer)
                                                                                                                                                                                                                                                                                  Integer), vecinit6982 : 'Integer, vecinit6983 : 'Boolean, vecinit7000 : 'Integer, vecinit7001 : 'Integer, vecinit7002 : 'Integer, tmp7009 : 'Integer, tmp7008 : 'Integer, tmp7010 : 'Integer, _7006 : 'Void, alloc6999 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Integer), _7005 : 'Void, _7004 : 'Void, _7003 : 'Void, vecinit6984 : '(Vector
nteger
nteger
nteger), vecinit6992 : 'Integer, vecinit6993 : 'Integer, vecinit6994 : 'Integer, tmp7013 : 'Integer, tmp7012 : 'Integer, tmp7014 : 'Integer, _6998 : 'Void, alloc6991 : '(Vector
nteger
nteger
nteger), _6997 : 'Void, 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r14 %r12 %rbx)
num-root-spills:
1
stack-space:
48
block7018:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 vecinit6983 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6984 vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set vecinit6985 alloc6981)
 (set alloc6981)
 (set alloc6981)
 (set tmp7007)
 (set %r11)
 (set %r11)
 (set %r11)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $40, free_ptr(%rip)
movq $521, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq -40(%rbp), %rax
movq %rax, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r13, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq -8(%r15), %rax
movq %rax, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 32(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rax
jmp conclusion

block7020:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 %rsi vecinit6985 vecinit6983 %rdi)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7019:
    live-sets:
(list
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983))
movq $0, %rcx
jmp block7018

block7021:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %r11)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  alloc6991
  vecinit6982
  vecinit6993
  vecinit6983
  vecinit6994
  %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 vecinit6994 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 alloc6991 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 tmp7011 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6983 %r15 %r11)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 tmp7016 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 tmp7015 vecinit6982 vecinit6985 tmp7017 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6985 vecinit6983 %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 0(%r11), %r11
sarq $1, %r11
andq $63, %r11
movq %r11, %rbx
movq free_ptr(%rip), %rcx
addq $40, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7019
movq %r15, %rdi
movq $40, %rsi
callq collect
jmp block7018

block7023:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  %rsi
  vecinit6992
  vecinit6983
  vecinit6994
  %r15
  %rdi)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7022:
    live-sets:
(list
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq $0, %rcx
jmp block7021

block7024:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %r11)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  vecinit6983
  alloc6999
  vecinit7001
  %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 vecinit7001 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit7002 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6982 vecinit6983 alloc6999 %r15)
 (set vecinit6984 vecinit6982 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6992 vecinit6983 %r15)
 (set vecinit6984 vecinit6982 vecinit6993 vecinit6992 vecinit6983 %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  tmp7013
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  tmp7014
  vecinit6992
  tmp7012
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15)
 (set
  vecinit6984
  vecinit6982
  vecinit6993
  vecinit6992
  vecinit6983
  vecinit6994
  %r15))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r14, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, -8(%r15)
movq $1, %r14
movq $2, %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7022
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7021

block7025:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $0, %rcx
jmp block7024

block7026:
    live-sets:
(list
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15 %rdi)
 (set
  vecinit7000
  vecinit6982
  vecinit7002
  %rsi
  vecinit6983
  vecinit7001
  %r15
  %rdi)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

start:
    live-sets:
(list
 (set vecinit6982 %r15)
 (set vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 %r15)
 (set vecinit7000 vecinit6982 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 tmp7009 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 tmp7008 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set
  vecinit7000
  tmp7008
  vecinit6982
  vecinit7002
  vecinit6983
  vecinit7001
  tmp7010
  %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15)
 (set vecinit7000 vecinit6982 vecinit7002 vecinit6983 vecinit7001 %r15))
movq $1, -40(%rbp)
movq $1, %r13
movq $4, %r14
movq $5, %r12
movq $6, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7025
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7024

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r14
    pushq %r13
    subq $16, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    movq $0, 0(%r15)
    addq $8, %r15
    jmp start
    
conclusion:
    subq $8, %r15
    addq $16, %rsp
    popq %r13
    popq %r14
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(let ([v (vector 1 2 42)])
   (let ([w (vector #t (vector-ref v 2) 3)])
      (vector-ref w 1)))


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v (vector 1 2 42)])
   (let ([w (vector #t (vector-ref v 2) 3)])
      (vector-ref w 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v (vector 1 2 42)])
   (let ([w (vector #t (vector-ref v 2) 3)])
      (vector-ref w 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v7034 (vector 1 2 42)])
   (let ([w7035 (vector #t (vector-ref v7034 2) 3)])
      (vector-ref w7035 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v7034 (vector 1 2 42)])
   (let ([w7035 (vector #t (vector-ref v7034 2) 3)])
      (vector-ref w7035 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v7034 (let ([vecinit7037 1])
                (let ([vecinit7038 2])
                   (let ([vecinit7039 42])
                      (let ([_7043 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc7036 (allocate 3 (Vector Integer Integer Integer))])
                            (let ([_7042 (vector-set! alloc7036 0 vecinit7037)])
                               (let ([_7041 (vector-set! alloc7036 1 vecinit7038)])
                                  (let ([_7040 (vector-set! alloc7036 2 vecinit7039)])
                                     alloc7036))))))))])
   (let ([w7035 (let ([vecinit7045 #t])
                   (let ([vecinit7046 (vector-ref v7034 2)])
                      (let ([vecinit7047 3])
                         (let ([_7051 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                         (void)
                                         (collect 32))
                                      ])
                            (let ([alloc7044 (allocate 3 (Vector Boolean Integer Integer))])
                               (let ([_7050 (vector-set! alloc7044 0 vecinit7045)])
                                  (let ([_7049 (vector-set! alloc7044 1 vecinit7046)])
                                     (let ([_7048 (vector-set! alloc7044 2 vecinit7047)])
                                        alloc7044))))))))])
      (vector-ref w7035 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v7034 (let ([vecinit7037 1])
                (let ([vecinit7038 2])
                   (let ([vecinit7039 42])
                      (let ([_7043 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc7036 (allocate 3 (Vector Integer Integer Integer))])
                            (let ([_7042 (vector-set! alloc7036 0 vecinit7037)])
                               (let ([_7041 (vector-set! alloc7036 1 vecinit7038)])
                                  (let ([_7040 (vector-set! alloc7036 2 vecinit7039)])
                                     alloc7036))))))))])
   (let ([w7035 (let ([vecinit7045 #t])
                   (let ([vecinit7046 (vector-ref v7034 2)])
                      (let ([vecinit7047 3])
                         (let ([_7051 (if (< (+ (global-value free_ptr) 32) (global-value fromspace_end))
                                         (void)
                                         (collect 32))
                                      ])
                            (let ([alloc7044 (allocate 3 (Vector Boolean Integer Integer))])
                               (let ([_7050 (vector-set! alloc7044 0 vecinit7045)])
                                  (let ([_7049 (vector-set! alloc7044 1 vecinit7046)])
                                     (let ([_7048 (vector-set! alloc7044 2 vecinit7047)])
                                        alloc7044))))))))])
      (vector-ref w7035 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([v7034 (let ([vecinit7037 1])
                (let ([vecinit7038 2])
                   (let ([vecinit7039 42])
                      (let ([_7043 (if (let ([tmp7052 (let ([tmp7053 (global-value free_ptr)])
                                                         (+ tmp7053 32))])
                                          (let ([tmp7054 (global-value fromspace_end)])
                                             (< tmp7052 tmp7054)))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc7036 (allocate 3 (Vector Integer Integer Integer))])
                            (let ([_7042 (vector-set! alloc7036 0 vecinit7037)])
                               (let ([_7041 (vector-set! alloc7036 1 vecinit7038)])
                                  (let ([_7040 (vector-set! alloc7036 2 vecinit7039)])
                                     alloc7036))))))))])
   (let ([w7035 (let ([vecinit7045 #t])
                   (let ([vecinit7046 (vector-ref v7034 2)])
                      (let ([vecinit7047 3])
                         (let ([_7051 (if (let ([tmp7055 (let ([tmp7056 (global-value free_ptr)])
                                                            (+ tmp7056 32))])
                                             (let ([tmp7057 (global-value fromspace_end)])
                                                (< tmp7055 tmp7057)))
                                         (void)
                                         (collect 32))
                                      ])
                            (let ([alloc7044 (allocate 3 (Vector Boolean Integer Integer))])
                               (let ([_7050 (vector-set! alloc7044 0 vecinit7045)])
                                  (let ([_7049 (vector-set! alloc7044 1 vecinit7046)])
                                     (let ([_7048 (vector-set! alloc7044 2 vecinit7047)])
                                        alloc7044))))))))])
      (vector-ref w7035 1)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([v7034 (let ([vecinit7037 1])
                (let ([vecinit7038 2])
                   (let ([vecinit7039 42])
                      (let ([_7043 (if (let ([tmp7052 (let ([tmp7053 (global-value free_ptr)])
                                                         (+ tmp7053 32))])
                                          (let ([tmp7054 (global-value fromspace_end)])
                                             (< tmp7052 tmp7054)))
                                      (void)
                                      (collect 32))
                                   ])
                         (let ([alloc7036 (allocate 3 (Vector Integer Integer Integer))])
                            (let ([_7042 (vector-set! alloc7036 0 vecinit7037)])
                               (let ([_7041 (vector-set! alloc7036 1 vecinit7038)])
                                  (let ([_7040 (vector-set! alloc7036 2 vecinit7039)])
                                     alloc7036))))))))])
   (let ([w7035 (let ([vecinit7045 #t])
                   (let ([vecinit7046 (vector-ref v7034 2)])
                      (let ([vecinit7047 3])
                         (let ([_7051 (if (let ([tmp7055 (let ([tmp7056 (global-value free_ptr)])
                                                            (+ tmp7056 32))])
                                             (let ([tmp7057 (global-value fromspace_end)])
                                                (< tmp7055 tmp7057)))
                                         (void)
                                         (collect 32))
                                      ])
                            (let ([alloc7044 (allocate 3 (Vector Boolean Integer Integer))])
                               (let ([_7050 (vector-set! alloc7044 0 vecinit7045)])
                                  (let ([_7049 (vector-set! alloc7044 1 vecinit7046)])
                                     (let ([_7048 (vector-set! alloc7044 2 vecinit7047)])
                                        alloc7044))))))))])
      (vector-ref w7035 1)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit7037 = 1;
    vecinit7038 = 2;
    vecinit7039 = 42;
    tmp7053 = (global-value free_ptr);
    tmp7052 = (+ tmp7053 32);
    tmp7054 = (global-value fromspace_end);
    if (< tmp7052 tmp7054)
       goto block7062;
    else
       goto block7063;
block7063:
    (collect 32)
    goto block7061;
block7062:
    _7043 = (void);
    goto block7061;
block7061:
    alloc7036 = (allocate 3 (Vector Integer Integer Integer));
    _7042 = (vector-set! alloc7036 0 vecinit7037);
    _7041 = (vector-set! alloc7036 1 vecinit7038);
    _7040 = (vector-set! alloc7036 2 vecinit7039);
    v7034 = alloc7036;
    vecinit7045 = #t;
    vecinit7046 = (vector-ref v7034 2);
    vecinit7047 = 3;
    tmp7056 = (global-value free_ptr);
    tmp7055 = (+ tmp7056 32);
    tmp7057 = (global-value fromspace_end);
    if (< tmp7055 tmp7057)
       goto block7059;
    else
       goto block7060;
block7060:
    (collect 32)
    goto block7058;
block7059:
    _7051 = (void);
    goto block7058;
block7058:
    alloc7044 = (allocate 3 (Vector Boolean Integer Integer));
    _7050 = (vector-set! alloc7044 0 vecinit7045);
    _7049 = (vector-set! alloc7044 1 vecinit7046);
    _7048 = (vector-set! alloc7044 2 vecinit7047);
    w7035 = alloc7044;
    return (vector-ref w7035 1);



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
start:
    vecinit7037 = 1;
    vecinit7038 = 2;
    vecinit7039 = 42;
    tmp7053 = (global-value free_ptr);
    tmp7052 = (+ tmp7053 32);
    tmp7054 = (global-value fromspace_end);
    if (< tmp7052 tmp7054)
       goto block7062;
    else
       goto block7063;
block7063:
    (collect 32)
    goto block7061;
block7062:
    _7043 = (void);
    goto block7061;
block7061:
    alloc7036 = (allocate 3 (Vector Integer Integer Integer));
    _7042 = (vector-set! alloc7036 0 vecinit7037);
    _7041 = (vector-set! alloc7036 1 vecinit7038);
    _7040 = (vector-set! alloc7036 2 vecinit7039);
    v7034 = alloc7036;
    vecinit7045 = #t;
    vecinit7046 = (vector-ref v7034 2);
    vecinit7047 = 3;
    tmp7056 = (global-value free_ptr);
    tmp7055 = (+ tmp7056 32);
    tmp7057 = (global-value fromspace_end);
    if (< tmp7055 tmp7057)
       goto block7059;
    else
       goto block7060;
block7060:
    (collect 32)
    goto block7058;
block7059:
    _7051 = (void);
    goto block7058;
block7058:
    alloc7044 = (allocate 3 (Vector Boolean Integer Integer));
    _7050 = (vector-set! alloc7044 0 vecinit7045);
    _7049 = (vector-set! alloc7044 1 vecinit7046);
    _7048 = (vector-set! alloc7044 2 vecinit7047);
    w7035 = alloc7044;
    return (vector-ref w7035 1);



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
start:
    movq $1, vecinit7037
    movq $2, vecinit7038
    movq $42, vecinit7039
    movq free_ptr(%rip), tmp7053
    movq tmp7053, tmp7052
    addq $32, tmp7052
    movq fromspace_end(%rip), tmp7054
    cmpq tmp7054, tmp7052
    jl block7062
    jmp block7063
    
block7063:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7061
    
block7062:
    movq $0, _7043
    jmp block7061
    
block7061:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc7036
    movq alloc7036, %r11
    movq vecinit7037, 8(%r11)
    movq $0, _7042
    movq alloc7036, %r11
    movq vecinit7038, 16(%r11)
    movq $0, _7041
    movq alloc7036, %r11
    movq vecinit7039, 24(%r11)
    movq $0, _7040
    movq alloc7036, v7034
    movq $1, vecinit7045
    movq v7034, %r11
    movq 24(%r11), vecinit7046
    movq $3, vecinit7047
    movq free_ptr(%rip), tmp7056
    movq tmp7056, tmp7055
    addq $32, tmp7055
    movq fromspace_end(%rip), tmp7057
    cmpq tmp7057, tmp7055
    jl block7059
    jmp block7060
    
block7060:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7058
    
block7059:
    movq $0, _7051
    jmp block7058
    
block7058:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc7044
    movq alloc7044, %r11
    movq vecinit7045, 8(%r11)
    movq $0, _7050
    movq alloc7044, %r11
    movq vecinit7046, 16(%r11)
    movq $0, _7049
    movq alloc7044, %r11
    movq vecinit7047, 24(%r11)
    movq $0, _7048
    movq alloc7044, w7035
    movq w7035, %r11
    movq 16(%r11), %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
start:
    movq $1, vecinit7037
    movq $2, vecinit7038
    movq $42, vecinit7039
    movq free_ptr(%rip), tmp7053
    movq tmp7053, tmp7052
    addq $32, tmp7052
    movq fromspace_end(%rip), tmp7054
    cmpq tmp7054, tmp7052
    jl block7062
    jmp block7063
    
block7063:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7061
    
block7062:
    movq $0, _7043
    jmp block7061
    
block7061:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc7036
    movq alloc7036, %r11
    movq vecinit7037, 8(%r11)
    movq $0, _7042
    movq alloc7036, %r11
    movq vecinit7038, 16(%r11)
    movq $0, _7041
    movq alloc7036, %r11
    movq vecinit7039, 24(%r11)
    movq $0, _7040
    movq alloc7036, v7034
    movq $1, vecinit7045
    movq v7034, %r11
    movq 24(%r11), vecinit7046
    movq $3, vecinit7047
    movq free_ptr(%rip), tmp7056
    movq tmp7056, tmp7055
    addq $32, tmp7055
    movq fromspace_end(%rip), tmp7057
    cmpq tmp7057, tmp7055
    jl block7059
    jmp block7060
    
block7060:
    movq %r15, %rdi
    movq $32, %rsi
    callq collect
    jmp block7058
    
block7059:
    movq $0, _7051
    jmp block7058
    
block7058:
    movq free_ptr(%rip), %r11
    addq $32, free_ptr(%rip)
    movq $7, 0(%r11)
    movq %r11, alloc7044
    movq alloc7044, %r11
    movq vecinit7045, 8(%r11)
    movq $0, _7050
    movq alloc7044, %r11
    movq vecinit7046, 16(%r11)
    movq $0, _7049
    movq alloc7044, %r11
    movq vecinit7047, 24(%r11)
    movq $0, _7048
    movq alloc7044, w7035
    movq w7035, %r11
    movq 16(%r11), %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7044
movq alloc7044, %r11
movq vecinit7045, 8(%r11)
movq $0, _7050
movq alloc7044, %r11
movq vecinit7046, 16(%r11)
movq $0, _7049
movq alloc7044, %r11
movq vecinit7047, 24(%r11)
movq $0, _7048
movq alloc7044, w7035
movq w7035, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, _7051
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7036
movq alloc7036, %r11
movq vecinit7037, 8(%r11)
movq $0, _7042
movq alloc7036, %r11
movq vecinit7038, 16(%r11)
movq $0, _7041
movq alloc7036, %r11
movq vecinit7039, 24(%r11)
movq $0, _7040
movq alloc7036, v7034
movq $1, vecinit7045
movq v7034, %r11
movq 24(%r11), vecinit7046
movq $3, vecinit7047
movq free_ptr(%rip), tmp7056
movq tmp7056, tmp7055
addq $32, tmp7055
movq fromspace_end(%rip), tmp7057
cmpq tmp7057, tmp7055
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, _7043
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, vecinit7037
movq $2, vecinit7038
movq $42, vecinit7039
movq free_ptr(%rip), tmp7053
movq tmp7053, tmp7052
addq $32, tmp7052
movq fromspace_end(%rip), tmp7054
cmpq tmp7054, tmp7052
jl block7062
jmp block7063




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7044
movq alloc7044, %r11
movq vecinit7045, 8(%r11)
movq $0, _7050
movq alloc7044, %r11
movq vecinit7046, 16(%r11)
movq $0, _7049
movq alloc7044, %r11
movq vecinit7047, 24(%r11)
movq $0, _7048
movq alloc7044, w7035
movq w7035, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, _7051
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7036
movq alloc7036, %r11
movq vecinit7037, 8(%r11)
movq $0, _7042
movq alloc7036, %r11
movq vecinit7038, 16(%r11)
movq $0, _7041
movq alloc7036, %r11
movq vecinit7039, 24(%r11)
movq $0, _7040
movq alloc7036, v7034
movq $1, vecinit7045
movq v7034, %r11
movq 24(%r11), vecinit7046
movq $3, vecinit7047
movq free_ptr(%rip), tmp7056
movq tmp7056, tmp7055
addq $32, tmp7055
movq fromspace_end(%rip), tmp7057
cmpq tmp7057, tmp7055
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, _7043
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, vecinit7037
movq $2, vecinit7038
movq $42, vecinit7039
movq free_ptr(%rip), tmp7053
movq tmp7053, tmp7052
addq $32, tmp7052
movq fromspace_end(%rip), tmp7054
cmpq tmp7054, tmp7052
jl block7062
jmp block7063




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: addq $32, free_ptr(%rip)

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: movq $7, 0(%r11)

2 live-set: #<set: vecinit7045 vecinit7047 %r11 vecinit7046>
1 instruction: movq %r11, alloc7044

2 live-set: #<set: alloc7044 vecinit7045 vecinit7047 vecinit7046>
1 instruction: movq alloc7044, %r11

2 live-set: #<set: alloc7044 vecinit7045 vecinit7047 vecinit7046>
1 instruction: movq vecinit7045, 8(%r11)

2 live-set: #<set: alloc7044 vecinit7047 vecinit7046>
1 instruction: movq $0, _7050

2 live-set: #<set: alloc7044 vecinit7047 vecinit7046>
1 instruction: movq alloc7044, %r11

2 live-set: #<set: alloc7044 vecinit7047 vecinit7046>
1 instruction: movq vecinit7046, 16(%r11)

2 live-set: #<set: alloc7044 vecinit7047>
1 instruction: movq $0, _7049

2 live-set: #<set: alloc7044 vecinit7047>
1 instruction: movq alloc7044, %r11

2 live-set: #<set: alloc7044 vecinit7047>
1 instruction: movq vecinit7047, 24(%r11)

2 live-set: #<set: alloc7044>
1 instruction: movq $0, _7048

2 live-set: #<set: alloc7044>
1 instruction: movq alloc7044, w7035

2 live-set: #<set: w7035>
1 instruction: movq w7035, %r11

2 live-set: #<set: %r11>
1 instruction: movq 16(%r11), %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit7045 vecinit7047 %rdi vecinit7046>
1 instruction: movq $32, %rsi

2 live-set: #<set: %rsi vecinit7045 vecinit7047 %rdi vecinit7046>
1 instruction: callq collect

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: jmp block7058

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: movq $0, _7051

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: jmp block7058

2 live-set: #<set: vecinit7045 vecinit7047 vecinit7046>
1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: addq $32, free_ptr(%rip)

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: movq $7, 0(%r11)

2 live-set: #<set: vecinit7037 vecinit7039 %r15 %r11 vecinit7038>
1 instruction: movq %r11, alloc7036

2 live-set: #<set: vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038>
1 instruction: movq alloc7036, %r11

2 live-set: #<set: vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038>
1 instruction: movq vecinit7037, 8(%r11)

2 live-set: #<set: vecinit7039 %r15 alloc7036 vecinit7038>
1 instruction: movq $0, _7042

2 live-set: #<set: vecinit7039 %r15 alloc7036 vecinit7038>
1 instruction: movq alloc7036, %r11

2 live-set: #<set: vecinit7039 %r15 alloc7036 vecinit7038>
1 instruction: movq vecinit7038, 16(%r11)

2 live-set: #<set: vecinit7039 %r15 alloc7036>
1 instruction: movq $0, _7041

2 live-set: #<set: vecinit7039 %r15 alloc7036>
1 instruction: movq alloc7036, %r11

2 live-set: #<set: vecinit7039 %r15 alloc7036>
1 instruction: movq vecinit7039, 24(%r11)

2 live-set: #<set: %r15 alloc7036>
1 instruction: movq $0, _7040

2 live-set: #<set: %r15 alloc7036>
1 instruction: movq alloc7036, v7034

2 live-set: #<set: %r15 v7034>
1 instruction: movq $1, vecinit7045

2 live-set: #<set: vecinit7045 %r15 v7034>
1 instruction: movq v7034, %r11

2 live-set: #<set: vecinit7045 %r15 %r11>
1 instruction: movq 24(%r11), vecinit7046

2 live-set: #<set: vecinit7045 %r15 vecinit7046>
1 instruction: movq $3, vecinit7047

2 live-set: #<set: vecinit7045 vecinit7047 %r15 vecinit7046>
1 instruction: movq free_ptr(%rip), tmp7056

2 live-set: #<set: tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046>
1 instruction: movq tmp7056, tmp7055

2 live-set: #<set: vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046>
1 instruction: addq $32, tmp7055

2 live-set: #<set: vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046>
1 instruction: movq fromspace_end(%rip), tmp7057

2 live-set: #<set: vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046>
1 instruction: cmpq tmp7057, tmp7055

2 live-set: #<set: vecinit7045 vecinit7047 %r15 vecinit7046>
1 instruction: jl block7059

2 live-set: #<set: vecinit7045 vecinit7047 %r15 vecinit7046>
1 instruction: jmp block7060

2 live-set: #<set: vecinit7045 vecinit7047 %r15 vecinit7046>
1 instruction: movq %r15, %rdi

2 live-set: #<set: vecinit7037 vecinit7039 %r15 %rdi vecinit7038>
1 instruction: movq $32, %rsi

2 live-set: #<set: %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038>
1 instruction: callq collect

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: jmp block7061

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: movq $0, _7043

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: jmp block7061

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: movq $1, vecinit7037

2 live-set: #<set: vecinit7037 %r15>
1 instruction: movq $2, vecinit7038

2 live-set: #<set: vecinit7037 %r15 vecinit7038>
1 instruction: movq $42, vecinit7039

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: movq free_ptr(%rip), tmp7053

2 live-set: #<set: vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038>
1 instruction: movq tmp7053, tmp7052

2 live-set: #<set: vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038>
1 instruction: addq $32, tmp7052

2 live-set: #<set: vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038>
1 instruction: movq fromspace_end(%rip), tmp7054

2 live-set: #<set: vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054>
1 instruction: cmpq tmp7054, tmp7052

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: jl block7062

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
1 instruction: jmp block7063

2 live-set: #<set: vecinit7037 vecinit7039 %r15 vecinit7038>
tmp7056 -> vecinit7045;
tmp7056 -> vecinit7047;
tmp7056 -> %r15;
tmp7056 -> vecinit7046;
%rsi -> vecinit7037;
%rsi -> vecinit7045;
%rsi -> vecinit7039;
%rsi -> vecinit7047;
%rsi -> %r15;
%rsi -> %rdi;
%rsi -> vecinit7038;
%rsi -> vecinit7046;
_7043 -> vecinit7037;
_7043 -> vecinit7039;
_7043 -> %r15;
_7043 -> vecinit7038;
_7040 -> %r15;
_7040 -> alloc7036;
%rcx -> vecinit7037;
%rcx -> vecinit7045;
%rcx -> vecinit7039;
%rcx -> vecinit7047;
%rcx -> %r15;
%rcx -> vecinit7038;
%rcx -> vecinit7046;
vecinit7047 -> %rcx;
vecinit7047 -> %rsi;
vecinit7047 -> alloc7044;
vecinit7047 -> tmp7056;
vecinit7047 -> vecinit7045;
vecinit7047 -> _7049;
vecinit7047 -> tmp7057;
vecinit7047 -> %rdx;
vecinit7047 -> %r8;
vecinit7047 -> %r15;
vecinit7047 -> %r9;
vecinit7047 -> %r11;
vecinit7047 -> %rax;
vecinit7047 -> _7050;
vecinit7047 -> %rdi;
vecinit7047 -> tmp7055;
vecinit7047 -> %r10;
vecinit7047 -> vecinit7046;
vecinit7047 -> _7051;
%r11 -> alloc7044;
%r11 -> vecinit7037;
%r11 -> vecinit7045;
%r11 -> vecinit7039;
%r11 -> vecinit7047;
%r11 -> %r15;
%r11 -> alloc7036;
%r11 -> vecinit7038;
%r11 -> vecinit7046;
_7048 -> alloc7044;
_7051 -> vecinit7045;
_7051 -> vecinit7047;
_7051 -> vecinit7046;
tmp7053 -> vecinit7037;
tmp7053 -> vecinit7039;
tmp7053 -> %r15;
tmp7053 -> vecinit7038;
%r15 -> %rcx;
%r15 -> %rsi;
%r15 -> tmp7056;
%r15 -> vecinit7037;
%r15 -> tmp7052;
%r15 -> _7042;
%r15 -> vecinit7045;
%r15 -> tmp7057;
%r15 -> %rdx;
%r15 -> vecinit7039;
%r15 -> _7043;
%r15 -> _7040;
%r15 -> vecinit7047;
%r15 -> %r8;
%r15 -> %r9;
%r15 -> %r11;
%r15 -> %rax;
%r15 -> tmp7053;
%r15 -> alloc7036;
%r15 -> v7034;
%r15 -> %rdi;
%r15 -> tmp7055;
%r15 -> vecinit7038;
%r15 -> %r10;
%r15 -> tmp7054;
%r15 -> _7041;
%r15 -> vecinit7046;
_7049 -> alloc7044;
_7049 -> vecinit7047;
alloc7036 -> vecinit7037;
alloc7036 -> _7042;
alloc7036 -> vecinit7039;
alloc7036 -> _7040;
alloc7036 -> %r15;
alloc7036 -> %r11;
alloc7036 -> vecinit7038;
alloc7036 -> _7041;
%rax -> vecinit7037;
%rax -> vecinit7045;
%rax -> vecinit7039;
%rax -> vecinit7047;
%rax -> %r15;
%rax -> vecinit7038;
%rax -> vecinit7046;
v7034 -> vecinit7045;
v7034 -> %r15;
%r8 -> vecinit7037;
%r8 -> vecinit7045;
%r8 -> vecinit7039;
%r8 -> vecinit7047;
%r8 -> %r15;
%r8 -> vecinit7038;
%r8 -> vecinit7046;
%r10 -> vecinit7037;
%r10 -> vecinit7045;
%r10 -> vecinit7039;
%r10 -> vecinit7047;
%r10 -> %r15;
%r10 -> vecinit7038;
%r10 -> vecinit7046;
vecinit7037 -> %rcx;
vecinit7037 -> %rsi;
vecinit7037 -> tmp7052;
vecinit7037 -> %rdx;
vecinit7037 -> vecinit7039;
vecinit7037 -> _7043;
vecinit7037 -> %r8;
vecinit7037 -> %r15;
vecinit7037 -> %r9;
vecinit7037 -> %r11;
vecinit7037 -> %rax;
vecinit7037 -> tmp7053;
vecinit7037 -> alloc7036;
vecinit7037 -> %rdi;
vecinit7037 -> vecinit7038;
vecinit7037 -> %r10;
vecinit7037 -> tmp7054;
tmp7057 -> vecinit7045;
tmp7057 -> vecinit7047;
tmp7057 -> %r15;
tmp7057 -> tmp7055;
tmp7057 -> vecinit7046;
tmp7052 -> vecinit7037;
tmp7052 -> vecinit7039;
tmp7052 -> %r15;
tmp7052 -> vecinit7038;
tmp7052 -> tmp7054;
_7050 -> alloc7044;
_7050 -> vecinit7047;
_7050 -> vecinit7046;
_7042 -> vecinit7039;
_7042 -> %r15;
_7042 -> alloc7036;
_7042 -> vecinit7038;
%rdx -> vecinit7037;
%rdx -> vecinit7045;
%rdx -> vecinit7039;
%rdx -> vecinit7047;
%rdx -> %r15;
%rdx -> vecinit7038;
%rdx -> vecinit7046;
vecinit7045 -> %rcx;
vecinit7045 -> %rsi;
vecinit7045 -> alloc7044;
vecinit7045 -> tmp7056;
vecinit7045 -> tmp7057;
vecinit7045 -> %rdx;
vecinit7045 -> vecinit7047;
vecinit7045 -> %r8;
vecinit7045 -> %r15;
vecinit7045 -> %r9;
vecinit7045 -> %r11;
vecinit7045 -> %rax;
vecinit7045 -> v7034;
vecinit7045 -> %rdi;
vecinit7045 -> tmp7055;
vecinit7045 -> %r10;
vecinit7045 -> vecinit7046;
vecinit7045 -> _7051;
_7041 -> vecinit7039;
_7041 -> %r15;
_7041 -> alloc7036;
tmp7055 -> vecinit7045;
tmp7055 -> tmp7057;
tmp7055 -> vecinit7047;
tmp7055 -> %r15;
tmp7055 -> vecinit7046;
vecinit7038 -> %rcx;
vecinit7038 -> %rsi;
vecinit7038 -> vecinit7037;
vecinit7038 -> tmp7052;
vecinit7038 -> _7042;
vecinit7038 -> %rdx;
vecinit7038 -> vecinit7039;
vecinit7038 -> _7043;
vecinit7038 -> %r8;
vecinit7038 -> %r15;
vecinit7038 -> %r9;
vecinit7038 -> %r11;
vecinit7038 -> %rax;
vecinit7038 -> tmp7053;
vecinit7038 -> alloc7036;
vecinit7038 -> %rdi;
vecinit7038 -> %r10;
vecinit7038 -> tmp7054;
vecinit7046 -> %rcx;
vecinit7046 -> %rsi;
vecinit7046 -> alloc7044;
vecinit7046 -> tmp7056;
vecinit7046 -> vecinit7045;
vecinit7046 -> tmp7057;
vecinit7046 -> %rdx;
vecinit7046 -> vecinit7047;
vecinit7046 -> %r8;
vecinit7046 -> %r15;
vecinit7046 -> %r9;
vecinit7046 -> %r11;
vecinit7046 -> %rax;
vecinit7046 -> _7050;
vecinit7046 -> %rdi;
vecinit7046 -> tmp7055;
vecinit7046 -> %r10;
vecinit7046 -> _7051;
%rdi -> %rsi;
%rdi -> vecinit7037;
%rdi -> vecinit7045;
%rdi -> vecinit7039;
%rdi -> vecinit7047;
%rdi -> %r15;
%rdi -> vecinit7038;
%rdi -> vecinit7046;
tmp7054 -> vecinit7037;
tmp7054 -> tmp7052;
tmp7054 -> vecinit7039;
tmp7054 -> %r15;
tmp7054 -> vecinit7038;
%r9 -> vecinit7037;
%r9 -> vecinit7045;
%r9 -> vecinit7039;
%r9 -> vecinit7047;
%r9 -> %r15;
%r9 -> vecinit7038;
%r9 -> vecinit7046;
vecinit7039 -> %rcx;
vecinit7039 -> %rsi;
vecinit7039 -> vecinit7037;
vecinit7039 -> tmp7052;
vecinit7039 -> _7042;
vecinit7039 -> %rdx;
vecinit7039 -> _7043;
vecinit7039 -> %r8;
vecinit7039 -> %r15;
vecinit7039 -> %r9;
vecinit7039 -> %r11;
vecinit7039 -> %rax;
vecinit7039 -> tmp7053;
vecinit7039 -> alloc7036;
vecinit7039 -> %rdi;
vecinit7039 -> vecinit7038;
vecinit7039 -> %r10;
vecinit7039 -> tmp7054;
vecinit7039 -> _7041;
alloc7044 -> vecinit7045;
alloc7044 -> _7049;
alloc7044 -> vecinit7047;
alloc7044 -> %r11;
alloc7044 -> _7050;
alloc7044 -> vecinit7046;
alloc7044 -> _7048;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7044
movq alloc7044, %r11
movq vecinit7045, 8(%r11)
movq $0, _7050
movq alloc7044, %r11
movq vecinit7046, 16(%r11)
movq $0, _7049
movq alloc7044, %r11
movq vecinit7047, 24(%r11)
movq $0, _7048
movq alloc7044, w7035
movq w7035, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, _7051
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7036
movq alloc7036, %r11
movq vecinit7037, 8(%r11)
movq $0, _7042
movq alloc7036, %r11
movq vecinit7038, 16(%r11)
movq $0, _7041
movq alloc7036, %r11
movq vecinit7039, 24(%r11)
movq $0, _7040
movq alloc7036, v7034
movq $1, vecinit7045
movq v7034, %r11
movq 24(%r11), vecinit7046
movq $3, vecinit7047
movq free_ptr(%rip), tmp7056
movq tmp7056, tmp7055
addq $32, tmp7055
movq fromspace_end(%rip), tmp7057
cmpq tmp7057, tmp7055
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, _7043
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, vecinit7037
movq $2, vecinit7038
movq $42, vecinit7039
movq free_ptr(%rip), tmp7053
movq tmp7053, tmp7052
addq $32, tmp7052
movq fromspace_end(%rip), tmp7054
cmpq tmp7054, tmp7052
jl block7062
jmp block7063




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7044
movq alloc7044, %r11
movq vecinit7045, 8(%r11)
movq $0, _7050
movq alloc7044, %r11
movq vecinit7046, 16(%r11)
movq $0, _7049
movq alloc7044, %r11
movq vecinit7047, 24(%r11)
movq $0, _7048
movq alloc7044, w7035
movq w7035, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, _7051
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, alloc7036
movq alloc7036, %r11
movq vecinit7037, 8(%r11)
movq $0, _7042
movq alloc7036, %r11
movq vecinit7038, 16(%r11)
movq $0, _7041
movq alloc7036, %r11
movq vecinit7039, 24(%r11)
movq $0, _7040
movq alloc7036, v7034
movq $1, vecinit7045
movq v7034, %r11
movq 24(%r11), vecinit7046
movq $3, vecinit7047
movq free_ptr(%rip), tmp7056
movq tmp7056, tmp7055
addq $32, tmp7055
movq fromspace_end(%rip), tmp7057
cmpq tmp7057, tmp7055
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, _7043
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, vecinit7037
movq $2, vecinit7038
movq $42, vecinit7039
movq free_ptr(%rip), tmp7053
movq tmp7053, tmp7052
addq $32, tmp7052
movq fromspace_end(%rip), tmp7054
cmpq tmp7054, tmp7052
jl block7062
jmp block7063




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
jmp block7063




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
jmp block7060

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
jmp block7063




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
movq %rdx, %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: ()
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    vecinit7037 : 'Integer, vecinit7038 : 'Integer, vecinit7039 : 'Integer, tmp7053 : 'Integer, tmp7052 : 'Integer, tmp7054 : 'Integer, _7043 : 'Void, alloc7036 : '(Vector
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer
                                                                                                                                                                     Integer), _7042 : 'Void, _7041 : 'Void, _7040 : 'Void, v7034 : '(Vector
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer
                                                                                                                                                                                                                                      Integer), vecinit7045 : 'Boolean, vecinit7046 : 'Integer, vecinit7047 : 'Integer, tmp7056 : 'Integer, tmp7055 : 'Integer, tmp7057 : 'Integer, _7051 : 'Void, alloc7044 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                 Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer
                                                                                                                                                                                                                                                                                                                                                                                                                 Integer), _7050 : 'Void, _7049 : 'Void, _7048 : 'Void, w7035 : '(Vector
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Boolean
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  Integer), 
conflicts:
#<unweighted-graph>
used_callee:
(set %r13 %r12 %rbx)
num-root-spills:
0
stack-space:
32
block7058:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 %r11 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7045 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047 vecinit7046)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044 vecinit7047)
 (set alloc7044)
 (set alloc7044)
 (set w7035)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 16(%r11), %rax
jmp conclusion

block7060:
    live-sets:
(list
 (set vecinit7045 vecinit7047 %rdi vecinit7046)
 (set %rsi vecinit7045 vecinit7047 %rdi vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7059:
    live-sets:
(list
 (set vecinit7045 vecinit7047 vecinit7046)
 (set vecinit7045 vecinit7047 vecinit7046))
movq $0, %rcx
jmp block7058

block7061:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 %r11 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036 vecinit7038)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set vecinit7039 %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 alloc7036)
 (set %r15 v7034)
 (set vecinit7045 %r15 v7034)
 (set vecinit7045 %r15 %r11)
 (set vecinit7045 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set tmp7056 vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 tmp7057 vecinit7047 %r15 tmp7055 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046)
 (set vecinit7045 vecinit7047 %r15 vecinit7046))
movq free_ptr(%rip), %r11
addq $32, free_ptr(%rip)
movq $7, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %r13, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %r12, 16(%r11)
movq $0, %rdx
movq %rcx, %r11
movq %rbx, 24(%r11)
movq $0, %rdx
movq $1, %r13
movq %rcx, %r11
movq 24(%r11), %r12
movq $3, %rbx
movq free_ptr(%rip), %rcx
addq $32, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7059
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7058

block7063:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set %rsi vecinit7037 vecinit7039 %r15 %rdi vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

block7062:
    live-sets:
(list
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $0, %rcx
jmp block7061

start:
    live-sets:
(list
 (set vecinit7037 %r15)
 (set vecinit7037 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 tmp7053 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 tmp7052 vecinit7039 %r15 vecinit7038 tmp7054)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038)
 (set vecinit7037 vecinit7039 %r15 vecinit7038))
movq $1, %r13
movq $2, %r12
movq $42, %rbx
movq free_ptr(%rip), %rdx
addq $32, %rdx
movq fromspace_end(%rip), %rcx
cmpq %rcx, %rdx
jl block7062
movq %r15, %rdi
movq $32, %rsi
callq collect
jmp block7061

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    pushq %r12
    pushq %r13
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %r13
    popq %r12
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
program:
(vector-ref (vector 42) 0)


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (vector 42) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (vector 42) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (vector 42) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (vector 42) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(vector-ref (let ([vecinit7072 42])
               (let ([_7074 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                               (void)
                               (collect 16))
                            ])
                  (let ([alloc7071 (allocate 1 (Vector Integer))])
                     (let ([_7073 (vector-set! alloc7071 0 vecinit7072)])
                        alloc7071)))) 0)


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(vector-ref (let ([vecinit7072 42])
               (let ([_7074 (if (< (+ (global-value free_ptr) 16) (global-value fromspace_end))
                               (void)
                               (collect 16))
                            ])
                  (let ([alloc7071 (allocate 1 (Vector Integer))])
                     (let ([_7073 (vector-set! alloc7071 0 vecinit7072)])
                        alloc7071)))) 0)


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
(let ([tmp7075 (let ([vecinit7072 42])
                  (let ([_7074 (if (let ([tmp7076 (let ([tmp7077 (global-value free_ptr)])
                                                     (+ tmp7077 16))])
                                      (let ([tmp7078 (global-value fromspace_end)])
                                         (< tmp7076 tmp7078)))
                                  (void)
                                  (collect 16))
                               ])
                     (let ([alloc7071 (allocate 1 (Vector Integer))])
                        (let ([_7073 (vector-set! alloc7071 0 vecinit7072)])
                           alloc7071))))])
   (vector-ref tmp7075 0))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
(let ([tmp7075 (let ([vecinit7072 42])
                  (let ([_7074 (if (let ([tmp7076 (let ([tmp7077 (global-value free_ptr)])
                                                     (+ tmp7077 16))])
                                      (let ([tmp7078 (global-value fromspace_end)])
                                         (< tmp7076 tmp7078)))
                                  (void)
                                  (collect 16))
                               ])
                     (let ([alloc7071 (allocate 1 (Vector Integer))])
                        (let ([_7073 (vector-set! alloc7071 0 vecinit7072)])
                           alloc7071))))])
   (vector-ref tmp7075 0))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
start:
    vecinit7072 = 42;
    tmp7077 = (global-value free_ptr);
    tmp7076 = (+ tmp7077 16);
    tmp7078 = (global-value fromspace_end);
    if (< tmp7076 tmp7078)
       goto block7080;
    else
       goto block7081;
block7081:
    (collect 16)
    goto block7079;
block7080:
    _7074 = (void);
    goto block7079;
block7079:
    alloc7071 = (allocate 1 (Vector Integer));
    _7073 = (vector-set! alloc7071 0 vecinit7072);
    tmp7075 = alloc7071;
    return (vector-ref tmp7075 0);



type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
start:
    vecinit7072 = 42;
    tmp7077 = (global-value free_ptr);
    tmp7076 = (+ tmp7077 16);
    tmp7078 = (global-value fromspace_end);
    if (< tmp7076 tmp7078)
       goto block7080;
    else
       goto block7081;
block7081:
    (collect 16)
    goto block7079;
block7080:
    _7074 = (void);
    goto block7079;
block7079:
    alloc7071 = (allocate 1 (Vector Integer));
    _7073 = (vector-set! alloc7071 0 vecinit7072);
    tmp7075 = alloc7071;
    return (vector-ref tmp7075 0);



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
start:
    movq $42, vecinit7072
    movq free_ptr(%rip), tmp7077
    movq tmp7077, tmp7076
    addq $16, tmp7076
    movq fromspace_end(%rip), tmp7078
    cmpq tmp7078, tmp7076
    jl block7080
    jmp block7081
    
block7081:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block7079
    
block7080:
    movq $0, _7074
    jmp block7079
    
block7079:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, alloc7071
    movq alloc7071, %r11
    movq vecinit7072, 8(%r11)
    movq $0, _7073
    movq alloc7071, tmp7075
    movq tmp7075, %r11
    movq 8(%r11), %rax
    jmp conclusion
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
start:
    movq $42, vecinit7072
    movq free_ptr(%rip), tmp7077
    movq tmp7077, tmp7076
    addq $16, tmp7076
    movq fromspace_end(%rip), tmp7078
    cmpq tmp7078, tmp7076
    jl block7080
    jmp block7081
    
block7081:
    movq %r15, %rdi
    movq $16, %rsi
    callq collect
    jmp block7079
    
block7080:
    movq $0, _7074
    jmp block7079
    
block7079:
    movq free_ptr(%rip), %r11
    addq $16, free_ptr(%rip)
    movq $3, 0(%r11)
    movq %r11, alloc7071
    movq alloc7071, %r11
    movq vecinit7072, 8(%r11)
    movq $0, _7073
    movq alloc7071, tmp7075
    movq tmp7075, %r11
    movq 8(%r11), %rax
    jmp conclusion
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc7071
movq alloc7071, %r11
movq vecinit7072, 8(%r11)
movq $0, _7073
movq alloc7071, tmp7075
movq tmp7075, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, _7074
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, vecinit7072
movq free_ptr(%rip), tmp7077
movq tmp7077, tmp7076
addq $16, tmp7076
movq fromspace_end(%rip), tmp7078
cmpq tmp7078, tmp7076
jl block7080
jmp block7081




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc7071
movq alloc7071, %r11
movq vecinit7072, 8(%r11)
movq $0, _7073
movq alloc7071, tmp7075
movq tmp7075, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, _7074
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, vecinit7072
movq free_ptr(%rip), tmp7077
movq tmp7077, tmp7076
addq $16, tmp7076
movq fromspace_end(%rip), tmp7078
cmpq tmp7078, tmp7076
jl block7080
jmp block7081




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

1 instruction: movq free_ptr(%rip), %r11

2 live-set: #<set: vecinit7072>
1 instruction: addq $16, free_ptr(%rip)

2 live-set: #<set: vecinit7072>
1 instruction: movq $3, 0(%r11)

2 live-set: #<set: %r11 vecinit7072>
1 instruction: movq %r11, alloc7071

2 live-set: #<set: alloc7071 vecinit7072>
1 instruction: movq alloc7071, %r11

2 live-set: #<set: alloc7071 vecinit7072>
1 instruction: movq vecinit7072, 8(%r11)

2 live-set: #<set: alloc7071>
1 instruction: movq $0, _7073

2 live-set: #<set: alloc7071>
1 instruction: movq alloc7071, tmp7075

2 live-set: #<set: tmp7075>
1 instruction: movq tmp7075, %r11

2 live-set: #<set: %r11>
1 instruction: movq 8(%r11), %rax

2 live-set: #<set:>
1 instruction: jmp conclusion

2 live-set: #<set:>
1 instruction: movq %r15, %rdi

2 live-set: #<set: %rdi vecinit7072>
1 instruction: movq $16, %rsi

2 live-set: #<set: %rsi %rdi vecinit7072>
1 instruction: callq collect

2 live-set: #<set: vecinit7072>
1 instruction: jmp block7079

2 live-set: #<set: vecinit7072>
1 instruction: movq $0, _7074

2 live-set: #<set: vecinit7072>
1 instruction: jmp block7079

2 live-set: #<set: vecinit7072>
1 instruction: movq $42, vecinit7072

2 live-set: #<set: %r15 vecinit7072>
1 instruction: movq free_ptr(%rip), tmp7077

2 live-set: #<set: tmp7077 %r15 vecinit7072>
1 instruction: movq tmp7077, tmp7076

2 live-set: #<set: %r15 tmp7076 vecinit7072>
1 instruction: addq $16, tmp7076

2 live-set: #<set: %r15 tmp7076 vecinit7072>
1 instruction: movq fromspace_end(%rip), tmp7078

2 live-set: #<set: tmp7078 %r15 tmp7076 vecinit7072>
1 instruction: cmpq tmp7078, tmp7076

2 live-set: #<set: %r15 vecinit7072>
1 instruction: jl block7080

2 live-set: #<set: %r15 vecinit7072>
1 instruction: jmp block7081

2 live-set: #<set: %r15 vecinit7072>
%rsi -> %rdi;
%rsi -> vecinit7072;
_7073 -> alloc7071;
%rax -> vecinit7072;
%rcx -> vecinit7072;
%r11 -> alloc7071;
%r11 -> vecinit7072;
vecinit7072 -> %rcx;
vecinit7072 -> %rsi;
vecinit7072 -> tmp7077;
vecinit7072 -> tmp7078;
vecinit7072 -> %rdx;
vecinit7072 -> %r8;
vecinit7072 -> %r15;
vecinit7072 -> %r9;
vecinit7072 -> %r11;
vecinit7072 -> %rax;
vecinit7072 -> %rdi;
vecinit7072 -> tmp7076;
vecinit7072 -> alloc7071;
vecinit7072 -> %r10;
vecinit7072 -> _7074;
%r15 -> tmp7077;
%r15 -> tmp7078;
%r15 -> tmp7076;
%r15 -> vecinit7072;
_7074 -> vecinit7072;
%r8 -> vecinit7072;
%r10 -> vecinit7072;
tmp7078 -> %r15;
tmp7078 -> tmp7076;
tmp7078 -> vecinit7072;
%rdx -> vecinit7072;
%rdi -> %rsi;
%rdi -> vecinit7072;
tmp7076 -> tmp7078;
tmp7076 -> %r15;
tmp7076 -> vecinit7072;
alloc7071 -> _7073;
alloc7071 -> %r11;
alloc7071 -> vecinit7072;
%r9 -> vecinit7072;
tmp7077 -> %r15;
tmp7077 -> vecinit7072;
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc7071
movq alloc7071, %r11
movq vecinit7072, 8(%r11)
movq $0, _7073
movq alloc7071, tmp7075
movq tmp7075, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, _7074
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, vecinit7072
movq free_ptr(%rip), tmp7077
movq tmp7077, tmp7076
addq $16, tmp7076
movq fromspace_end(%rip), tmp7078
cmpq tmp7078, tmp7076
jl block7080
jmp block7081




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, alloc7071
movq alloc7071, %r11
movq vecinit7072, 8(%r11)
movq $0, _7073
movq alloc7071, tmp7075
movq tmp7075, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, _7074
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, vecinit7072
movq free_ptr(%rip), tmp7077
movq tmp7077, tmp7076
addq $16, tmp7076
movq fromspace_end(%rip), tmp7078
cmpq tmp7078, tmp7076
jl block7080
jmp block7081




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
jmp block7081




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
jmp block7081




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: remove jumps @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %rcx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
movq %rcx, %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: patch instructions @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079




type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079




output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


running pass: prelude-and-conclusion @ utilities.rkt:2027

part-5: ()
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %rbx
    popq %rbp
    retq
    



type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
program:
locals-types:
    tmp7077 : 'Integer, tmp7076 : 'Integer, tmp7078 : 'Integer, _7074 : 'Void, alloc7071 : '(Vector
                                                                                             Integer), _7073 : 'Void, tmp7075 : '(Vector
                                                                                                                                  Integer), vecinit7072 : 'Integer, 
conflicts:
#<unweighted-graph>
used_callee:
(set %rbx)
num-root-spills:
0
stack-space:
16
block7079:
    live-sets:
(list
 (set vecinit7072)
 (set vecinit7072)
 (set %r11 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071 vecinit7072)
 (set alloc7071)
 (set alloc7071)
 (set tmp7075)
 (set %r11)
 (set)
 (set))
movq free_ptr(%rip), %r11
addq $16, free_ptr(%rip)
movq $3, 0(%r11)
movq %r11, %rcx
movq %rcx, %r11
movq %rbx, 8(%r11)
movq $0, %rdx
movq %rcx, %r11
movq 8(%r11), %rax
jmp conclusion

block7081:
    live-sets:
(list
 (set %rdi vecinit7072)
 (set %rsi %rdi vecinit7072)
 (set vecinit7072)
 (set vecinit7072))
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

block7080:
    live-sets:
(list (set vecinit7072) (set vecinit7072))
movq $0, %rcx
jmp block7079

start:
    live-sets:
(list
 (set %r15 vecinit7072)
 (set tmp7077 %r15 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set %r15 tmp7076 vecinit7072)
 (set tmp7078 %r15 tmp7076 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072)
 (set %r15 vecinit7072))
movq $42, %rbx
movq free_ptr(%rip), %rcx
addq $16, %rcx
movq fromspace_end(%rip), %rdx
cmpq %rdx, %rcx
jl block7080
movq %r15, %rdi
movq $16, %rsi
callq collect
jmp block7079

main:
    pushq %rbp
    movq %rsp, %rbp
    pushq %rbx
    subq $8, %rsp
    movq $16384, %rdi
    movq $16384, %rsi
    callq initialize
    movq rootstack_begin(%rip), %r15
    addq $0, %r15
    jmp start
    
conclusion:
    subq $0, %r15
    addq $8, %rsp
    popq %rbx
    popq %rbp
    retq
    



output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_7"

expected-result:
42


273 success(es) 0 failure(s) 0 error(s) 273 test(s) run
0
