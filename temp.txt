type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 1) (Int 2))) '(Vector Integer Integer))
  (Int 42)))


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 1) (Int 2))) '(Vector Integer Integer))
  (Int 42)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 1) (Int 2))) '(Vector Integer Integer))
  (Int 42)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6885
  (HasType (Prim 'vector (list (Int 1) (Int 2))) '(Vector Integer Integer))
  (Int 42)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6885
  (HasType (Prim 'vector (list (Int 1) (Int 2))) '(Vector Integer Integer))
  (Int 42)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6885
  (Let
   'vecinit6887
   (Int 1)
   (Let
    'vecinit6888
    (Int 2)
    (Let
     '_6891
     (If
      (Prim
       '<
       (list
        (Prim '+ (list (GlobalValue 'free_ptr) (Int 24)))
        (GlobalValue 'fromspace_end)))
      (Void)
      (collect 24))
     (Let
      'alloc6886
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6890
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887)))
       (Let
        '_6889
        (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888)))
        (Var 'alloc6886)))))))
  (Int 42)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6885
  (Let
   'vecinit6887
   (Int 1)
   (Let
    'vecinit6888
    (Int 2)
    (Let
     '_6891
     (If
      (Prim
       '<
       (list
        (Prim '+ (list (GlobalValue 'free_ptr) (Int 24)))
        (GlobalValue 'fromspace_end)))
      (Void)
      (collect 24))
     (Let
      'alloc6886
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6890
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887)))
       (Let
        '_6889
        (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888)))
        (Var 'alloc6886)))))))
  (Int 42)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6885
  (Let
   'vecinit6887
   (Int 1)
   (Let
    'vecinit6888
    (Int 2)
    (Let
     '_6891
     (If
      (Let
       'tmp6892
       (Let
        'tmp6893
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6893) (Int 24))))
       (Let
        'tmp6894
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6892) (Var 'tmp6894)))))
      (Void)
      (collect 24))
     (Let
      'alloc6886
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6890
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887)))
       (Let
        '_6889
        (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888)))
        (Var 'alloc6886)))))))
  (Int 42)))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6885
  (Let
   'vecinit6887
   (Int 1)
   (Let
    'vecinit6888
    (Int 2)
    (Let
     '_6891
     (If
      (Let
       'tmp6892
       (Let
        'tmp6893
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6893) (Int 24))))
       (Let
        'tmp6894
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6892) (Var 'tmp6894)))))
      (Void)
      (collect 24))
     (Let
      'alloc6886
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6890
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887)))
       (Let
        '_6889
        (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888)))
        (Var 'alloc6886)))))))
  (Int 42)))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6887) (Int 1))
    (Seq
     (Assign (Var 'vecinit6888) (Int 2))
     (Seq
      (Assign (Var 'tmp6893) (GlobalValue 'free_ptr))
      (Seq
       (Assign (Var 'tmp6892) (Prim '+ (list (Var 'tmp6893) (Int 24))))
       (Seq
        (Assign (Var 'tmp6894) (GlobalValue 'fromspace_end))
        (IfStmt
         (Prim '< (list (Var 'tmp6892) (Var 'tmp6894)))
         (Goto 'block6896)
         (Goto 'block6897))))))))
  (cons 'block6897 (Seq (collect 24) (Goto 'block6895)))
  (cons 'block6896 (Seq (Assign (Var '_6891) (Void)) (Goto 'block6895)))
  (cons
   'block6895
   (Seq
    (Assign (Var 'alloc6886) (allocate 2 (Vector Integer Integer)))
    (Seq
     (Assign
      (Var '_6890)
      (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887))))
     (Seq
      (Assign
       (Var '_6889)
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888))))
      (Seq (Assign (Var 'v6885) (Var 'alloc6886)) (Return (Int 42)))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6887) (Int 1))
    (Seq
     (Assign (Var 'vecinit6888) (Int 2))
     (Seq
      (Assign (Var 'tmp6893) (GlobalValue 'free_ptr))
      (Seq
       (Assign (Var 'tmp6892) (Prim '+ (list (Var 'tmp6893) (Int 24))))
       (Seq
        (Assign (Var 'tmp6894) (GlobalValue 'fromspace_end))
        (IfStmt
         (Prim '< (list (Var 'tmp6892) (Var 'tmp6894)))
         (Goto 'block6896)
         (Goto 'block6897))))))))
  (cons 'block6897 (Seq (collect 24) (Goto 'block6895)))
  (cons 'block6896 (Seq (Assign (Var '_6891) (Void)) (Goto 'block6895)))
  (cons
   'block6895
   (Seq
    (Assign (Var 'alloc6886) (allocate 2 (Vector Integer Integer)))
    (Seq
     (Assign
      (Var '_6890)
      (Prim 'vector-set! (list (Var 'alloc6886) (Int 0) (Var 'vecinit6887))))
     (Seq
      (Assign
       (Var '_6889)
       (Prim 'vector-set! (list (Var 'alloc6886) (Int 1) (Var 'vecinit6888))))
      (Seq (Assign (Var 'v6885) (Var 'alloc6886)) (Return (Int 42)))))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))
  (cons
   'block6897
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'block6896
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6895
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))
  (cons
   'block6897
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'block6896
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6895
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer)))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer)))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6886)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6887) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6890)))
     (Instr 'movq (list (Var 'alloc6886) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6888) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6889)))
     (Instr 'movq (list (Var 'alloc6886) (Var 'v6885)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Var '_6891))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6887)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6888)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6893)))
     (Instr 'movq (list (Var 'tmp6893) (Var 'tmp6892)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6892)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6894)))
     (Instr 'cmpq (list (Var 'tmp6894) (Var 'tmp6892)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 16))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r12)))
     (Instr 'movq (list (Imm 2) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 24) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (_6891 . Void)
    (vecinit6887 . Integer)
    (vecinit6888 . Integer)
    (v6885 Vector Integer Integer)
    (tmp6892 . Integer)
    (_6890 . Void)
    (_6889 . Void)
    (tmp6894 . Integer)
    (alloc6886 Vector Integer Integer)
    (tmp6893 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 16))
 (list
  (cons
   'block6895
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r11))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'vecinit6888) (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set (Var 'alloc6886))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Imm 42) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6896
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6895))))
  (cons
   'block6897
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Reg 'rsi) (Var 'vecinit6887) (Reg 'rdi))
      (set (Var 'vecinit6888) (Var 'vecinit6887))
      (set (Var 'vecinit6888) (Var 'vecinit6887))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6895))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'tmp6893) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15) (Var 'tmp6892))
      (set
       (Var 'vecinit6888)
       (Var 'tmp6894)
       (Var 'vecinit6887)
       (Reg 'r15)
       (Var 'tmp6892))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))
      (set (Var 'vecinit6888) (Var 'vecinit6887) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r12)))
     (Instr 'movq (list (Imm 2) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 24) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block6896)
     (Jmp 'block6897))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_1"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 20) (Int 22))) '(Vector Integer Integer))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v) (Int 0)))
    (Prim 'vector-ref (list (Var 'v) (Int 1)))))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 20) (Int 22))) '(Vector Integer Integer))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v) (Int 0)))
    (Prim 'vector-ref (list (Var 'v) (Int 1)))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v
  (HasType (Prim 'vector (list (Int 20) (Int 22))) '(Vector Integer Integer))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v) (Int 0)))
    (Prim 'vector-ref (list (Var 'v) (Int 1)))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6902
  (HasType (Prim 'vector (list (Int 20) (Int 22))) '(Vector Integer Integer))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6902
  (HasType (Prim 'vector (list (Int 20) (Int 22))) '(Vector Integer Integer))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6902
  (Let
   'vecinit6904
   (Int 20)
   (Let
    'vecinit6905
    (Int 22)
    (Let
     '_6908
     (If
      (Prim
       '<
       (list
        (Prim '+ (list (GlobalValue 'free_ptr) (Int 24)))
        (GlobalValue 'fromspace_end)))
      (Void)
      (collect 24))
     (Let
      'alloc6903
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6907
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904)))
       (Let
        '_6906
        (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905)))
        (Var 'alloc6903)))))))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6902
  (Let
   'vecinit6904
   (Int 20)
   (Let
    'vecinit6905
    (Int 22)
    (Let
     '_6908
     (If
      (Prim
       '<
       (list
        (Prim '+ (list (GlobalValue 'free_ptr) (Int 24)))
        (GlobalValue 'fromspace_end)))
      (Void)
      (collect 24))
     (Let
      'alloc6903
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6907
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904)))
       (Let
        '_6906
        (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905)))
        (Var 'alloc6903)))))))
  (Prim
   '+
   (list
    (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6902
  (Let
   'vecinit6904
   (Int 20)
   (Let
    'vecinit6905
    (Int 22)
    (Let
     '_6908
     (If
      (Let
       'tmp6909
       (Let
        'tmp6910
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6910) (Int 24))))
       (Let
        'tmp6911
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6909) (Var 'tmp6911)))))
      (Void)
      (collect 24))
     (Let
      'alloc6903
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6907
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904)))
       (Let
        '_6906
        (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905)))
        (Var 'alloc6903)))))))
  (Let
   'tmp6912
   (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
   (Let
    'tmp6913
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))
    (Prim '+ (list (Var 'tmp6912) (Var 'tmp6913)))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6902
  (Let
   'vecinit6904
   (Int 20)
   (Let
    'vecinit6905
    (Int 22)
    (Let
     '_6908
     (If
      (Let
       'tmp6909
       (Let
        'tmp6910
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6910) (Int 24))))
       (Let
        'tmp6911
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6909) (Var 'tmp6911)))))
      (Void)
      (collect 24))
     (Let
      'alloc6903
      (allocate 2 (Vector Integer Integer))
      (Let
       '_6907
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904)))
       (Let
        '_6906
        (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905)))
        (Var 'alloc6903)))))))
  (Let
   'tmp6912
   (Prim 'vector-ref (list (Var 'v6902) (Int 0)))
   (Let
    'tmp6913
    (Prim 'vector-ref (list (Var 'v6902) (Int 1)))
    (Prim '+ (list (Var 'tmp6912) (Var 'tmp6913)))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6904) (Int 20))
    (Seq
     (Assign (Var 'vecinit6905) (Int 22))
     (Seq
      (Assign (Var 'tmp6910) (GlobalValue 'free_ptr))
      (Seq
       (Assign (Var 'tmp6909) (Prim '+ (list (Var 'tmp6910) (Int 24))))
       (Seq
        (Assign (Var 'tmp6911) (GlobalValue 'fromspace_end))
        (IfStmt
         (Prim '< (list (Var 'tmp6909) (Var 'tmp6911)))
         (Goto 'block6915)
         (Goto 'block6916))))))))
  (cons 'block6916 (Seq (collect 24) (Goto 'block6914)))
  (cons 'block6915 (Seq (Assign (Var '_6908) (Void)) (Goto 'block6914)))
  (cons
   'block6914
   (Seq
    (Assign (Var 'alloc6903) (allocate 2 (Vector Integer Integer)))
    (Seq
     (Assign
      (Var '_6907)
      (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904))))
     (Seq
      (Assign
       (Var '_6906)
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905))))
      (Seq
       (Assign (Var 'v6902) (Var 'alloc6903))
       (Seq
        (Assign (Var 'tmp6912) (Prim 'vector-ref (list (Var 'v6902) (Int 0))))
        (Seq
         (Assign (Var 'tmp6913) (Prim 'vector-ref (list (Var 'v6902) (Int 1))))
         (Return (Prim '+ (list (Var 'tmp6912) (Var 'tmp6913)))))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6904) (Int 20))
    (Seq
     (Assign (Var 'vecinit6905) (Int 22))
     (Seq
      (Assign (Var 'tmp6910) (GlobalValue 'free_ptr))
      (Seq
       (Assign (Var 'tmp6909) (Prim '+ (list (Var 'tmp6910) (Int 24))))
       (Seq
        (Assign (Var 'tmp6911) (GlobalValue 'fromspace_end))
        (IfStmt
         (Prim '< (list (Var 'tmp6909) (Var 'tmp6911)))
         (Goto 'block6915)
         (Goto 'block6916))))))))
  (cons 'block6916 (Seq (collect 24) (Goto 'block6914)))
  (cons 'block6915 (Seq (Assign (Var '_6908) (Void)) (Goto 'block6914)))
  (cons
   'block6914
   (Seq
    (Assign (Var 'alloc6903) (allocate 2 (Vector Integer Integer)))
    (Seq
     (Assign
      (Var '_6907)
      (Prim 'vector-set! (list (Var 'alloc6903) (Int 0) (Var 'vecinit6904))))
     (Seq
      (Assign
       (Var '_6906)
       (Prim 'vector-set! (list (Var 'alloc6903) (Int 1) (Var 'vecinit6905))))
      (Seq
       (Assign (Var 'v6902) (Var 'alloc6903))
       (Seq
        (Assign (Var 'tmp6912) (Prim 'vector-ref (list (Var 'v6902) (Int 0))))
        (Seq
         (Assign (Var 'tmp6913) (Prim 'vector-ref (list (Var 'v6902) (Int 1))))
         (Return (Prim '+ (list (Var 'tmp6912) (Var 'tmp6913)))))))))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))
  (cons
   'block6916
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'block6915
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6914
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))
  (cons
   'block6916
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'block6915
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6914
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void)))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void)))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6903)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6904) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6907)))
     (Instr 'movq (list (Var 'alloc6903) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6905) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6906)))
     (Instr 'movq (list (Var 'alloc6903) (Var 'v6902)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6912)))
     (Instr 'movq (list (Var 'v6902) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6913)))
     (Instr 'movq (list (Var 'tmp6912) (Reg 'rax)))
     (Instr 'addq (list (Var 'tmp6913) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Var '_6908))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Var 'vecinit6904)))
     (Instr 'movq (list (Imm 22) (Var 'vecinit6905)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6910)))
     (Instr 'movq (list (Var 'tmp6910) (Var 'tmp6909)))
     (Instr 'addq (list (Imm 24) (Var 'tmp6909)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6911)))
     (Instr 'cmpq (list (Var 'tmp6911) (Var 'tmp6909)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 16))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
     (Instr 'addq (list (Reg 'rcx) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Reg 'r12)))
     (Instr 'movq (list (Imm 22) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 24) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (_6908 . Void)
    (vecinit6904 . Integer)
    (vecinit6905 . Integer)
    (_6907 . Void)
    (tmp6913 . Integer)
    (tmp6910 . Integer)
    (tmp6912 . Integer)
    (alloc6903 Vector Integer Integer)
    (tmp6911 . Integer)
    (v6902 Vector Integer Integer)
    (tmp6909 . Integer)
    (_6906 . Void))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 16))
 (list
  (cons
   'block6914
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r11))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'vecinit6905) (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'alloc6903))
      (set (Var 'v6902))
      (set (Var 'v6902) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'v6902))
      (set (Var 'tmp6912) (Reg 'r11))
      (set (Var 'tmp6912) (Var 'tmp6913))
      (set (Reg 'rax) (Var 'tmp6913))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 24) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 5) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rax)))
     (Instr 'addq (list (Reg 'rcx) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6915
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6914))))
  (cons
   'block6916
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6905) (Var 'vecinit6904))
      (set (Var 'vecinit6905) (Var 'vecinit6904))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 24) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6914))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15) (Var 'tmp6910))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Var 'tmp6909) (Reg 'r15))
      (set
       (Var 'vecinit6905)
       (Var 'vecinit6904)
       (Var 'tmp6909)
       (Reg 'r15)
       (Var 'tmp6911))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))
      (set (Var 'vecinit6905) (Var 'vecinit6904) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 20) (Reg 'r12)))
     (Instr 'movq (list (Imm 22) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 24) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6915)
     (Jmp 'block6916))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_2"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (HasType
      (Prim
       'vector
       (list (HasType (Prim 'vector (list (Int 42))) '(Vector Integer))))
      '(Vector (Vector Integer)))
     (Int 0)))
   (Int 0))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (HasType
      (Prim
       'vector
       (list (HasType (Prim 'vector (list (Int 42))) '(Vector Integer))))
      '(Vector (Vector Integer)))
     (Int 0)))
   (Int 0))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (HasType
      (Prim
       'vector
       (list (HasType (Prim 'vector (list (Int 42))) '(Vector Integer))))
      '(Vector (Vector Integer)))
     (Int 0)))
   (Int 0))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (HasType
      (Prim
       'vector
       (list (HasType (Prim 'vector (list (Int 42))) '(Vector Integer))))
      '(Vector (Vector Integer)))
     (Int 0)))
   (Int 0))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (HasType
      (Prim
       'vector
       (list (HasType (Prim 'vector (list (Int 42))) '(Vector Integer))))
      '(Vector (Vector Integer)))
     (Int 0)))
   (Int 0))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (Let
      'vecinit6922
      (Let
       'vecinit6926
       (Int 42)
       (Let
        '_6928
        (If
         (Prim
          '<
          (list
           (Prim '+ (list (GlobalValue 'free_ptr) (Int 16)))
           (GlobalValue 'fromspace_end)))
         (Void)
         (collect 16))
        (Let
         'alloc6925
         (allocate 1 (Vector Integer))
         (Let
          '_6927
          (Prim
           'vector-set!
           (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926)))
          (Var 'alloc6925)))))
      (Let
       '_6924
       (If
        (Prim
         '<
         (list
          (Prim '+ (list (GlobalValue 'free_ptr) (Int 16)))
          (GlobalValue 'fromspace_end)))
        (Void)
        (collect 16))
       (Let
        'alloc6921
        (allocate 1 (Vector (Vector Integer)))
        (Let
         '_6923
         (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922)))
         (Var 'alloc6921)))))
     (Int 0)))
   (Int 0))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-ref
  (list
   (Prim
    'vector-ref
    (list
     (Let
      'vecinit6922
      (Let
       'vecinit6926
       (Int 42)
       (Let
        '_6928
        (If
         (Prim
          '<
          (list
           (Prim '+ (list (GlobalValue 'free_ptr) (Int 16)))
           (GlobalValue 'fromspace_end)))
         (Void)
         (collect 16))
        (Let
         'alloc6925
         (allocate 1 (Vector Integer))
         (Let
          '_6927
          (Prim
           'vector-set!
           (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926)))
          (Var 'alloc6925)))))
      (Let
       '_6924
       (If
        (Prim
         '<
         (list
          (Prim '+ (list (GlobalValue 'free_ptr) (Int 16)))
          (GlobalValue 'fromspace_end)))
        (Void)
        (collect 16))
       (Let
        'alloc6921
        (allocate 1 (Vector (Vector Integer)))
        (Let
         '_6923
         (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922)))
         (Var 'alloc6921)))))
     (Int 0)))
   (Int 0))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'tmp6929
  (Let
   'tmp6930
   (Let
    'vecinit6922
    (Let
     'vecinit6926
     (Int 42)
     (Let
      '_6928
      (If
       (Let
        'tmp6931
        (Let
         'tmp6932
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp6932) (Int 16))))
        (Let
         'tmp6933
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp6931) (Var 'tmp6933)))))
       (Void)
       (collect 16))
      (Let
       'alloc6925
       (allocate 1 (Vector Integer))
       (Let
        '_6927
        (Prim 'vector-set! (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926)))
        (Var 'alloc6925)))))
    (Let
     '_6924
     (If
      (Let
       'tmp6934
       (Let
        'tmp6935
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6935) (Int 16))))
       (Let
        'tmp6936
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6934) (Var 'tmp6936)))))
      (Void)
      (collect 16))
     (Let
      'alloc6921
      (allocate 1 (Vector (Vector Integer)))
      (Let
       '_6923
       (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922)))
       (Var 'alloc6921)))))
   (Prim 'vector-ref (list (Var 'tmp6930) (Int 0))))
  (Prim 'vector-ref (list (Var 'tmp6929) (Int 0)))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'tmp6929
  (Let
   'tmp6930
   (Let
    'vecinit6922
    (Let
     'vecinit6926
     (Int 42)
     (Let
      '_6928
      (If
       (Let
        'tmp6931
        (Let
         'tmp6932
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp6932) (Int 16))))
        (Let
         'tmp6933
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp6931) (Var 'tmp6933)))))
       (Void)
       (collect 16))
      (Let
       'alloc6925
       (allocate 1 (Vector Integer))
       (Let
        '_6927
        (Prim 'vector-set! (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926)))
        (Var 'alloc6925)))))
    (Let
     '_6924
     (If
      (Let
       'tmp6934
       (Let
        'tmp6935
        (GlobalValue 'free_ptr)
        (Prim '+ (list (Var 'tmp6935) (Int 16))))
       (Let
        'tmp6936
        (GlobalValue 'fromspace_end)
        (Prim '< (list (Var 'tmp6934) (Var 'tmp6936)))))
      (Void)
      (collect 16))
     (Let
      'alloc6921
      (allocate 1 (Vector (Vector Integer)))
      (Let
       '_6923
       (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922)))
       (Var 'alloc6921)))))
   (Prim 'vector-ref (list (Var 'tmp6930) (Int 0))))
  (Prim 'vector-ref (list (Var 'tmp6929) (Int 0)))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6926) (Int 42))
    (Seq
     (Assign (Var 'tmp6932) (GlobalValue 'free_ptr))
     (Seq
      (Assign (Var 'tmp6931) (Prim '+ (list (Var 'tmp6932) (Int 16))))
      (Seq
       (Assign (Var 'tmp6933) (GlobalValue 'fromspace_end))
       (IfStmt
        (Prim '< (list (Var 'tmp6931) (Var 'tmp6933)))
        (Goto 'block6941)
        (Goto 'block6942)))))))
  (cons 'block6942 (Seq (collect 16) (Goto 'block6940)))
  (cons 'block6941 (Seq (Assign (Var '_6928) (Void)) (Goto 'block6940)))
  (cons
   'block6940
   (Seq
    (Assign (Var 'alloc6925) (allocate 1 (Vector Integer)))
    (Seq
     (Assign
      (Var '_6927)
      (Prim 'vector-set! (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926))))
     (Seq
      (Assign (Var 'vecinit6922) (Var 'alloc6925))
      (Seq
       (Assign (Var 'tmp6935) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp6934) (Prim '+ (list (Var 'tmp6935) (Int 16))))
        (Seq
         (Assign (Var 'tmp6936) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp6934) (Var 'tmp6936)))
          (Goto 'block6938)
          (Goto 'block6939)))))))))
  (cons 'block6939 (Seq (collect 16) (Goto 'block6937)))
  (cons 'block6938 (Seq (Assign (Var '_6924) (Void)) (Goto 'block6937)))
  (cons
   'block6937
   (Seq
    (Assign (Var 'alloc6921) (allocate 1 (Vector (Vector Integer))))
    (Seq
     (Assign
      (Var '_6923)
      (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922))))
     (Seq
      (Assign (Var 'tmp6930) (Var 'alloc6921))
      (Seq
       (Assign (Var 'tmp6929) (Prim 'vector-ref (list (Var 'tmp6930) (Int 0))))
       (Return (Prim 'vector-ref (list (Var 'tmp6929) (Int 0)))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6926) (Int 42))
    (Seq
     (Assign (Var 'tmp6932) (GlobalValue 'free_ptr))
     (Seq
      (Assign (Var 'tmp6931) (Prim '+ (list (Var 'tmp6932) (Int 16))))
      (Seq
       (Assign (Var 'tmp6933) (GlobalValue 'fromspace_end))
       (IfStmt
        (Prim '< (list (Var 'tmp6931) (Var 'tmp6933)))
        (Goto 'block6941)
        (Goto 'block6942)))))))
  (cons 'block6942 (Seq (collect 16) (Goto 'block6940)))
  (cons 'block6941 (Seq (Assign (Var '_6928) (Void)) (Goto 'block6940)))
  (cons
   'block6940
   (Seq
    (Assign (Var 'alloc6925) (allocate 1 (Vector Integer)))
    (Seq
     (Assign
      (Var '_6927)
      (Prim 'vector-set! (list (Var 'alloc6925) (Int 0) (Var 'vecinit6926))))
     (Seq
      (Assign (Var 'vecinit6922) (Var 'alloc6925))
      (Seq
       (Assign (Var 'tmp6935) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp6934) (Prim '+ (list (Var 'tmp6935) (Int 16))))
        (Seq
         (Assign (Var 'tmp6936) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp6934) (Var 'tmp6936)))
          (Goto 'block6938)
          (Goto 'block6939)))))))))
  (cons 'block6939 (Seq (collect 16) (Goto 'block6937)))
  (cons 'block6938 (Seq (Assign (Var '_6924) (Void)) (Goto 'block6937)))
  (cons
   'block6937
   (Seq
    (Assign (Var 'alloc6921) (allocate 1 (Vector (Vector Integer))))
    (Seq
     (Assign
      (Var '_6923)
      (Prim 'vector-set! (list (Var 'alloc6921) (Int 0) (Var 'vecinit6922))))
     (Seq
      (Assign (Var 'tmp6930) (Var 'alloc6921))
      (Seq
       (Assign (Var 'tmp6929) (Prim 'vector-ref (list (Var 'tmp6930) (Int 0))))
       (Return (Prim 'vector-ref (list (Var 'tmp6929) (Int 0)))))))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))
  (cons
   'block6942
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'block6940
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6939
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6937
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))
  (cons
   'block6942
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'block6940
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6939
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6937
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer)))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer)))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

***************: tuple variable is live during call to collect IMP IMP IMP
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6921)))
     (Instr 'movq (list (Var 'alloc6921) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6922) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6923)))
     (Instr 'movq (list (Var 'alloc6921) (Var 'tmp6930)))
     (Instr 'movq (list (Var 'tmp6930) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Var 'tmp6929)))
     (Instr 'movq (list (Var 'tmp6929) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Var '_6924))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6925)))
     (Instr 'movq (list (Var 'alloc6925) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6926) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6927)))
     (Instr 'movq (list (Var 'alloc6925) (Var 'vecinit6922)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6935)))
     (Instr 'movq (list (Var 'tmp6935) (Var 'tmp6934)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6934)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6936)))
     (Instr 'cmpq (list (Var 'tmp6936) (Var 'tmp6934)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_6928))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Var 'vecinit6926)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6932)))
     (Instr 'movq (list (Var 'tmp6932) (Var 'tmp6931)))
     (Instr 'addq (list (Imm 16) (Var 'tmp6931)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6933)))
     (Instr 'cmpq (list (Var 'tmp6933) (Var 'tmp6931)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'rbx)))
  '(num-root-spills . 1)
  '(stack-space . 16))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r15 0) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Deref 'r15 0)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 16) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 16) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (alloc6925 Vector Integer)
    (tmp6929 Vector Integer)
    (_6928 . Void)
    (vecinit6926 . Integer)
    (tmp6935 . Integer)
    (tmp6932 . Integer)
    (_6927 . Void)
    (alloc6921 Vector (Vector Integer))
    (tmp6930 Vector (Vector Integer))
    (_6923 . Void)
    (_6924 . Void)
    (vecinit6922 Vector Integer)
    (tmp6934 . Integer)
    (tmp6931 . Integer)
    (tmp6936 . Integer)
    (tmp6933 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'rbx)))
  '(num-root-spills . 1)
  '(stack-space . 16))
 (list
  (cons
   'block6937
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922) (Reg 'r11))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'vecinit6922) (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'alloc6921))
      (set (Var 'tmp6930))
      (set (Reg 'r11))
      (set (Var 'tmp6929))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 131) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r15 0) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 8) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block6939
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6922) (Reg 'rdi))
      (set (Var 'vecinit6922) (Reg 'rsi) (Reg 'rdi))
      (set (Var 'vecinit6922))
      (set (Var 'vecinit6922))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6937))))
  (cons
   'block6938
   (Block
    (list (list 'live-sets (set (Var 'vecinit6922)) (set (Var 'vecinit6922))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6937))))
  (cons
   'block6940
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'r11))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'alloc6925) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15) (Var 'tmp6935))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'tmp6934) (Var 'vecinit6922) (Var 'tmp6936) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))
      (set (Var 'vecinit6922) (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 16) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 3) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Deref 'r15 0)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 16) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6938)
     (Jmp 'block6939))))
  (cons
   'block6942
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'rsi) (Reg 'r15) (Reg 'rdi))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 16) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6940))))
  (cons
   'block6941
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6940))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'tmp6932) (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'tmp6933) (Var 'vecinit6926) (Var 'tmp6931) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))
      (set (Var 'vecinit6926) (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 42) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 16) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block6941)
     (Jmp 'block6942))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_3"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Bool #t) (Int 42)))
   '(Vector Integer Boolean Integer))
  (If (Prim 'vector-ref (list (Var 'v) (Int 1))) (Int 42) (Int 5))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Bool #t) (Int 42)))
   '(Vector Integer Boolean Integer))
  (If (Prim 'vector-ref (list (Var 'v) (Int 1))) (Int 42) (Int 5))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Bool #t) (Int 42)))
   '(Vector Integer Boolean Integer))
  (If (Prim 'vector-ref (list (Var 'v) (Int 1))) (Int 42) (Int 5))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6947
  (HasType
   (Prim 'vector (list (Int 1) (Bool #t) (Int 42)))
   '(Vector Integer Boolean Integer))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6947
  (HasType
   (Prim 'vector (list (Int 1) (Bool #t) (Int 42)))
   '(Vector Integer Boolean Integer))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6947
  (Let
   'vecinit6949
   (Int 1)
   (Let
    'vecinit6950
    (Bool #t)
    (Let
     'vecinit6951
     (Int 42)
     (Let
      '_6955
      (If
       (Prim
        '<
        (list
         (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
         (GlobalValue 'fromspace_end)))
       (Void)
       (collect 32))
      (Let
       'alloc6948
       (allocate 3 (Vector Integer Boolean Integer))
       (Let
        '_6954
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949)))
        (Let
         '_6953
         (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950)))
         (Let
          '_6952
          (Prim
           'vector-set!
           (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951)))
          (Var 'alloc6948)))))))))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6947
  (Let
   'vecinit6949
   (Int 1)
   (Let
    'vecinit6950
    (Bool #t)
    (Let
     'vecinit6951
     (Int 42)
     (Let
      '_6955
      (If
       (Prim
        '<
        (list
         (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
         (GlobalValue 'fromspace_end)))
       (Void)
       (collect 32))
      (Let
       'alloc6948
       (allocate 3 (Vector Integer Boolean Integer))
       (Let
        '_6954
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949)))
        (Let
         '_6953
         (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950)))
         (Let
          '_6952
          (Prim
           'vector-set!
           (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951)))
          (Var 'alloc6948)))))))))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v6947
  (Let
   'vecinit6949
   (Int 1)
   (Let
    'vecinit6950
    (Bool #t)
    (Let
     'vecinit6951
     (Int 42)
     (Let
      '_6955
      (If
       (Let
        'tmp6956
        (Let
         'tmp6957
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp6957) (Int 32))))
        (Let
         'tmp6958
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp6956) (Var 'tmp6958)))))
       (Void)
       (collect 32))
      (Let
       'alloc6948
       (allocate 3 (Vector Integer Boolean Integer))
       (Let
        '_6954
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949)))
        (Let
         '_6953
         (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950)))
         (Let
          '_6952
          (Prim
           'vector-set!
           (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951)))
          (Var 'alloc6948)))))))))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v6947
  (Let
   'vecinit6949
   (Int 1)
   (Let
    'vecinit6950
    (Bool #t)
    (Let
     'vecinit6951
     (Int 42)
     (Let
      '_6955
      (If
       (Let
        'tmp6956
        (Let
         'tmp6957
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp6957) (Int 32))))
        (Let
         'tmp6958
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp6956) (Var 'tmp6958)))))
       (Void)
       (collect 32))
      (Let
       'alloc6948
       (allocate 3 (Vector Integer Boolean Integer))
       (Let
        '_6954
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949)))
        (Let
         '_6953
         (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950)))
         (Let
          '_6952
          (Prim
           'vector-set!
           (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951)))
          (Var 'alloc6948)))))))))
  (If (Prim 'vector-ref (list (Var 'v6947) (Int 1))) (Int 42) (Int 5))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6949) (Int 1))
    (Seq
     (Assign (Var 'vecinit6950) (Bool #t))
     (Seq
      (Assign (Var 'vecinit6951) (Int 42))
      (Seq
       (Assign (Var 'tmp6957) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp6956) (Prim '+ (list (Var 'tmp6957) (Int 32))))
        (Seq
         (Assign (Var 'tmp6958) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp6956) (Var 'tmp6958)))
          (Goto 'block6963)
          (Goto 'block6964)))))))))
  (cons 'block6964 (Seq (collect 32) (Goto 'block6962)))
  (cons 'block6963 (Seq (Assign (Var '_6955) (Void)) (Goto 'block6962)))
  (cons
   'block6962
   (Seq
    (Assign (Var 'alloc6948) (allocate 3 (Vector Integer Boolean Integer)))
    (Seq
     (Assign
      (Var '_6954)
      (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949))))
     (Seq
      (Assign
       (Var '_6953)
       (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950))))
      (Seq
       (Assign
        (Var '_6952)
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951))))
       (Seq
        (Assign (Var 'v6947) (Var 'alloc6948))
        (Seq
         (Assign (Var 'tmp6959) (Prim 'vector-ref (list (Var 'v6947) (Int 1))))
         (IfStmt
          (Prim 'eq? (list (Var 'tmp6959) (Bool #t)))
          (Goto 'block6960)
          (Goto 'block6961)))))))))
  (cons 'block6961 (Return (Int 5)))
  (cons 'block6960 (Return (Int 42)))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6949) (Int 1))
    (Seq
     (Assign (Var 'vecinit6950) (Bool #t))
     (Seq
      (Assign (Var 'vecinit6951) (Int 42))
      (Seq
       (Assign (Var 'tmp6957) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp6956) (Prim '+ (list (Var 'tmp6957) (Int 32))))
        (Seq
         (Assign (Var 'tmp6958) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp6956) (Var 'tmp6958)))
          (Goto 'block6963)
          (Goto 'block6964)))))))))
  (cons 'block6964 (Seq (collect 32) (Goto 'block6962)))
  (cons 'block6963 (Seq (Assign (Var '_6955) (Void)) (Goto 'block6962)))
  (cons
   'block6962
   (Seq
    (Assign (Var 'alloc6948) (allocate 3 (Vector Integer Boolean Integer)))
    (Seq
     (Assign
      (Var '_6954)
      (Prim 'vector-set! (list (Var 'alloc6948) (Int 0) (Var 'vecinit6949))))
     (Seq
      (Assign
       (Var '_6953)
       (Prim 'vector-set! (list (Var 'alloc6948) (Int 1) (Var 'vecinit6950))))
      (Seq
       (Assign
        (Var '_6952)
        (Prim 'vector-set! (list (Var 'alloc6948) (Int 2) (Var 'vecinit6951))))
       (Seq
        (Assign (Var 'v6947) (Var 'alloc6948))
        (Seq
         (Assign (Var 'tmp6959) (Prim 'vector-ref (list (Var 'v6947) (Int 1))))
         (IfStmt
          (Prim 'eq? (list (Var 'tmp6959) (Bool #t)))
          (Goto 'block6960)
          (Goto 'block6961)))))))))
  (cons 'block6961 (Return (Int 5)))
  (cons 'block6960 (Return (Int 42)))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))
  (cons
   'block6964
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'block6962
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6961
   (Block
    '()
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6960
   (Block
    '()
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))
  (cons
   'block6964
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'block6962
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6961
   (Block
    '()
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6960
   (Block
    '()
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void)))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void)))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6948)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6949) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6954)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6950) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6953)))
     (Instr 'movq (list (Var 'alloc6948) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6951) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6952)))
     (Instr 'movq (list (Var 'alloc6948) (Var 'v6947)))
     (Instr 'movq (list (Var 'v6947) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Var 'tmp6959)))
     (Instr 'cmpq (list (Imm 1) (Var 'tmp6959)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Var '_6955))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6949)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6950)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit6951)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6957)))
     (Instr 'movq (list (Var 'tmp6957) (Var 'tmp6956)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6956)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6958)))
     (Instr 'cmpq (list (Var 'tmp6958) (Var 'tmp6956)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 32))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rcx)))
     (Instr 'cmpq (list (Imm 1) (Reg 'rcx)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r13)))
     (Instr 'movq (list (Imm 1) (Reg 'r12)))
     (Instr 'movq (list (Imm 42) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (tmp6957 . Integer)
    (vecinit6950 . Boolean)
    (vecinit6949 . Integer)
    (_6953 . Void)
    (alloc6948 Vector Integer Boolean Integer)
    (v6947 Vector Integer Boolean Integer)
    (_6955 . Void)
    (tmp6956 . Integer)
    (tmp6958 . Integer)
    (vecinit6951 . Integer)
    (_6954 . Void)
    (tmp6959 . Boolean)
    (_6952 . Void))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 32))
 (list
  (cons
   'block6960
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 42) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6961
   (Block
    (list (list 'live-sets (set) (set)))
    (list (Instr 'movq (list (Imm 5) (Reg 'rax))) (Jmp 'conclusion))))
  (cons
   'block6962
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r11))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set
       (Var 'alloc6948)
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951) (Var 'vecinit6950))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948) (Var 'vecinit6951))
      (set (Var 'alloc6948))
      (set (Var 'alloc6948))
      (set (Var 'v6947))
      (set (Reg 'r11))
      (set (Var 'tmp6959))
      (set)
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rcx)))
     (Instr 'cmpq (list (Imm 1) (Reg 'rcx)))
     (JmpIf 'e 'block6960)
     (Jmp 'block6961))))
  (cons
   'block6964
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'rdi))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Reg 'rsi)
       (Var 'vecinit6950)
       (Reg 'rdi))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block6962))))
  (cons
   'block6963
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block6962))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6949) (Reg 'r15))
      (set (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6957)
       (Var 'vecinit6950)
       (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'tmp6958)
       (Var 'vecinit6950)
       (Reg 'r15)
       (Var 'tmp6956))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set (Var 'vecinit6951) (Var 'vecinit6949) (Var 'vecinit6950) (Reg 'r15))
      (set
       (Var 'vecinit6951)
       (Var 'vecinit6949)
       (Var 'vecinit6950)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r13)))
     (Instr 'movq (list (Imm 1) (Reg 'r12)))
     (Instr 'movq (list (Imm 42) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block6963)
     (Jmp 'block6964))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_4"

expected-result:
42


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Prim
  'vector-length
  (list
   (HasType
    (Prim
     'vector
     (list
      (Int 1)
      (Bool #t)
      (HasType
       (Prim 'vector (list (Int 4) (Int 5) (Int 6)))
       '(Vector Integer Integer Integer))
      (Prim
       'vector-length
       (list
        (HasType
         (Prim 'vector (list (Int 1) (Int 2) (Int 3)))
         '(Vector Integer Integer Integer))))))
    '(Vector Integer Boolean (Vector Integer Integer Integer) Integer)))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-length
  (list
   (HasType
    (Prim
     'vector
     (list
      (Int 1)
      (Bool #t)
      (HasType
       (Prim 'vector (list (Int 4) (Int 5) (Int 6)))
       '(Vector Integer Integer Integer))
      (Prim
       'vector-length
       (list
        (HasType
         (Prim 'vector (list (Int 1) (Int 2) (Int 3)))
         '(Vector Integer Integer Integer))))))
    '(Vector Integer Boolean (Vector Integer Integer Integer) Integer)))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-length
  (list
   (HasType
    (Prim
     'vector
     (list
      (Int 1)
      (Bool #t)
      (HasType
       (Prim 'vector (list (Int 4) (Int 5) (Int 6)))
       '(Vector Integer Integer Integer))
      (Prim
       'vector-length
       (list
        (HasType
         (Prim 'vector (list (Int 1) (Int 2) (Int 3)))
         '(Vector Integer Integer Integer))))))
    '(Vector Integer Boolean (Vector Integer Integer Integer) Integer)))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-length
  (list
   (HasType
    (Prim
     'vector
     (list
      (Int 1)
      (Bool #t)
      (HasType
       (Prim 'vector (list (Int 4) (Int 5) (Int 6)))
       '(Vector Integer Integer Integer))
      (Prim
       'vector-length
       (list
        (HasType
         (Prim 'vector (list (Int 1) (Int 2) (Int 3)))
         '(Vector Integer Integer Integer))))))
    '(Vector Integer Boolean (Vector Integer Integer Integer) Integer)))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-length
  (list
   (HasType
    (Prim
     'vector
     (list
      (Int 1)
      (Bool #t)
      (HasType
       (Prim 'vector (list (Int 4) (Int 5) (Int 6)))
       '(Vector Integer Integer Integer))
      (Prim
       'vector-length
       (list
        (HasType
         (Prim 'vector (list (Int 1) (Int 2) (Int 3)))
         '(Vector Integer Integer Integer))))))
    '(Vector Integer Boolean (Vector Integer Integer Integer) Integer)))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Prim
  'vector-length
  (list
   (Let
    'vecinit6970
    (Int 1)
    (Let
     'vecinit6971
     (Bool #t)
     (Let
      'vecinit6972
      (Let
       'vecinit6988
       (Int 4)
       (Let
        'vecinit6989
        (Int 5)
        (Let
         'vecinit6990
         (Int 6)
         (Let
          '_6994
          (If
           (Prim
            '<
            (list
             (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
             (GlobalValue 'fromspace_end)))
           (Void)
           (collect 32))
          (Let
           'alloc6987
           (allocate 3 (Vector Integer Integer Integer))
           (Let
            '_6993
            (Prim
             'vector-set!
             (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988)))
            (Let
             '_6992
             (Prim
              'vector-set!
              (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989)))
             (Let
              '_6991
              (Prim
               'vector-set!
               (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990)))
              (Var 'alloc6987)))))))))
      (Let
       'vecinit6973
       (Prim
        'vector-length
        (list
         (Let
          'vecinit6980
          (Int 1)
          (Let
           'vecinit6981
           (Int 2)
           (Let
            'vecinit6982
            (Int 3)
            (Let
             '_6986
             (If
              (Prim
               '<
               (list
                (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
                (GlobalValue 'fromspace_end)))
              (Void)
              (collect 32))
             (Let
              'alloc6979
              (allocate 3 (Vector Integer Integer Integer))
              (Let
               '_6985
               (Prim
                'vector-set!
                (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980)))
               (Let
                '_6984
                (Prim
                 'vector-set!
                 (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981)))
                (Let
                 '_6983
                 (Prim
                  'vector-set!
                  (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982)))
                 (Var 'alloc6979)))))))))))
       (Let
        '_6978
        (If
         (Prim
          '<
          (list
           (Prim '+ (list (GlobalValue 'free_ptr) (Int 40)))
           (GlobalValue 'fromspace_end)))
         (Void)
         (collect 40))
        (Let
         'alloc6969
         (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))
         (Let
          '_6977
          (Prim
           'vector-set!
           (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970)))
          (Let
           '_6976
           (Prim
            'vector-set!
            (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971)))
           (Let
            '_6975
            (Prim
             'vector-set!
             (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972)))
            (Let
             '_6974
             (Prim
              'vector-set!
              (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973)))
             (Var 'alloc6969))))))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Prim
  'vector-length
  (list
   (Let
    'vecinit6970
    (Int 1)
    (Let
     'vecinit6971
     (Bool #t)
     (Let
      'vecinit6972
      (Let
       'vecinit6988
       (Int 4)
       (Let
        'vecinit6989
        (Int 5)
        (Let
         'vecinit6990
         (Int 6)
         (Let
          '_6994
          (If
           (Prim
            '<
            (list
             (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
             (GlobalValue 'fromspace_end)))
           (Void)
           (collect 32))
          (Let
           'alloc6987
           (allocate 3 (Vector Integer Integer Integer))
           (Let
            '_6993
            (Prim
             'vector-set!
             (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988)))
            (Let
             '_6992
             (Prim
              'vector-set!
              (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989)))
             (Let
              '_6991
              (Prim
               'vector-set!
               (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990)))
              (Var 'alloc6987)))))))))
      (Let
       'vecinit6973
       (Prim
        'vector-length
        (list
         (Let
          'vecinit6980
          (Int 1)
          (Let
           'vecinit6981
           (Int 2)
           (Let
            'vecinit6982
            (Int 3)
            (Let
             '_6986
             (If
              (Prim
               '<
               (list
                (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
                (GlobalValue 'fromspace_end)))
              (Void)
              (collect 32))
             (Let
              'alloc6979
              (allocate 3 (Vector Integer Integer Integer))
              (Let
               '_6985
               (Prim
                'vector-set!
                (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980)))
               (Let
                '_6984
                (Prim
                 'vector-set!
                 (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981)))
                (Let
                 '_6983
                 (Prim
                  'vector-set!
                  (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982)))
                 (Var 'alloc6979)))))))))))
       (Let
        '_6978
        (If
         (Prim
          '<
          (list
           (Prim '+ (list (GlobalValue 'free_ptr) (Int 40)))
           (GlobalValue 'fromspace_end)))
         (Void)
         (collect 40))
        (Let
         'alloc6969
         (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))
         (Let
          '_6977
          (Prim
           'vector-set!
           (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970)))
          (Let
           '_6976
           (Prim
            'vector-set!
            (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971)))
           (Let
            '_6975
            (Prim
             'vector-set!
             (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972)))
            (Let
             '_6974
             (Prim
              'vector-set!
              (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973)))
             (Var 'alloc6969))))))))))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'tmp6995
  (Let
   'vecinit6970
   (Int 1)
   (Let
    'vecinit6971
    (Bool #t)
    (Let
     'vecinit6972
     (Let
      'vecinit6988
      (Int 4)
      (Let
       'vecinit6989
       (Int 5)
       (Let
        'vecinit6990
        (Int 6)
        (Let
         '_6994
         (If
          (Let
           'tmp6996
           (Let
            'tmp6997
            (GlobalValue 'free_ptr)
            (Prim '+ (list (Var 'tmp6997) (Int 32))))
           (Let
            'tmp6998
            (GlobalValue 'fromspace_end)
            (Prim '< (list (Var 'tmp6996) (Var 'tmp6998)))))
          (Void)
          (collect 32))
         (Let
          'alloc6987
          (allocate 3 (Vector Integer Integer Integer))
          (Let
           '_6993
           (Prim
            'vector-set!
            (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988)))
           (Let
            '_6992
            (Prim
             'vector-set!
             (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989)))
            (Let
             '_6991
             (Prim
              'vector-set!
              (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990)))
             (Var 'alloc6987)))))))))
     (Let
      'vecinit6973
      (Let
       'tmp6999
       (Let
        'vecinit6980
        (Int 1)
        (Let
         'vecinit6981
         (Int 2)
         (Let
          'vecinit6982
          (Int 3)
          (Let
           '_6986
           (If
            (Let
             'tmp7000
             (Let
              'tmp7001
              (GlobalValue 'free_ptr)
              (Prim '+ (list (Var 'tmp7001) (Int 32))))
             (Let
              'tmp7002
              (GlobalValue 'fromspace_end)
              (Prim '< (list (Var 'tmp7000) (Var 'tmp7002)))))
            (Void)
            (collect 32))
           (Let
            'alloc6979
            (allocate 3 (Vector Integer Integer Integer))
            (Let
             '_6985
             (Prim
              'vector-set!
              (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980)))
             (Let
              '_6984
              (Prim
               'vector-set!
               (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981)))
              (Let
               '_6983
               (Prim
                'vector-set!
                (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982)))
               (Var 'alloc6979)))))))))
       (Prim 'vector-length (list (Var 'tmp6999))))
      (Let
       '_6978
       (If
        (Let
         'tmp7003
         (Let
          'tmp7004
          (GlobalValue 'free_ptr)
          (Prim '+ (list (Var 'tmp7004) (Int 40))))
         (Let
          'tmp7005
          (GlobalValue 'fromspace_end)
          (Prim '< (list (Var 'tmp7003) (Var 'tmp7005)))))
        (Void)
        (collect 40))
       (Let
        'alloc6969
        (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))
        (Let
         '_6977
         (Prim 'vector-set! (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970)))
         (Let
          '_6976
          (Prim
           'vector-set!
           (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971)))
          (Let
           '_6975
           (Prim
            'vector-set!
            (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972)))
           (Let
            '_6974
            (Prim
             'vector-set!
             (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973)))
            (Var 'alloc6969)))))))))))
  (Prim 'vector-length (list (Var 'tmp6995)))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'tmp6995
  (Let
   'vecinit6970
   (Int 1)
   (Let
    'vecinit6971
    (Bool #t)
    (Let
     'vecinit6972
     (Let
      'vecinit6988
      (Int 4)
      (Let
       'vecinit6989
       (Int 5)
       (Let
        'vecinit6990
        (Int 6)
        (Let
         '_6994
         (If
          (Let
           'tmp6996
           (Let
            'tmp6997
            (GlobalValue 'free_ptr)
            (Prim '+ (list (Var 'tmp6997) (Int 32))))
           (Let
            'tmp6998
            (GlobalValue 'fromspace_end)
            (Prim '< (list (Var 'tmp6996) (Var 'tmp6998)))))
          (Void)
          (collect 32))
         (Let
          'alloc6987
          (allocate 3 (Vector Integer Integer Integer))
          (Let
           '_6993
           (Prim
            'vector-set!
            (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988)))
           (Let
            '_6992
            (Prim
             'vector-set!
             (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989)))
            (Let
             '_6991
             (Prim
              'vector-set!
              (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990)))
             (Var 'alloc6987)))))))))
     (Let
      'vecinit6973
      (Let
       'tmp6999
       (Let
        'vecinit6980
        (Int 1)
        (Let
         'vecinit6981
         (Int 2)
         (Let
          'vecinit6982
          (Int 3)
          (Let
           '_6986
           (If
            (Let
             'tmp7000
             (Let
              'tmp7001
              (GlobalValue 'free_ptr)
              (Prim '+ (list (Var 'tmp7001) (Int 32))))
             (Let
              'tmp7002
              (GlobalValue 'fromspace_end)
              (Prim '< (list (Var 'tmp7000) (Var 'tmp7002)))))
            (Void)
            (collect 32))
           (Let
            'alloc6979
            (allocate 3 (Vector Integer Integer Integer))
            (Let
             '_6985
             (Prim
              'vector-set!
              (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980)))
             (Let
              '_6984
              (Prim
               'vector-set!
               (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981)))
              (Let
               '_6983
               (Prim
                'vector-set!
                (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982)))
               (Var 'alloc6979)))))))))
       (Prim 'vector-length (list (Var 'tmp6999))))
      (Let
       '_6978
       (If
        (Let
         'tmp7003
         (Let
          'tmp7004
          (GlobalValue 'free_ptr)
          (Prim '+ (list (Var 'tmp7004) (Int 40))))
         (Let
          'tmp7005
          (GlobalValue 'fromspace_end)
          (Prim '< (list (Var 'tmp7003) (Var 'tmp7005)))))
        (Void)
        (collect 40))
       (Let
        'alloc6969
        (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer))
        (Let
         '_6977
         (Prim 'vector-set! (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970)))
         (Let
          '_6976
          (Prim
           'vector-set!
           (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971)))
          (Let
           '_6975
           (Prim
            'vector-set!
            (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972)))
           (Let
            '_6974
            (Prim
             'vector-set!
             (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973)))
            (Var 'alloc6969)))))))))))
  (Prim 'vector-length (list (Var 'tmp6995)))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6970) (Int 1))
    (Seq
     (Assign (Var 'vecinit6971) (Bool #t))
     (Seq
      (Assign (Var 'vecinit6988) (Int 4))
      (Seq
       (Assign (Var 'vecinit6989) (Int 5))
       (Seq
        (Assign (Var 'vecinit6990) (Int 6))
        (Seq
         (Assign (Var 'tmp6997) (GlobalValue 'free_ptr))
         (Seq
          (Assign (Var 'tmp6996) (Prim '+ (list (Var 'tmp6997) (Int 32))))
          (Seq
           (Assign (Var 'tmp6998) (GlobalValue 'fromspace_end))
           (IfStmt
            (Prim '< (list (Var 'tmp6996) (Var 'tmp6998)))
            (Goto 'block7013)
            (Goto 'block7014)))))))))))
  (cons 'block7014 (Seq (collect 32) (Goto 'block7012)))
  (cons 'block7013 (Seq (Assign (Var '_6994) (Void)) (Goto 'block7012)))
  (cons
   'block7012
   (Seq
    (Assign (Var 'alloc6987) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_6993)
      (Prim 'vector-set! (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988))))
     (Seq
      (Assign
       (Var '_6992)
       (Prim 'vector-set! (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989))))
      (Seq
       (Assign
        (Var '_6991)
        (Prim 'vector-set! (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990))))
       (Seq
        (Assign (Var 'vecinit6972) (Var 'alloc6987))
        (Seq
         (Assign (Var 'vecinit6980) (Int 1))
         (Seq
          (Assign (Var 'vecinit6981) (Int 2))
          (Seq
           (Assign (Var 'vecinit6982) (Int 3))
           (Seq
            (Assign (Var 'tmp7001) (GlobalValue 'free_ptr))
            (Seq
             (Assign (Var 'tmp7000) (Prim '+ (list (Var 'tmp7001) (Int 32))))
             (Seq
              (Assign (Var 'tmp7002) (GlobalValue 'fromspace_end))
              (IfStmt
               (Prim '< (list (Var 'tmp7000) (Var 'tmp7002)))
               (Goto 'block7010)
               (Goto 'block7011))))))))))))))
  (cons 'block7011 (Seq (collect 32) (Goto 'block7009)))
  (cons 'block7010 (Seq (Assign (Var '_6986) (Void)) (Goto 'block7009)))
  (cons
   'block7009
   (Seq
    (Assign (Var 'alloc6979) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_6985)
      (Prim 'vector-set! (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980))))
     (Seq
      (Assign
       (Var '_6984)
       (Prim 'vector-set! (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981))))
      (Seq
       (Assign
        (Var '_6983)
        (Prim 'vector-set! (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982))))
       (Seq
        (Assign (Var 'tmp6999) (Var 'alloc6979))
        (Seq
         (Assign
          (Var 'vecinit6973)
          (Prim 'vector-length (list (Var 'tmp6999))))
         (Seq
          (Assign (Var 'tmp7004) (GlobalValue 'free_ptr))
          (Seq
           (Assign (Var 'tmp7003) (Prim '+ (list (Var 'tmp7004) (Int 40))))
           (Seq
            (Assign (Var 'tmp7005) (GlobalValue 'fromspace_end))
            (IfStmt
             (Prim '< (list (Var 'tmp7003) (Var 'tmp7005)))
             (Goto 'block7007)
             (Goto 'block7008))))))))))))
  (cons 'block7008 (Seq (collect 40) (Goto 'block7006)))
  (cons 'block7007 (Seq (Assign (Var '_6978) (Void)) (Goto 'block7006)))
  (cons
   'block7006
   (Seq
    (Assign
     (Var 'alloc6969)
     (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer)))
    (Seq
     (Assign
      (Var '_6977)
      (Prim 'vector-set! (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970))))
     (Seq
      (Assign
       (Var '_6976)
       (Prim 'vector-set! (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971))))
      (Seq
       (Assign
        (Var '_6975)
        (Prim 'vector-set! (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972))))
       (Seq
        (Assign
         (Var '_6974)
         (Prim 'vector-set! (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973))))
        (Seq
         (Assign (Var 'tmp6995) (Var 'alloc6969))
         (Return (Prim 'vector-length (list (Var 'tmp6995)))))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit6970) (Int 1))
    (Seq
     (Assign (Var 'vecinit6971) (Bool #t))
     (Seq
      (Assign (Var 'vecinit6988) (Int 4))
      (Seq
       (Assign (Var 'vecinit6989) (Int 5))
       (Seq
        (Assign (Var 'vecinit6990) (Int 6))
        (Seq
         (Assign (Var 'tmp6997) (GlobalValue 'free_ptr))
         (Seq
          (Assign (Var 'tmp6996) (Prim '+ (list (Var 'tmp6997) (Int 32))))
          (Seq
           (Assign (Var 'tmp6998) (GlobalValue 'fromspace_end))
           (IfStmt
            (Prim '< (list (Var 'tmp6996) (Var 'tmp6998)))
            (Goto 'block7013)
            (Goto 'block7014)))))))))))
  (cons 'block7014 (Seq (collect 32) (Goto 'block7012)))
  (cons 'block7013 (Seq (Assign (Var '_6994) (Void)) (Goto 'block7012)))
  (cons
   'block7012
   (Seq
    (Assign (Var 'alloc6987) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_6993)
      (Prim 'vector-set! (list (Var 'alloc6987) (Int 0) (Var 'vecinit6988))))
     (Seq
      (Assign
       (Var '_6992)
       (Prim 'vector-set! (list (Var 'alloc6987) (Int 1) (Var 'vecinit6989))))
      (Seq
       (Assign
        (Var '_6991)
        (Prim 'vector-set! (list (Var 'alloc6987) (Int 2) (Var 'vecinit6990))))
       (Seq
        (Assign (Var 'vecinit6972) (Var 'alloc6987))
        (Seq
         (Assign (Var 'vecinit6980) (Int 1))
         (Seq
          (Assign (Var 'vecinit6981) (Int 2))
          (Seq
           (Assign (Var 'vecinit6982) (Int 3))
           (Seq
            (Assign (Var 'tmp7001) (GlobalValue 'free_ptr))
            (Seq
             (Assign (Var 'tmp7000) (Prim '+ (list (Var 'tmp7001) (Int 32))))
             (Seq
              (Assign (Var 'tmp7002) (GlobalValue 'fromspace_end))
              (IfStmt
               (Prim '< (list (Var 'tmp7000) (Var 'tmp7002)))
               (Goto 'block7010)
               (Goto 'block7011))))))))))))))
  (cons 'block7011 (Seq (collect 32) (Goto 'block7009)))
  (cons 'block7010 (Seq (Assign (Var '_6986) (Void)) (Goto 'block7009)))
  (cons
   'block7009
   (Seq
    (Assign (Var 'alloc6979) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_6985)
      (Prim 'vector-set! (list (Var 'alloc6979) (Int 0) (Var 'vecinit6980))))
     (Seq
      (Assign
       (Var '_6984)
       (Prim 'vector-set! (list (Var 'alloc6979) (Int 1) (Var 'vecinit6981))))
      (Seq
       (Assign
        (Var '_6983)
        (Prim 'vector-set! (list (Var 'alloc6979) (Int 2) (Var 'vecinit6982))))
       (Seq
        (Assign (Var 'tmp6999) (Var 'alloc6979))
        (Seq
         (Assign
          (Var 'vecinit6973)
          (Prim 'vector-length (list (Var 'tmp6999))))
         (Seq
          (Assign (Var 'tmp7004) (GlobalValue 'free_ptr))
          (Seq
           (Assign (Var 'tmp7003) (Prim '+ (list (Var 'tmp7004) (Int 40))))
           (Seq
            (Assign (Var 'tmp7005) (GlobalValue 'fromspace_end))
            (IfStmt
             (Prim '< (list (Var 'tmp7003) (Var 'tmp7005)))
             (Goto 'block7007)
             (Goto 'block7008))))))))))))
  (cons 'block7008 (Seq (collect 40) (Goto 'block7006)))
  (cons 'block7007 (Seq (Assign (Var '_6978) (Void)) (Goto 'block7006)))
  (cons
   'block7006
   (Seq
    (Assign
     (Var 'alloc6969)
     (allocate 4 (Vector Integer Boolean (Vector Integer Integer Integer) Integer)))
    (Seq
     (Assign
      (Var '_6977)
      (Prim 'vector-set! (list (Var 'alloc6969) (Int 0) (Var 'vecinit6970))))
     (Seq
      (Assign
       (Var '_6976)
       (Prim 'vector-set! (list (Var 'alloc6969) (Int 1) (Var 'vecinit6971))))
      (Seq
       (Assign
        (Var '_6975)
        (Prim 'vector-set! (list (Var 'alloc6969) (Int 2) (Var 'vecinit6972))))
       (Seq
        (Assign
         (Var '_6974)
         (Prim 'vector-set! (list (Var 'alloc6969) (Int 3) (Var 'vecinit6973))))
        (Seq
         (Assign (Var 'tmp6995) (Var 'alloc6969))
         (Return (Prim 'vector-length (list (Var 'tmp6995)))))))))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))
  (cons
   'block7014
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'block7012
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7011
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7009
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7008
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7006
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))
  (cons
   'block7014
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'block7012
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7011
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7009
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7008
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7006
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer)))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer)))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: build interference graph @ utilities.rkt:2027

***************: tuple variable is live during call to collect IMP IMP IMP
***************: tuple variable is live during call to collect IMP IMP IMP
pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6969)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6970) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6977)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6971) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6976)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6972) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6975)))
     (Instr 'movq (list (Var 'alloc6969) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6973) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Var '_6974)))
     (Instr 'movq (list (Var 'alloc6969) (Var 'tmp6995)))
     (Instr 'movq (list (Var 'tmp6995) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Var '_6978))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6979)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6980) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6985)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6981) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6984)))
     (Instr 'movq (list (Var 'alloc6979) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6982) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6983)))
     (Instr 'movq (list (Var 'alloc6979) (Var 'tmp6999)))
     (Instr 'movq (list (Var 'tmp6999) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Var 'vecinit6973)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7004)))
     (Instr 'movq (list (Var 'tmp7004) (Var 'tmp7003)))
     (Instr 'addq (list (Imm 40) (Var 'tmp7003)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7005)))
     (Instr 'cmpq (list (Var 'tmp7005) (Var 'tmp7003)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Var '_6986))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc6987)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6988) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_6993)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6989) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_6992)))
     (Instr 'movq (list (Var 'alloc6987) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit6990) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_6991)))
     (Instr 'movq (list (Var 'alloc6987) (Var 'vecinit6972)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6980)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit6981)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit6982)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7001)))
     (Instr 'movq (list (Var 'tmp7001) (Var 'tmp7000)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7000)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7002)))
     (Instr 'cmpq (list (Var 'tmp7002) (Var 'tmp7000)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Var '_6994))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit6970)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit6971)))
     (Instr 'movq (list (Imm 4) (Var 'vecinit6988)))
     (Instr 'movq (list (Imm 5) (Var 'vecinit6989)))
     (Instr 'movq (list (Imm 6) (Var 'vecinit6990)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp6997)))
     (Instr 'movq (list (Var 'tmp6997) (Var 'tmp6996)))
     (Instr 'addq (list (Imm 32) (Var 'tmp6996)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp6998)))
     (Instr 'cmpq (list (Var 'tmp6998) (Var 'tmp6996)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r14) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 1)
  '(stack-space . 48))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r14) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'rbp -40) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r15 0) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 40) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Deref 'r15 0)))
     (Instr 'movq (list (Imm 1) (Reg 'r13)))
     (Instr 'movq (list (Imm 2) (Reg 'r12)))
     (Instr 'movq (list (Imm 3) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 32) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r14)))
     (Instr 'movq (list (Imm 1) (Deref 'rbp -40)))
     (Instr 'movq (list (Imm 4) (Reg 'r13)))
     (Instr 'movq (list (Imm 5) (Reg 'r12)))
     (Instr 'movq (list (Imm 6) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 32) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (_6975 . Void)
    (_6992 . Void)
    (alloc6979 Vector Integer Integer Integer)
    (tmp6998 . Integer)
    (_6986 . Void)
    (vecinit6971 . Boolean)
    (vecinit6988 . Integer)
    (vecinit6982 . Integer)
    (tmp6997 . Integer)
    (_6976 . Void)
    (_6993 . Void)
    (_6983 . Void)
    (tmp7000 . Integer)
    (tmp7002 . Integer)
    (vecinit6970 . Integer)
    (tmp6995 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (vecinit6981 . Integer)
    (_6977 . Void)
    (tmp7003 . Integer)
    (_6984 . Void)
    (tmp7001 . Integer)
    (vecinit6973 . Integer)
    (alloc6969 Vector Integer Boolean (Vector Integer Integer Integer) Integer)
    (alloc6987 Vector Integer Integer Integer)
    (vecinit6980 . Integer)
    (_6994 . Void)
    (_6985 . Void)
    (tmp7004 . Integer)
    (vecinit6990 . Integer)
    (tmp7005 . Integer)
    (_6974 . Void)
    (tmp6999 Vector Integer Integer Integer)
    (_6991 . Void)
    (_6978 . Void)
    (tmp6996 . Integer)
    (vecinit6972 Vector Integer Integer Integer)
    (vecinit6989 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r14) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 1)
  '(stack-space . 48))
 (list
  (cons
   'block7006
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'alloc6969)
       (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969) (Var 'vecinit6972))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'vecinit6973) (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'alloc6969))
      (set (Var 'tmp6995))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 40) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 521) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r14) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'rbp -40) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r15 0) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 32)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7008
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'rdi))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 40) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7006))))
  (cons
   'block7007
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7006))))
  (cons
   'block7009
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'r11))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'alloc6979)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp6999)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'tmp7004)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'tmp7003)
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'tmp7005)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))
      (set
       (Var 'vecinit6973)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 0) (Reg 'r11)))
     (Instr 'sarq (list (Imm 1) (Reg 'r11)))
     (Instr 'andq (list (Imm 63) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rdx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 40) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7007)
     (Jmp 'block7008))))
  (cons
   'block7011
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Reg 'rsi)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Reg 'rdi))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7009))))
  (cons
   'block7010
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7009))))
  (cons
   'block7012
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Reg 'r11)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15) (Var 'alloc6987))
      (set (Var 'vecinit6971) (Var 'vecinit6972) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'tmp7001)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'tmp7002)
       (Var 'vecinit6982)
       (Var 'tmp7000))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))
      (set
       (Var 'vecinit6981)
       (Var 'vecinit6971)
       (Var 'vecinit6972)
       (Var 'vecinit6970)
       (Var 'vecinit6980)
       (Reg 'r15)
       (Var 'vecinit6982))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Deref 'r15 0)))
     (Instr 'movq (list (Imm 1) (Reg 'r13)))
     (Instr 'movq (list (Imm 2) (Reg 'r12)))
     (Instr 'movq (list (Imm 3) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 32) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block7010)
     (Jmp 'block7011))))
  (cons
   'block7014
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Reg 'rsi)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989)
       (Reg 'rdi))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7012))))
  (cons
   'block7013
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7012))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6970) (Reg 'r15))
      (set (Var 'vecinit6971) (Var 'vecinit6988) (Var 'vecinit6970) (Reg 'r15))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Var 'tmp6997)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'tmp6998)
       (Var 'tmp6996)
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))
      (set
       (Var 'vecinit6971)
       (Var 'vecinit6988)
       (Var 'vecinit6990)
       (Var 'vecinit6970)
       (Reg 'r15)
       (Var 'vecinit6989))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'r14)))
     (Instr 'movq (list (Imm 1) (Deref 'rbp -40)))
     (Instr 'movq (list (Imm 4) (Reg 'r13)))
     (Instr 'movq (list (Imm 5) (Reg 'r12)))
     (Instr 'movq (list (Imm 6) (Reg 'rbx)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'addq (list (Imm 32) (Reg 'rcx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rdx)))
     (Instr 'cmpq (list (Reg 'rdx) (Reg 'rcx)))
     (JmpIf 'l 'block7013)
     (Jmp 'block7014))))))


output:  @ utilities.rkt:2042
result:
4


testing @ utilities.rkt:2016
test-name:
"vectors_test_5"

expected-result:
4


type checker output: @ utilities.rkt:1999
(strip-has-type tsexp):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Int 2) (Int 42)))
   '(Vector Integer Integer Integer))
  (Let
   'w
   (HasType
    (Prim
     'vector
     (list (Bool #t) (Prim 'vector-ref (list (Var 'v) (Int 2))) (Int 3)))
    '(Vector Boolean Integer Integer))
   (Prim 'vector-ref (list (Var 'w) (Int 1))))))


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: shrink @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Int 2) (Int 42)))
   '(Vector Integer Integer Integer))
  (Let
   'w
   (HasType
    (Prim
     'vector
     (list (Bool #t) (Prim 'vector-ref (list (Var 'v) (Int 2))) (Int 3)))
    '(Vector Boolean Integer Integer))
   (Prim 'vector-ref (list (Var 'w) (Int 1))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v
  (HasType
   (Prim 'vector (list (Int 1) (Int 2) (Int 42)))
   '(Vector Integer Integer Integer))
  (Let
   'w
   (HasType
    (Prim
     'vector
     (list (Bool #t) (Prim 'vector-ref (list (Var 'v) (Int 2))) (Int 3)))
    '(Vector Boolean Integer Integer))
   (Prim 'vector-ref (list (Var 'w) (Int 1))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: uniquify @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v7019
  (HasType
   (Prim 'vector (list (Int 1) (Int 2) (Int 42)))
   '(Vector Integer Integer Integer))
  (Let
   'w7020
   (HasType
    (Prim
     'vector
     (list (Bool #t) (Prim 'vector-ref (list (Var 'v7019) (Int 2))) (Int 3)))
    '(Vector Boolean Integer Integer))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v7019
  (HasType
   (Prim 'vector (list (Int 1) (Int 2) (Int 42)))
   '(Vector Integer Integer Integer))
  (Let
   'w7020
   (HasType
    (Prim
     'vector
     (list (Bool #t) (Prim 'vector-ref (list (Var 'v7019) (Int 2))) (Int 3)))
    '(Vector Boolean Integer Integer))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: expose allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v7019
  (Let
   'vecinit7022
   (Int 1)
   (Let
    'vecinit7023
    (Int 2)
    (Let
     'vecinit7024
     (Int 42)
     (Let
      '_7028
      (If
       (Prim
        '<
        (list
         (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
         (GlobalValue 'fromspace_end)))
       (Void)
       (collect 32))
      (Let
       'alloc7021
       (allocate 3 (Vector Integer Integer Integer))
       (Let
        '_7027
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022)))
        (Let
         '_7026
         (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023)))
         (Let
          '_7025
          (Prim
           'vector-set!
           (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024)))
          (Var 'alloc7021)))))))))
  (Let
   'w7020
   (Let
    'vecinit7030
    (Bool #t)
    (Let
     'vecinit7031
     (Prim 'vector-ref (list (Var 'v7019) (Int 2)))
     (Let
      'vecinit7032
      (Int 3)
      (Let
       '_7036
       (If
        (Prim
         '<
         (list
          (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
          (GlobalValue 'fromspace_end)))
        (Void)
        (collect 32))
       (Let
        'alloc7029
        (allocate 3 (Vector Boolean Integer Integer))
        (Let
         '_7035
         (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030)))
         (Let
          '_7034
          (Prim
           'vector-set!
           (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031)))
          (Let
           '_7033
           (Prim
            'vector-set!
            (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032)))
           (Var 'alloc7029)))))))))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v7019
  (Let
   'vecinit7022
   (Int 1)
   (Let
    'vecinit7023
    (Int 2)
    (Let
     'vecinit7024
     (Int 42)
     (Let
      '_7028
      (If
       (Prim
        '<
        (list
         (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
         (GlobalValue 'fromspace_end)))
       (Void)
       (collect 32))
      (Let
       'alloc7021
       (allocate 3 (Vector Integer Integer Integer))
       (Let
        '_7027
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022)))
        (Let
         '_7026
         (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023)))
         (Let
          '_7025
          (Prim
           'vector-set!
           (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024)))
          (Var 'alloc7021)))))))))
  (Let
   'w7020
   (Let
    'vecinit7030
    (Bool #t)
    (Let
     'vecinit7031
     (Prim 'vector-ref (list (Var 'v7019) (Int 2)))
     (Let
      'vecinit7032
      (Int 3)
      (Let
       '_7036
       (If
        (Prim
         '<
         (list
          (Prim '+ (list (GlobalValue 'free_ptr) (Int 32)))
          (GlobalValue 'fromspace_end)))
        (Void)
        (collect 32))
       (Let
        'alloc7029
        (allocate 3 (Vector Boolean Integer Integer))
        (Let
         '_7035
         (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030)))
         (Let
          '_7034
          (Prim
           'vector-set!
           (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031)))
          (Let
           '_7033
           (Prim
            'vector-set!
            (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032)))
           (Var 'alloc7029)))))))))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: remove complex opera* @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(Program
 '()
 (Let
  'v7019
  (Let
   'vecinit7022
   (Int 1)
   (Let
    'vecinit7023
    (Int 2)
    (Let
     'vecinit7024
     (Int 42)
     (Let
      '_7028
      (If
       (Let
        'tmp7037
        (Let
         'tmp7038
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp7038) (Int 32))))
        (Let
         'tmp7039
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp7037) (Var 'tmp7039)))))
       (Void)
       (collect 32))
      (Let
       'alloc7021
       (allocate 3 (Vector Integer Integer Integer))
       (Let
        '_7027
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022)))
        (Let
         '_7026
         (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023)))
         (Let
          '_7025
          (Prim
           'vector-set!
           (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024)))
          (Var 'alloc7021)))))))))
  (Let
   'w7020
   (Let
    'vecinit7030
    (Bool #t)
    (Let
     'vecinit7031
     (Prim 'vector-ref (list (Var 'v7019) (Int 2)))
     (Let
      'vecinit7032
      (Int 3)
      (Let
       '_7036
       (If
        (Let
         'tmp7040
         (Let
          'tmp7041
          (GlobalValue 'free_ptr)
          (Prim '+ (list (Var 'tmp7041) (Int 32))))
         (Let
          'tmp7042
          (GlobalValue 'fromspace_end)
          (Prim '< (list (Var 'tmp7040) (Var 'tmp7042)))))
        (Void)
        (collect 32))
       (Let
        'alloc7029
        (allocate 3 (Vector Boolean Integer Integer))
        (Let
         '_7035
         (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030)))
         (Let
          '_7034
          (Prim
           'vector-set!
           (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031)))
          (Let
           '_7033
           (Prim
            'vector-set!
            (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032)))
           (Var 'alloc7029)))))))))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(Program
 '()
 (Let
  'v7019
  (Let
   'vecinit7022
   (Int 1)
   (Let
    'vecinit7023
    (Int 2)
    (Let
     'vecinit7024
     (Int 42)
     (Let
      '_7028
      (If
       (Let
        'tmp7037
        (Let
         'tmp7038
         (GlobalValue 'free_ptr)
         (Prim '+ (list (Var 'tmp7038) (Int 32))))
        (Let
         'tmp7039
         (GlobalValue 'fromspace_end)
         (Prim '< (list (Var 'tmp7037) (Var 'tmp7039)))))
       (Void)
       (collect 32))
      (Let
       'alloc7021
       (allocate 3 (Vector Integer Integer Integer))
       (Let
        '_7027
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022)))
        (Let
         '_7026
         (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023)))
         (Let
          '_7025
          (Prim
           'vector-set!
           (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024)))
          (Var 'alloc7021)))))))))
  (Let
   'w7020
   (Let
    'vecinit7030
    (Bool #t)
    (Let
     'vecinit7031
     (Prim 'vector-ref (list (Var 'v7019) (Int 2)))
     (Let
      'vecinit7032
      (Int 3)
      (Let
       '_7036
       (If
        (Let
         'tmp7040
         (Let
          'tmp7041
          (GlobalValue 'free_ptr)
          (Prim '+ (list (Var 'tmp7041) (Int 32))))
         (Let
          'tmp7042
          (GlobalValue 'fromspace_end)
          (Prim '< (list (Var 'tmp7040) (Var 'tmp7042)))))
        (Void)
        (collect 32))
       (Let
        'alloc7029
        (allocate 3 (Vector Boolean Integer Integer))
        (Let
         '_7035
         (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030)))
         (Let
          '_7034
          (Prim
           'vector-set!
           (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031)))
          (Let
           '_7033
           (Prim
            'vector-set!
            (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032)))
           (Var 'alloc7029)))))))))
   (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: explicate control @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(CProgram
 '()
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit7022) (Int 1))
    (Seq
     (Assign (Var 'vecinit7023) (Int 2))
     (Seq
      (Assign (Var 'vecinit7024) (Int 42))
      (Seq
       (Assign (Var 'tmp7038) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp7037) (Prim '+ (list (Var 'tmp7038) (Int 32))))
        (Seq
         (Assign (Var 'tmp7039) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp7037) (Var 'tmp7039)))
          (Goto 'block7047)
          (Goto 'block7048)))))))))
  (cons 'block7048 (Seq (collect 32) (Goto 'block7046)))
  (cons 'block7047 (Seq (Assign (Var '_7028) (Void)) (Goto 'block7046)))
  (cons
   'block7046
   (Seq
    (Assign (Var 'alloc7021) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_7027)
      (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022))))
     (Seq
      (Assign
       (Var '_7026)
       (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023))))
      (Seq
       (Assign
        (Var '_7025)
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024))))
       (Seq
        (Assign (Var 'v7019) (Var 'alloc7021))
        (Seq
         (Assign (Var 'vecinit7030) (Bool #t))
         (Seq
          (Assign
           (Var 'vecinit7031)
           (Prim 'vector-ref (list (Var 'v7019) (Int 2))))
          (Seq
           (Assign (Var 'vecinit7032) (Int 3))
           (Seq
            (Assign (Var 'tmp7041) (GlobalValue 'free_ptr))
            (Seq
             (Assign (Var 'tmp7040) (Prim '+ (list (Var 'tmp7041) (Int 32))))
             (Seq
              (Assign (Var 'tmp7042) (GlobalValue 'fromspace_end))
              (IfStmt
               (Prim '< (list (Var 'tmp7040) (Var 'tmp7042)))
               (Goto 'block7044)
               (Goto 'block7045))))))))))))))
  (cons 'block7045 (Seq (collect 32) (Goto 'block7043)))
  (cons 'block7044 (Seq (Assign (Var '_7036) (Void)) (Goto 'block7043)))
  (cons
   'block7043
   (Seq
    (Assign (Var 'alloc7029) (allocate 3 (Vector Boolean Integer Integer)))
    (Seq
     (Assign
      (Var '_7035)
      (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030))))
     (Seq
      (Assign
       (Var '_7034)
       (Prim 'vector-set! (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031))))
      (Seq
       (Assign
        (Var '_7033)
        (Prim 'vector-set! (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032))))
       (Seq
        (Assign (Var 'w7020) (Var 'alloc7029))
        (Return (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))))))))


type checking... @ utilities.rkt:2032

type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(CProgram
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer)))
 (list
  (cons
   'start
   (Seq
    (Assign (Var 'vecinit7022) (Int 1))
    (Seq
     (Assign (Var 'vecinit7023) (Int 2))
     (Seq
      (Assign (Var 'vecinit7024) (Int 42))
      (Seq
       (Assign (Var 'tmp7038) (GlobalValue 'free_ptr))
       (Seq
        (Assign (Var 'tmp7037) (Prim '+ (list (Var 'tmp7038) (Int 32))))
        (Seq
         (Assign (Var 'tmp7039) (GlobalValue 'fromspace_end))
         (IfStmt
          (Prim '< (list (Var 'tmp7037) (Var 'tmp7039)))
          (Goto 'block7047)
          (Goto 'block7048)))))))))
  (cons 'block7048 (Seq (collect 32) (Goto 'block7046)))
  (cons 'block7047 (Seq (Assign (Var '_7028) (Void)) (Goto 'block7046)))
  (cons
   'block7046
   (Seq
    (Assign (Var 'alloc7021) (allocate 3 (Vector Integer Integer Integer)))
    (Seq
     (Assign
      (Var '_7027)
      (Prim 'vector-set! (list (Var 'alloc7021) (Int 0) (Var 'vecinit7022))))
     (Seq
      (Assign
       (Var '_7026)
       (Prim 'vector-set! (list (Var 'alloc7021) (Int 1) (Var 'vecinit7023))))
      (Seq
       (Assign
        (Var '_7025)
        (Prim 'vector-set! (list (Var 'alloc7021) (Int 2) (Var 'vecinit7024))))
       (Seq
        (Assign (Var 'v7019) (Var 'alloc7021))
        (Seq
         (Assign (Var 'vecinit7030) (Bool #t))
         (Seq
          (Assign
           (Var 'vecinit7031)
           (Prim 'vector-ref (list (Var 'v7019) (Int 2))))
          (Seq
           (Assign (Var 'vecinit7032) (Int 3))
           (Seq
            (Assign (Var 'tmp7041) (GlobalValue 'free_ptr))
            (Seq
             (Assign (Var 'tmp7040) (Prim '+ (list (Var 'tmp7041) (Int 32))))
             (Seq
              (Assign (Var 'tmp7042) (GlobalValue 'fromspace_end))
              (IfStmt
               (Prim '< (list (Var 'tmp7040) (Var 'tmp7042)))
               (Goto 'block7044)
               (Goto 'block7045))))))))))))))
  (cons 'block7045 (Seq (collect 32) (Goto 'block7043)))
  (cons 'block7044 (Seq (Assign (Var '_7036) (Void)) (Goto 'block7043)))
  (cons
   'block7043
   (Seq
    (Assign (Var 'alloc7029) (allocate 3 (Vector Boolean Integer Integer)))
    (Seq
     (Assign
      (Var '_7035)
      (Prim 'vector-set! (list (Var 'alloc7029) (Int 0) (Var 'vecinit7030))))
     (Seq
      (Assign
       (Var '_7034)
       (Prim 'vector-set! (list (Var 'alloc7029) (Int 1) (Var 'vecinit7031))))
      (Seq
       (Assign
        (Var '_7033)
        (Prim 'vector-set! (list (Var 'alloc7029) (Int 2) (Var 'vecinit7032))))
       (Seq
        (Assign (Var 'w7020) (Var 'alloc7029))
        (Return (Prim 'vector-ref (list (Var 'w7020) (Int 1))))))))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: instruction selection @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))
  (cons
   'block7048
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'block7047
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7046
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7045
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7044
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7043
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer)))
 (list
  (cons
   'start
   (Block
    '()
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))
  (cons
   'block7048
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'block7047
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7046
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7045
   (Block
    '()
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7044
   (Block
    '()
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7043
   (Block
    '()
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: liveness analysis @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer)))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer)))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: build interference graph @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 '((locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer))
   (conflicts . #<unweighted-graph>))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7029)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7030) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7035)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7031) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7034)))
     (Instr 'movq (list (Var 'alloc7029) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7032) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7033)))
     (Instr 'movq (list (Var 'alloc7029) (Var 'w7020)))
     (Instr 'movq (list (Var 'w7020) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Var '_7036))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Var 'alloc7021)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7022) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Var '_7027)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7023) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Var '_7026)))
     (Instr 'movq (list (Var 'alloc7021) (Reg 'r11)))
     (Instr 'movq (list (Var 'vecinit7024) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Var '_7025)))
     (Instr 'movq (list (Var 'alloc7021) (Var 'v7019)))
     (Instr 'movq (list (Imm 1) (Var 'vecinit7030)))
     (Instr 'movq (list (Var 'v7019) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Var 'vecinit7031)))
     (Instr 'movq (list (Imm 3) (Var 'vecinit7032)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7041)))
     (Instr 'movq (list (Var 'tmp7041) (Var 'tmp7040)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7040)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7042)))
     (Instr 'cmpq (list (Var 'tmp7042) (Var 'tmp7040)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Var '_7028))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Var 'vecinit7022)))
     (Instr 'movq (list (Imm 2) (Var 'vecinit7023)))
     (Instr 'movq (list (Imm 42) (Var 'vecinit7024)))
     (Instr 'movq (list (Global 'free_ptr) (Var 'tmp7038)))
     (Instr 'movq (list (Var 'tmp7038) (Var 'tmp7037)))
     (Instr 'addq (list (Imm 32) (Var 'tmp7037)))
     (Instr 'movq (list (Global 'fromspace_end) (Var 'tmp7039)))
     (Instr 'cmpq (list (Var 'tmp7039) (Var 'tmp7037)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


running pass: register allocation @ utilities.rkt:2027

pass output:  @ utilities.rkt:2030
(strip-has-type new-p^):
(X86Program
 (list
  '(locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 32))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Imm 1) (Reg 'rbx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Reg 'r13)))
     (Instr 'movq (list (Imm 3) (Reg 'r12)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'rbx)))
     (Instr 'movq (list (Imm 2) (Reg 'r13)))
     (Instr 'movq (list (Imm 42) (Reg 'r12)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


type-check output:  @ utilities.rkt:2035
(strip-has-type new-p):
(X86Program
 (list
  '(locals-types
    (vecinit7024 . Integer)
    (_7025 . Void)
    (vecinit7023 . Integer)
    (alloc7029 Vector Boolean Integer Integer)
    (_7026 . Void)
    (_7036 . Void)
    (w7020 Vector Boolean Integer Integer)
    (vecinit7032 . Integer)
    (vecinit7022 . Integer)
    (_7033 . Void)
    (_7027 . Void)
    (tmp7037 . Integer)
    (tmp7038 . Integer)
    (tmp7039 . Integer)
    (vecinit7031 . Integer)
    (v7019 Vector Integer Integer Integer)
    (_7034 . Void)
    (tmp7040 . Integer)
    (_7028 . Void)
    (tmp7042 . Integer)
    (vecinit7030 . Boolean)
    (alloc7021 Vector Integer Integer Integer)
    (_7035 . Void)
    (tmp7041 . Integer))
  '(conflicts . #<unweighted-graph>)
  (cons 'used_callee (set (Reg 'r13) (Reg 'r12) (Reg 'rbx)))
  '(num-root-spills . 0)
  '(stack-space . 32))
 (list
  (cons
   'block7043
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r11))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'alloc7029)
       (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'vecinit7032) (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'alloc7029))
      (set (Var 'w7020))
      (set (Reg 'r11))
      (set)
      (set)))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 16) (Reg 'rax)))
     (Jmp 'conclusion))))
  (cons
   'block7044
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7043))))
  (cons
   'block7045
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'rdi))
      (set
       (Var 'vecinit7031)
       (Reg 'rsi)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'rdi))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7043))))
  (cons
   'block7046
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'r11))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'alloc7021)
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7023) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Var 'vecinit7024) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'alloc7021) (Reg 'r15))
      (set (Var 'v7019) (Reg 'r15))
      (set (Var 'v7019) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7030) (Reg 'r15) (Reg 'r11))
      (set (Var 'vecinit7031) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15)
       (Var 'tmp7041))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'tmp7040)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Var 'tmp7042)
       (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set (Var 'vecinit7031) (Var 'vecinit7032) (Var 'vecinit7030) (Reg 'r15))
      (set
       (Var 'vecinit7031)
       (Var 'vecinit7032)
       (Var 'vecinit7030)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Global 'free_ptr) (Reg 'r11)))
     (Instr 'addq (list (Imm 32) (Global 'free_ptr)))
     (Instr 'movq (list (Imm 7) (Deref 'r11 0)))
     (Instr 'movq (list (Reg 'r11) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'rbx) (Deref 'r11 8)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r13) (Deref 'r11 16)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Reg 'r12) (Deref 'r11 24)))
     (Instr 'movq (list (Imm 0) (Reg 'rdx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rcx)))
     (Instr 'movq (list (Imm 1) (Reg 'rbx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'r11)))
     (Instr 'movq (list (Deref 'r11 24) (Reg 'r13)))
     (Instr 'movq (list (Imm 3) (Reg 'r12)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7044)
     (Jmp 'block7045))))
  (cons
   'block7047
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list (Instr 'movq (list (Imm 0) (Reg 'rcx))) (Jmp 'block7046))))
  (cons
   'block7048
   (Block
    (list
     (list
      'live-sets
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set
       (Var 'vecinit7023)
       (Reg 'rsi)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15)
       (Reg 'rdi))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Reg 'r15) (Reg 'rdi)))
     (Instr 'movq (list (Imm 32) (Reg 'rsi)))
     (Callq 'collect 2)
     (Jmp 'block7046))))
  (cons
   'start
   (Block
    (list
     (list
      'live-sets
      (set (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Var 'tmp7038)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'tmp7039)
       (Var 'tmp7037)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set (Var 'vecinit7023) (Var 'vecinit7024) (Var 'vecinit7022) (Reg 'r15))
      (set
       (Var 'vecinit7023)
       (Var 'vecinit7024)
       (Var 'vecinit7022)
       (Reg 'r15))))
    (list
     (Instr 'movq (list (Imm 1) (Reg 'rbx)))
     (Instr 'movq (list (Imm 2) (Reg 'r13)))
     (Instr 'movq (list (Imm 42) (Reg 'r12)))
     (Instr 'movq (list (Global 'free_ptr) (Reg 'rcx)))
     (Instr 'movq (list (Reg 'rcx) (Reg 'rdx)))
     (Instr 'addq (list (Imm 32) (Reg 'rdx)))
     (Instr 'movq (list (Global 'fromspace_end) (Reg 'rcx)))
     (Instr 'cmpq (list (Reg 'rcx) (Reg 'rdx)))
     (JmpIf 'l 'block7047)
     (Jmp 'block7048))))))


output:  @ utilities.rkt:2042
result:
42


testing @ utilities.rkt:2016
test-name:
"vectors_test_6"

expected-result:
42


180 success(es) 0 failure(s) 0 error(s) 180 test(s) run
0
